package com.zpmc.ztos.infra.base.business.interfaces;

import com.zpmc.ztos.infra.base.common.model.PropertyKeyFactory;

public interface IExtensionPropertyKeys {

    public static final IPropertyKey ERROR_GROOVY_PARSE = PropertyKeyFactory.valueOf("ERROR_GROOVY_PARSE");
    public static final IPropertyKey ERROR_GROOVY_PARSE_NULL_CLASS = PropertyKeyFactory.valueOf("ERROR_GROOVY_PARSE_NULL_CLASS");
    public static final IPropertyKey ERROR_EXTENSION_UNSUPPORTED_TYPE = PropertyKeyFactory.valueOf("ERROR_EXTENSION_UNSUPPORTED_TYPE");
    public static final IPropertyKey ERROR_CREATING_EXTENSION_INSTANCE = PropertyKeyFactory.valueOf("ERROR_CREATING_EXTENSION_INSTANCE");
    public static final IPropertyKey ERROR_CODE_EXTENSION_EXECUTION_FAILED = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_EXECUTION_FAILED");
    public static final IPropertyKey ERROR_CODE_EXTENSION_GENERATED_VALIDATION = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_GENERATED_VALIDATION");
    public static final IPropertyKey ERROR_CODE_EXTENSION_GENERATED_VALIDATION_ENTITY_LC = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_GENERATED_VALIDATION_ENTITY_LC");
    public static final IPropertyKey ERROR_CODE_EXTENSION_GENERATED_ERROR = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_GENERATED_ERROR");
    public static final IPropertyKey ERROR_CODE_EXTENSION_NOT_VALID_INTERFACE = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_NOT_VALID_INTERFACE");
    public static final IPropertyKey ERROR_CODE_EXTENSION_NOT_VALID_SUBCLASS = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_NOT_VALID_SUBCLASS");
    public static final IPropertyKey ERROR_CODE_EXTENSION_NOT_VALID_TYPE = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_NOT_VALID_TYPE");
    public static final IPropertyKey ERROR_CODE_EXTENSION_INVALID = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_INVALID");
    public static final IPropertyKey ERROR_CODE_EXTENSION_ALL_DISABLED = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_ALL_DISABLED");
    public static final IPropertyKey ERROR_CODE_EXTENSION_PARSE_FAILURE = PropertyKeyFactory.valueOf("ERROR_CODE_EXTENSION_PARSE_FAILURE");
    public static final IPropertyKey LABEL__EXTENSION_IMPORT_FILE = PropertyKeyFactory.valueOf("LABEL__EXTENSION_IMPORT_FILE");
    public static final IPropertyKey LABEL__EXTENSION_EXPORT_FILE = PropertyKeyFactory.valueOf("LABEL__EXTENSION_EXPORT_FILE");
    public static final IPropertyKey LABEL__EXTENSION_EDIT_CONTENTS = PropertyKeyFactory.valueOf("LABEL__EXTENSION_EDIT_CONTENTS");
    public static final IPropertyKey LABEL__EXTENSION_IMPORT_FILE_CHOOSER_TITLE = PropertyKeyFactory.valueOf("LABEL__EXTENSION_IMPORT_FILE_CHOOSER_TITLE");
    public static final IPropertyKey LABEL__EXTENSION_EXPORT_FILE_CHOOSER_TITLE = PropertyKeyFactory.valueOf("LABEL__EXTENSION_EXPORT_FILE_CHOOSER_TITLE");
    public static final IPropertyKey DIALOG__EXTENSION_ERROR = PropertyKeyFactory.valueOf("DIALOG__EXTENSION_ERROR");
    public static final IPropertyKey ERROR__EXTENSION_IN_USE = PropertyKeyFactory.valueOf("ERROR__EXTENSION_IN_USE");
    public static final IPropertyKey ERROR__EXTENSION_SCOPE_CONFLICT = PropertyKeyFactory.valueOf("ERROR__EXTENSION_SCOPE_CONFLICT");
    public static final IPropertyKey ERROR__EXTENSION_OUT_OF_SCOPE = PropertyKeyFactory.valueOf("ERROR__EXTENSION_OUT_OF_SCOPE");
    public static final IPropertyKey ERROR__EXTENSION_IS_SYS_SEEDED = PropertyKeyFactory.valueOf("ERROR__EXTENSION_IS_SYS_SEEDED");
    public static final IPropertyKey INFO__EXTENSION_IS_SYS_SEEDED = PropertyKeyFactory.valueOf("INFO__EXTENSION_IS_SYS_SEEDED");
    public static final IPropertyKey INFO__EXTENSION_OUT_OF_SCOPE = PropertyKeyFactory.valueOf("INFO__EXTENSION_OUT_OF_SCOPE");
    public static final IPropertyKey ERROR__EXTENSION_FILE_NAME = PropertyKeyFactory.valueOf("ERROR__EXTENSION_FILE_NAME");
    public static final IPropertyKey ERROR__EXTENSION_LIBRARY_NAME = PropertyKeyFactory.valueOf("ERROR__EXTENSION_LIBRARY_NAME");
    public static final IPropertyKey ERROR__EXTENSION_FILE_IO_ERROR = PropertyKeyFactory.valueOf("ERROR__EXTENSION_FILE_IO_ERROR");
    public static final IPropertyKey ERROR__EXTENSION_LOAD_FAILED = PropertyKeyFactory.valueOf("ERROR__EXTENSION_LOAD_FAILED");
    public static final IPropertyKey ERROR__NON_SYS_EXTENSION_ALREADY_EXISTS = PropertyKeyFactory.valueOf("ERROR__NON_SYS_EXTENSION_ALREADY_EXISTS");
    public static final IPropertyKey ERROR__EXTENSION_LIBRARY_DISABLED = PropertyKeyFactory.valueOf("ERROR__EXTENSION_LIBRARY_DISABLED");
    public static final IPropertyKey ERROR__EXTENSION_LIBRARY_NOT_FOUND = PropertyKeyFactory.valueOf("ERROR__EXTENSION_LIBRARY_NOT_FOUND");
    public static final IPropertyKey ERROR__EXTENSION__DISABLED = PropertyKeyFactory.valueOf("ERROR__EXTENSION__DISABLED");
    public static final IPropertyKey ERROR__EXTENSION__NOT_FOUND = PropertyKeyFactory.valueOf("ERROR__EXTENSION__NOT_FOUND");
    public static final IPropertyKey ERROR__EXTENSION__OF_TYPE_NOT_FOUND = PropertyKeyFactory.valueOf("ERROR__EXTENSION__OF_TYPE_NOT_FOUND");
    public static final IPropertyKey ERROR__TRANSACTIONAL_EXTENSION__NOT_OF_CORRECT_TYPE = PropertyKeyFactory.valueOf("ERROR__TRANSACTIONAL_EXTENSION__NOT_OF_CORRECT_TYPE");
    public static final IPropertyKey ERROR__EXISTING_TRANSACTION_NOT_ALLOWED_FOR_EXTENSION = PropertyKeyFactory.valueOf("ERROR__EXISTING_TRANSACTION_NOT_ALLOWED_FOR_EXTENSION");
    public static final IPropertyKey ERROR__UNEXPECTED_ERROR_DURING_TRANSACTIONAL_EXTENSION = PropertyKeyFactory.valueOf("ERROR__UNEXPECTED_ERROR_DURING_TRANSACTIONAL_EXTENSION");
    public static final IPropertyKey ERROR__UNEXPECTED_NON_BUSINESS_ERROR_DURING_TRANSACTION = PropertyKeyFactory.valueOf("ERROR__UNEXPECTED_NON_BUSINESS_ERROR_DURING_TRANSACTION");
    public static final IPropertyKey ERROR__EXTENSION__EXECUTION_FAILED = PropertyKeyFactory.valueOf("ERROR__EXTENSION__EXECUTION_FAILED");
    public static final IPropertyKey LABEL__EDIT_EXTENSION_TRIGGER = PropertyKeyFactory.valueOf("LABEL__EDIT_EXTENSION_TRIGGER");
    public static final IPropertyKey DIALOG__EXTENSION_TRIGGER_ERROR = PropertyKeyFactory.valueOf("DIALOG__EXTENSION_TRIGGER_ERROR");
    public static final IPropertyKey ERROR__EXTENSION_TRIGGER_OUT_OF_SCOPE = PropertyKeyFactory.valueOf("ERROR__EXTENSION_TRIGGER_OUT_OF_SCOPE");
    public static final IPropertyKey ERROR__EXTENSION_TRIGGER_SCOPE_MISMATCH = PropertyKeyFactory.valueOf("ERROR__EXTENSION_TRIGGER_SCOPE_MISMATCH");
    public static final IPropertyKey MENU__TEST_TABLE_VIEW_CMD_EXTENSION = PropertyKeyFactory.valueOf("MENU__TEST_TABLE_VIEW_CMD_EXTENSION");
    public static final IPropertyKey LABEL__TEST_TABLE_VIEW_CMD_EXTENSION = PropertyKeyFactory.valueOf("LABEL__TEST_TABLE_VIEW_CMD_EXTENSION");
    public static final IPropertyKey HELP__TEST_TABLE_VIEW_CMD_EXTENSION = PropertyKeyFactory.valueOf("HELP__TEST_TABLE_VIEW_CMD_EXTENSION");
    public static final IPropertyKey WARN__EXTENSION_NOT_FOUND = PropertyKeyFactory.valueOf("WARN__EXTENSION_NOT_FOUND");
    public static final IPropertyKey WARN__NO_EXTENSIONS_FOUND = PropertyKeyFactory.valueOf("WARN__NO_EXTENSIONS_FOUND");
    public static final IPropertyKey ERROR_CREATING_EXTENSION_LOV = PropertyKeyFactory.valueOf("ERROR_CREATING_EXTENSION_LOV");
    public static final IPropertyKey ERROR_EXTENSION_LOV_BAD_URL = PropertyKeyFactory.valueOf("ERROR_EXTENSION_LOV_BAD_URL");
    public static final IPropertyKey ERROR__MODEL_EXTENSION__BAD_DDL = PropertyKeyFactory.valueOf("ERROR__MODEL_EXTENSION__BAD_DDL");
    public static final IPropertyKey ERROR__MODEL_EXTENSION__HIBERNATE_XML_FAILED = PropertyKeyFactory.valueOf("ERROR__MODEL_EXTENSION__HIBERNATE_XML_FAILED");
    public static final IPropertyKey ERROR_VALIDATION_ENABLE_SNAPSHOT_FOR_UPGRADE = PropertyKeyFactory.valueOf("ERROR_VALIDATION_ENABLE_SNAPSHOT_FOR_UPGRADE");
    public static final IPropertyKey ERROR_VALIDATION_NAMING_PREFIX = PropertyKeyFactory.valueOf("ERROR_VALIDATION_NAMING_PREFIX");
    public static final IPropertyKey ERROR_VALIDATION_NAMING_PREFIX_WITHOUT_SUFFIX = PropertyKeyFactory.valueOf("ERROR_VALIDATION_NAMING_PREFIX_WITHOUT_SUFFIX");
    public static final IPropertyKey ERROR_VALIDATION_CUSTOM_ENTITY_NAME = PropertyKeyFactory.valueOf("ERROR_VALIDATION_CUSTOM_ENTITY_NAME");
    public static final IPropertyKey ERROR_CANNOT_DELETE_PERSISTENCE_EVENTS_WITH_SQL = PropertyKeyFactory.valueOf("ERROR_CANNOT_DELETE_PERSISTENCE_EVENTS_WITH_SQL");
    public static final IPropertyKey ERROR_CANNOT_DELETE_APPLIED_SNAPSHOTS = PropertyKeyFactory.valueOf("ERROR_CANNOT_DELETE_APPLIED_SNAPSHOTS");
    public static final IPropertyKey WARN_RELOAD_SESSION_FACTORY_TITLE = PropertyKeyFactory.valueOf("WARN_RELOAD_SESSION_FACTORY_TITLE");
    public static final IPropertyKey WARN_RELOAD_SESSION_FACTORY = PropertyKeyFactory.valueOf("WARN_RELOAD_SESSION_FACTORY");
    public static final IPropertyKey SUMMARY_EXTENSIONS_COMPILATION = PropertyKeyFactory.valueOf("SUMMARY_EXTENSIONS_COMPILATION");
    public static final IPropertyKey CODE_EXTENSIONS_COMPILATION_SUCCESS = PropertyKeyFactory.valueOf("CODE_EXTENSIONS_COMPILATION_SUCCESS");
    public static final IPropertyKey FAILURE__TRIGGER_HAS_INVALID_SCOPE = PropertyKeyFactory.valueOf("FAILURE__TRIGGER_HAS_INVALID_SCOPE");
    public static final IPropertyKey ERROR_ACTION_UNSUPPORTED_TYPE = PropertyKeyFactory.valueOf("ERROR_ACTION_UNSUPPORTED_TYPE");
    public static final IPropertyKey ERROR_EXPORT_UNSUPPORTED_TYPE_FROM_THIS_SCREEN = PropertyKeyFactory.valueOf("ERROR_EXPORT_UNSUPPORTED_TYPE_FROM_THIS_SCREEN");
    public static final IPropertyKey ERROR_EXPORT_UNSUPPORTED_TYPE = PropertyKeyFactory.valueOf("ERROR_EXPORT_UNSUPPORTED_TYPE");
    public static final IPropertyKey WARN_EXPORT_UNSUPPORTED_TYPES_INCOMPLETE = PropertyKeyFactory.valueOf("WARN_EXPORT_UNSUPPORTED_TYPES_INCOMPLETE");
    public static final IPropertyKey WARN_EXPORT_TITLE = PropertyKeyFactory.valueOf("WARN_EXPORT_TITLE");
    public static final IPropertyKey ERROR_REST_API_NOT_ENABLED = PropertyKeyFactory.valueOf("ERROR_REST_API_NOT_ENABLED");
    public static final IPropertyKey ERROR_USER_NO_PRIVS_FOR_REST_API = PropertyKeyFactory.valueOf("ERROR_USER_NO_PRIVS_FOR_REST_API");
    public static final IPropertyKey UQ_NOT_ENABLED = PropertyKeyFactory.valueOf("UQ_NOT_ENABLED");
    public static final IPropertyKey ERROR__EXTENSION_VERSION_CONFLICT = PropertyKeyFactory.valueOf("ERROR__EXTENSION_VERSION_CONFLICT");

}
