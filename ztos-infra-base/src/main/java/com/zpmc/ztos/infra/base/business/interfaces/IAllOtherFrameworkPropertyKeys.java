package com.zpmc.ztos.infra.base.business.interfaces;

import com.zpmc.ztos.infra.base.common.model.PropertyKeyFactory;

public interface IAllOtherFrameworkPropertyKeys {
    public static final IPropertyKey FAILURE__NAVIS = PropertyKeyFactory.keyWithFormat("FAILURE__NAVIS", "Navis exception: {0}.");
    public static final IPropertyKey FAILURE__SYSTEM = PropertyKeyFactory.keyWithFormat("FAILURE__SYSTEM", "System exception occurred: class={0}, message={1}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__NO_TRANSLATION = PropertyKeyFactory.keyWithFormat("FAILURE__NO_TRANSLATION", "An error occurred with code {0} (no translation available). Parameters are [{1}:{2}:{3}:{4}].");
    public static final IPropertyKey FAILURE__NO_TRANSLATION_FIELD = PropertyKeyFactory.keyWithFormat("FAILURE__NO_TRANSLATION_FIELD", "An error occurred with code {0} in field {1} (no translation available). Parameters are [{2}:{3}:{4}].");
    public static final IPropertyKey FAILURE__HOST = PropertyKeyFactory.keyWithFormat("FAILURE__HOST", "Host error: {1} (no translation available).");
    public static final IPropertyKey FAILURE__CONNECTION = PropertyKeyFactory.keyWithFormat("FAILURE__CONNECTION", "Connection error. No session is tied to the connection.");
    public static final IPropertyKey FAILURE__BIZREQUEST = PropertyKeyFactory.keyWithFormat("FAILURE__BIZREQUEST", "Request failed - malformed BizRequest {0}");
    public static final IPropertyKey FAILURE__CAN_NOT_RESOLVE_ATOM = PropertyKeyFactory.keyWithFormat("FAILURE__CAN_NOT_RESOLVE_ATOM", "Could not resolve Atom for field {0}. Input value was {1}. GuiMetafields configged properly?");
    public static final IPropertyKey FAILURE__CAN_NOT_INSTANTIATE_ENTITY = PropertyKeyFactory.keyWithFormat("FAILURE__CAN_NOT_INSTANTIATE_ENTITY", "Could not instantiate an entity with name {0}. Perhaps an invalid entity name?");
    public static final IPropertyKey FAILURE__FIND_BY_PK = PropertyKeyFactory.keyWithFormat("FAILURE__FIND_BY_PK", "Find by primary key failed, class={0}, key={1}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__FINDER = PropertyKeyFactory.keyWithFormat("FAILURE__FINDER", "Find method failed, class={0}, value={1}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__CREATE = PropertyKeyFactory.keyWithFormat("FAILURE__CREATE", "Create failure for entity={0}, key={1}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__UPDATE = PropertyKeyFactory.keyWithFormat("FAILURE__UPDATE", "Update failure for entity={0}, field={1}, value={2}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__UPDATE_STALE = PropertyKeyFactory.keyWithFormat("FAILURE__UPDATE_STALE", "Update failed because another user or background process updated this value before you saved the form.  Attempt to change {0} from {1} to {2}, but Database has value {3}.");
    public static final IPropertyKey FAILURE__OBJECT_GONE = PropertyKeyFactory.keyWithFormat("FAILURE__OBJECT_GONE", "Requested object missing, class={0}, key={1}: The object was deleted since the time it was last viewed.");
    public static final IPropertyKey FAILURE__OBJECT_ALREADY_DELETED_DO_REFRESH = PropertyKeyFactory.keyWithFormat("FAILURE__OBJECT_ALREADY_DELETED_DO_REFRESH", "Requested item may have been deleted. Please refresh your view.");
    public static final IPropertyKey FAILURE__UPDATE_ATTEMPTED_CHANGE = PropertyKeyFactory.keyWithFormat("FAILURE__UPDATE_ATTEMPTED_CHANGE", "You were trying to change field={0} into value={1}.");
    public static final IPropertyKey FAILURE__DELETE = PropertyKeyFactory.keyWithFormat("FAILURE__DELETE", "Delete failure for class={0}, object={1}, root cause={2} / {3}.");
    public static final IPropertyKey FAILURE__LOV_SERVICE_TOO_MANY = PropertyKeyFactory.keyWithFormat("FAILURE__LOV_SERVICE_TOO_MANY", "Too many items to display; refine the search.");
    public static final IPropertyKey FAILURE__LOV_SERVICE_ERROR = PropertyKeyFactory.keyWithFormat("FAILURE__LOV_SERVICE_ERROR", "Serious problem obtaining list. Contact administrator.");
    public static final IPropertyKey FAILURE__LOV_SERVICE_NONE = PropertyKeyFactory.keyWithFormat("FAILURE__LOV_SERVICE_NONE", "No items found.");
    public static final IPropertyKey FAILURE__UPGRADE = PropertyKeyFactory.keyWithFormat("FAILURE__UPGRADE", "Upgrade failed.");
    public static final IPropertyKey FAILURE__UPGRADE_ACTION = PropertyKeyFactory.keyWithFormat("FAILURE__UPGRADE_ACTION", "nn*******************************************************nFATAL SCHEMA UPGRADE ERRORS HAVE OCCURRED.n Your application  server will not start up.nSee errors in this log or frm_upgrade_action_history database table. The following actions failed:n{0}n*******************************************************n");
    public static final IPropertyKey FAILURE__SHOULD_NOT_UPGRADE = PropertyKeyFactory.keyWithFormat("FAILURE__SHOULD_NOT_UPGRADE", "The software is trying to upgrade the database when database protection is enabled.");
    public static final IPropertyKey FAILURE__LICENSING = PropertyKeyFactory.keyWithFormat("FAILURE__LICENSING", "Some failure in licensing. See errors in log.");
    public static final IPropertyKey FAILURE__CREATE_REQUEST_CONTEXT = PropertyKeyFactory.keyWithFormat("FAILURE__CREATE_REQUEST_CONTEXT", "Request Context Factory has not been initialized properly: user context not set.");
    public static final IPropertyKey FAILURE__SWITCH_TO_CHILD_CONTEXT = PropertyKeyFactory.keyWithFormat("FAILURE__SWITCH_TO_CHILD_CONTEXT", "Current login (main) request context does not exist or is invalid.");
    public static final IPropertyKey FAILURE__RESET_TO_ORIGINAL_CONTEXT = PropertyKeyFactory.keyWithFormat("FAILURE__RESET_TO_ORIGINAL_CONTEXT", "Invalid Presentation tier method call. Request context needs to be an instance of IRichUiRequestContext.");
    public static final IPropertyKey FRAMEWORK__ILLEGAL_ACCESS = PropertyKeyFactory.keyWithFormat("FRAMEWORK__ILLEGAL_ACCESS", "Attempt to access a field of class {0} that is uninitialized.");
    public static final IPropertyKey FRAMEWORK__NO_LONGER_SUPPORTED = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NO_LONGER_SUPPORTED", "A method was invoked that is no longer supported: {0}");
    public static final IPropertyKey FRAMEWORK__OVERRIDE_REQUIRED = PropertyKeyFactory.keyWithFormat("FRAMEWORK__OVERRIDE_REQUIRED", "Call to a base method of class {0} that should have been overridden.");
    public static final IPropertyKey FRAMEWORK__UNIT_NOT_SUPPORTED = PropertyKeyFactory.keyWithFormat("FRAMEWORK__UNIT_NOT_SUPPORTED", "Unit conversion not supported for unit {0} of intended measure {1}");
    public static final IPropertyKey FRAMEWORK__UNIT_NOT_KNOWN = PropertyKeyFactory.keyWithFormat("FRAMEWORK__UNIT_NOT_KNOWN", "The unit {1} is not recognized. Please enter the value in {2}.");
    public static final IPropertyKey FRAMEWORK__UNIT_INVALID_FORMAT = PropertyKeyFactory.keyWithFormat("FRAMEWORK__UNIT_INVALID_FORMAT", "The entered text {0} is not a valid format. Supported units are {1}.");
    public static final IPropertyKey FRAMEWORK__UNIT_FIELD_INVALID_FORMAT = PropertyKeyFactory.keyWithFormat("FRAMEWORK__UNIT_FIELD_INVALID_FORMAT", "The entered text {0} is not a valid format for field {1}. Supported units are {2}.");
    public static final IPropertyKey FRAMEWORK__UNIT_SUPPORTED_FORMATS = PropertyKeyFactory.keyWithFormat("FRAMEWORK__UNIT_SUPPORTED_FORMATS", "Enter a value followed by one of the supported units: {0}. If no units are specified, {1} is assumed.");
    public static final IPropertyKey FRAMEWORK__INVALID_REQUEST_DOC = PropertyKeyFactory.keyWithFormat("FRAMEWORK__INVALID_REQUEST_DOC", "Attempt to create a BizRequest with an invalid XML request document.");
    public static final IPropertyKey FRAMEWORK__RESPONSE_OVERWRITE = PropertyKeyFactory.keyWithFormat("FRAMEWORK__RESPONSE_OVERWRITE", "Call would have wiped-out existing query result structure. Input was: {0}.");
    public static final IPropertyKey FRAMEWORK__NO_QUERY_RESULTS = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NO_QUERY_RESULTS", "Attempt to access QueryResults in BizResponse, but there are none.");
    public static final IPropertyKey FRAMEWORK__INVALID_USER_CONTEXT = PropertyKeyFactory.keyWithFormat("FRAMEWORK__INVALID_USER_CONTEXT", "Attempt to process a BizRequest without the proper UserContext: {0}.");
    public static final IPropertyKey FRAMEWORK__CANNOT_ADD_ORG_TO_GROUP = PropertyKeyFactory.keyWithFormat("FRAMEWORK__CANNOT_ADD_ORG_TO_GROUP", "Cannot add Organization of type [{0}] to a group of type [{1}].");
    public static final IPropertyKey FRAMEWORK__CANNOT_MODIFY_GROUP_TYPE = PropertyKeyFactory.keyWithFormat("FRAMEWORK__CANNOT_MODIFY_GROUP_TYPE", "Group Type cannot be modified for a group which contain member organizations.");
    public static final IPropertyKey FRAMEWORK__ENTITY_NOT_IN_SCOPE = PropertyKeyFactory.keyWithFormat("FRAMEWORK__ENTITY_NOT_IN_SCOPE", "User {0} attempted to update an entity of class {1} not in his scope.");
    public static final IPropertyKey FRAMEWORK__NO_SCOPE_DEFINED = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NO_SCOPE_DEFINED", "User {0} attempted to create an entity of class {1} but there is no EntitySetUse for this defined in the user's scope.        ");
    public static final IPropertyKey FRAMEWORK__CAN_NOT_PARSE_DATE = PropertyKeyFactory.keyWithFormat("FRAMEWORK__CAN_NOT_PARSE_DATE", "The string {0} is not a valid date format. (Intended field was {1})");
    public static final IPropertyKey FRAMEWORK__WRONG_TYPE_FOR_FIELD = PropertyKeyFactory.keyWithFormat("FRAMEWORK__WRONG_TYPE_FOR_FIELD", "Attempt to fetch field {1} from {0} as a {2}");
    public static final IPropertyKey FRAMEWORK__STATE_ALREADY_EXISTS_FOR_COUNTRY = PropertyKeyFactory.keyWithFormat("FRAMEWORK__STATE_ALREADY_EXISTS_FOR_COUNTRY", "State with code [{0}] already exists for country [{1}]");
    public static final IPropertyKey FRAMEWORK__NO_TRANSACTION_PARMS = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NO_TRANSACTION_PARMS", "Attempt to obtain transaction parms, but none bound to current thread.");
    public static final IPropertyKey FRAMEWORK__SESSION_ALREADY_BOUND = PropertyKeyFactory.keyWithFormat("FRAMEWORK__SESSION_ALREADY_BOUND", "Session or transaction parameters are already bound from a previous request. Caller must close all previous sessions and transactions.");
    public static final IPropertyKey FRAMEWORK__REQUIRED_PARM_NOT_FOUND = PropertyKeyFactory.keyWithFormat("FRAMEWORK__REQUIRED_PARM_NOT_FOUND", "The required parameter {0} was not found in the TransactionParms. Probably not passed in BizRequest.");
    public static final IPropertyKey FRAMEWORK__NON_UNIQUE_RESULT = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NON_UNIQUE_RESULT", "A DomainQuery returned {0} results, but a unique result was expected by the caller. Query was: {1}.");
    public static final IPropertyKey CRUD__CREATE__DUPLICATE_KEY_EXCEPTION = PropertyKeyFactory.keyWithFormat("CRUD__CREATE__DUPLICATE_KEY_EXCEPTION", "Duplicate primary key: A {1} with {0} {2} already exists.");
    public static final IPropertyKey CRUD__INVALID_FIELD_ID = PropertyKeyFactory.keyWithFormat("CRUD__INVALID_FIELD_ID", "Attempt to set field {0} which is not a valid field of entity {1}.");
    public static final IPropertyKey CRUD__INVALID_TASK_CODE = PropertyKeyFactory.keyWithFormat("CRUD__INVALID_TASK_CODE", "An invalid task constant was passed to processCrud = {0}.");
    public static final IPropertyKey CRUD__NO_FIND_BY_PK_METHOD = PropertyKeyFactory.keyWithFormat("CRUD__NO_FIND_BY_PK_METHOD", "Introspection could not find a findByPrimaryKey methods for class {0}");
    public static final IPropertyKey CRUD__NO_HOME_REF = PropertyKeyFactory.keyWithFormat("CRUD__NO_HOME_REF", "Service Lookup could not find a Home reference for Class {0}");
    public static final IPropertyKey CRUD__PROBLEM_WITH_FIND_BY_P_K = PropertyKeyFactory.keyWithFormat("CRUD__PROBLEM_WITH_FIND_BY_P_K", "Find by primary key method failed for Class {0}, key value = {1}");
    public static final IPropertyKey CRUD__INVALID_FIELD_VALUE = PropertyKeyFactory.keyWithFormat("CRUD__INVALID_FIELD_VALUE", "The value entered for {0}, {1}, is invalid.");
    public static final IPropertyKey REFERENCE__DUPLICATE_STATE = PropertyKeyFactory.keyWithFormat("REFERENCE__DUPLICATE_STATE", "Duplicate State {0} {1}. A state is already defined with this {0}.");
    public static final IPropertyKey CRUD__INVALID_RELATIONSHIP_FIELD = PropertyKeyFactory.keyWithFormat("CRUD__INVALID_RELATIONSHIP_FIELD", "The field {0} does not seem to define a one-to-many relationship.");
    public static final IPropertyKey CRUD__DUPLICATE_NATURAL_KEY = PropertyKeyFactory.keyWithFormat("CRUD__DUPLICATE_NATURAL_KEY", "A record already exists with the value {1} for {0}.");
    public static final IPropertyKey CRUD__FIELD_REQUIRED = PropertyKeyFactory.keyWithFormat("CRUD__FIELD_REQUIRED", "{0} is required.");
    public static final IPropertyKey CRUD__FIELD_MUST_BE_NULL = PropertyKeyFactory.keyWithFormat("CRUD__FIELD_MUST_BE_NULL", "{0} should be empty");
    public static final IPropertyKey CRUD__FIELD_IMMUTABLE = PropertyKeyFactory.keyWithFormat("CRUD__FIELD_IMMUTABLE", "{0} may not be modified");
    public static final IPropertyKey VALIDATION__INVALID_LONG_STRING = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_LONG_STRING", "The entered value {1} is not allowed for {0}. Please enter a valid whole number.");
    public static final IPropertyKey VALIDATION__INVALID_LONG_OBJECT = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_LONG_OBJECT", "The entered value {1} is not allowed for {0}. Please enter a valid Long object (System Error?).");
    public static final IPropertyKey VALIDATION__INVALID_BOOLEAN_OBJECT = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_BOOLEAN_OBJECT", "The entered value {1} is not allowed for {0}. Please enter a valid Boolean object (System Error?).");
    public static final IPropertyKey VALIDATION__INVALID_DOUBLE_STRING = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_DOUBLE_STRING", "The entered value {1} is not allowed for {0}. Please enter a valid decimal number.");
    public static final IPropertyKey VALIDATION__INVALID_DOUBLE_OBJECT = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_DOUBLE_OBJECT", "The entered value {1} is not allowed for {0}. Please enter a valid Double object (System Error?).        ");
    public static final IPropertyKey VALIDATION__STRING_TOO_LONG = PropertyKeyFactory.keyWithFormat("VALIDATION__STRING_TOO_LONG", "The entered value {1} is not allowed for {0}. The maximum length for this field is {2}.        ");
    public static final IPropertyKey VALIDATION__NO_LABEL_STRING_TOO_LONG = PropertyKeyFactory.keyWithFormat("VALIDATION__NO_LABEL_STRING_TOO_LONG", "The entered value {0} is not allowed. The maximum length for this field is {1}.        ");
    public static final IPropertyKey VALIDATION__STRING_TOO_SHORT = PropertyKeyFactory.keyWithFormat("VALIDATION__STRING_TOO_SHORT", "The entered value {1} is not allowed for {0}. The minimum length for this field is {2}.        ");
    public static final IPropertyKey VALIDATION__PATTERN = PropertyKeyFactory.keyWithFormat("VALIDATION__PATTERN", "The entered value {1} is not allowed for {0}. Please enter a value that matches the pattern {2}.        ");
    public static final IPropertyKey VALIDATION__PATTERN_ALTERNATE_ERROR_MSG = PropertyKeyFactory.keyWithFormat("VALIDATION__PATTERN_ALTERNATE_ERROR_MSG", "The entered value {1} is not allowed for {0}.n{2}        ");
    public static final IPropertyKey VALIDATION__ALPHA = PropertyKeyFactory.keyWithFormat("VALIDATION__ALPHA", "The entered value {1} is not allowed for {0}. Please enter a value containing only letters.        ");
    public static final IPropertyKey VALIDATION__ALPHA_SPACE = PropertyKeyFactory.keyWithFormat("VALIDATION__ALPHA_SPACE", "The entered value {1} is not allowed for {0}. Please enter a value containing only letters and spaces.        ");
    public static final IPropertyKey VALIDATION__ALPHA_NUMERIC = PropertyKeyFactory.keyWithFormat("VALIDATION__ALPHA_NUMERIC", "The entered value {1} is not allowed for {0}. Please enter a value containing only letters and numbers.        ");
    public static final IPropertyKey VALIDATION__ALPHA_NUMERIC_SPACE = PropertyKeyFactory.keyWithFormat("VALIDATION__ALPHA_NUMERIC_SPACE", "The entered value {1} is not allowed for {0}. Please enter a value containing only letters, numbers and spaces.        ");
    public static final IPropertyKey VALIDATION__NOT_IN_RANGE = PropertyKeyFactory.keyWithFormat("VALIDATION__NOT_IN_RANGE", "The entered value {1} is not allowed for {0}. Please enter a value between {2} and {3}.        ");
    public static final IPropertyKey VALIDATION__EXCEEDS_MAXVALUE = PropertyKeyFactory.keyWithFormat("VALIDATION__EXCEEDS_MAXVALUE", "The entered value {1} is not allowed for {0}. Please enter a value less than or equal to {2}.        ");
    public static final IPropertyKey VALIDATION__SUBCEEDS_MINVALUE = PropertyKeyFactory.keyWithFormat("VALIDATION__SUBCEEDS_MINVALUE", "The entered value {1} is not allowed for {0}. Please enter a value greater than or equal to {2}.        ");
    public static final IPropertyKey VALIDATION__SUBCEEDS_MIN_FRACTIONAL_DIGITS = PropertyKeyFactory.keyWithFormat("VALIDATION__SUBCEEDS_MIN_FRACTIONAL_DIGITS", "The number of fractional digits for {1} are not allowed for {0}. Please enter fractional digits greater than or equal to {2}.        ");
    public static final IPropertyKey VALIDATION__EXCEEDS_MAX_FRACTIONAL_DIGITS = PropertyKeyFactory.keyWithFormat("VALIDATION__EXCEEDS_MAX_FRACTIONAL_DIGITS", "The number of fractional digits for {1} are not allowed for {0}. Please enter fractional digits less than or equal to {2}.        ");
    public static final IPropertyKey VALIDATION__INVALID_DATE_OBJECT = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_DATE_OBJECT", "Attempt to assign an invalid object ({0}) to a field requiring a date.");
    public static final IPropertyKey VALIDATION__INVALID_DATE_STRING = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_DATE_STRING", "Invalid date entry for {0}. Please enter a valid date formatted as {1}.");
    public static final IPropertyKey VALIDATION__INVALID_DATETIME = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_DATETIME", "Invalid date time entry for {0}. It may have been caused by a daylight savings time gap.");
    public static final IPropertyKey VALIDATION__INVALID_TIME_STRING = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_TIME_STRING", "Invalid time entry for {0}. Please enter a valid time formatted as {1}.");
    public static final IPropertyKey VALIDATION__DATE_UNREASONABLY_EARLY = PropertyKeyFactory.keyWithFormat("VALIDATION__DATE_UNREASONABLY_EARLY", "Date field {0} cannot be earlier than about {1} years before today.");
    public static final IPropertyKey VALIDATION__DATE_UNREASONABLY_LATE = PropertyKeyFactory.keyWithFormat("VALIDATION__DATE_UNREASONABLY_LATE", "Date field {0} cannot be later than about {1} years from today.");
    public static final IPropertyKey VALIDATION__DATE_TIME_FIELD_INCOMPLETE = PropertyKeyFactory.keyWithFormat("VALIDATION__DATE_TIME_FIELD_INCOMPLETE", "Date time field is incomplete: Enter a date value for {0}.");
    public static final IPropertyKey VALIDATION__REQUIRED_FIELD = PropertyKeyFactory.keyWithFormat("VALIDATION__REQUIRED_FIELD", "Required field missing: Enter a value for {0}.");
    public static final IPropertyKey VALIDATION__ERROR = PropertyKeyFactory.keyWithFormat("VALIDATION__ERROR", "Validation Error");
    public static final IPropertyKey VALIDATION__INVALID_XML = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_XML", "Invalid XML with error: {0}");
    public static final IPropertyKey VALIDATION__DUPLICATE = PropertyKeyFactory.keyWithFormat("VALIDATION__DUPLICATE", "{0}, entered value {1}: Duplicate value entered.");
    public static final IPropertyKey VALIDATION__NOT_IN_LOV = PropertyKeyFactory.keyWithFormat("VALIDATION__NOT_IN_LOV", "You entered {1} for the {0} field, which is not a valid choice. Please enter or select a choice in the provided field list.");
    public static final IPropertyKey VALIDATION__INTERCEPTION__UNCHECKED_EXCEPTION = PropertyKeyFactory.keyWithFormat("VALIDATION__INTERCEPTION__UNCHECKED_EXCEPTION", "Unexpected system error occurred during validation interception: {0}");
    public static final IPropertyKey VALIDATION__INVALID_URL_QUERY_PARAMETER_STRING = PropertyKeyFactory.keyWithFormat("VALIDATION__INVALID_URL_QUERY_PARAMETER_STRING", "Invalid parameter string syntax. Use URL Query Syntax, e.g.,nparam1=value1nparam1=value&param2=value2n...");
    public static final IPropertyKey CUSTOM_FIELD__NOT_IN_MFD = PropertyKeyFactory.keyWithFormat("CUSTOM_FIELD__NOT_IN_MFD", "Custom field {0} was not in the scoped metafield dictionary.");
    public static final IPropertyKey CUSTOM_FIELD__CODED_VALUE_NOT_IN_LOV = PropertyKeyFactory.keyWithFormat("CUSTOM_FIELD__CODED_VALUE_NOT_IN_LOV", "{0}, entered value {1}: Not one of the available values.");
    public static final IPropertyKey CUSTOM_FIELD__CANNOT_BE_CONVERTED = PropertyKeyFactory.keyWithFormat("CUSTOM_FIELD__CANNOT_BE_CONVERTED", "Custom field {0} cannot be converted from object {1} (type mismatch)");
    public static final IPropertyKey THREAD__INTERRUPTED_DURING_INTERCEPTION = PropertyKeyFactory.keyWithFormat("THREAD__INTERRUPTED_DURING_INTERCEPTION", "Thread interrupted during entity interception.");
    public static final IPropertyKey SERVICELOOKUP__FAILED = PropertyKeyFactory.keyWithFormat("SERVICELOOKUP__FAILED", "Unexpected system error when looking up service {0}");
    public static final IPropertyKey SERVICELOOKUP__NOT_A_DATASOURCE = PropertyKeyFactory.keyWithFormat("SERVICELOOKUP__NOT_A_DATASOURCE", "Unexpected system error. The requested service {0} is not a datasource");
    public static final IPropertyKey SERVICELOOKUP__NOT_AN_EJB_HOME = PropertyKeyFactory.keyWithFormat("SERVICELOOKUP__NOT_AN_EJB_HOME", "Unexpected system error. The requested service {0} is not a EJB Home");
    public static final IPropertyKey HIBERNATE__GENERIC = PropertyKeyFactory.keyWithFormat("HIBERNATE__GENERIC", "Hibernate failure in method {0} operating on object {1} of class {2}.");
    public static final IPropertyKey HIBERNATE__CLASS_NOT_HIBERNATING = PropertyKeyFactory.keyWithFormat("HIBERNATE__CLASS_NOT_HIBERNATING", "Attempt to persist class {0}, which is not being managed by Hibernate.");
    public static final IPropertyKey HIBERNATE__ATTEMPT_TO_SET_MANY_TO_ONE = PropertyKeyFactory.keyWithFormat("HIBERNATE__ATTEMPT_TO_SET_MANY_TO_ONE", "Cannot set collection from Value Object: offending field is {0}");
    public static final IPropertyKey HIBERNATE__INVALID_FIELD_VALUE = PropertyKeyFactory.keyWithFormat("HIBERNATE__INVALID_FIELD_VALUE", "Hibernate cannot set field {0} to value {1} (class mismatch)");
    public static final IPropertyKey HIBERNATE__CAN_NOT_SET_FROM_STRING = PropertyKeyFactory.keyWithFormat("HIBERNATE__CAN_NOT_SET_FROM_STRING", "Hibernate cannot set field {0} from the string {1} (class mismatch)");
    public static final IPropertyKey HIBERNATE__FETCH_FAILURE = PropertyKeyFactory.keyWithFormat("HIBERNATE__FETCH_FAILURE", "Hibernate failure in attempt to fetch field {0} from object {1}");
    public static final IPropertyKey HIBERNATE__UNKNOWN_FIELD = PropertyKeyFactory.keyWithFormat("HIBERNATE__UNKNOWN_FIELD", "Attempt to fetch field {0} from object {1} of class {2}, but there is no getter for this field.");
    public static final IPropertyKey HIBERNATE__PUT_FAILURE = PropertyKeyFactory.keyWithFormat("HIBERNATE__PUT_FAILURE", "Hibernate failure in attempt to put value {0} into field {1} of an object of class {2}");
    public static final IPropertyKey HIBERNATE__QUERY_FAILURE = PropertyKeyFactory.keyWithFormat("HIBERNATE__QUERY_FAILURE", "Hibernate query failed for HQL {0} with message: nn {1}  nn And domain query {2}");
    public static final IPropertyKey DATAACCESS__TOO_MANY_COLUMNS = PropertyKeyFactory.keyWithFormat("DATAACCESS__TOO_MANY_COLUMNS", "Unable to display data.  Most likely you have selected too many columns and your database is unable to support this amount of data.");
    public static final IPropertyKey SAVEDQUERY__DUPLICATE_NAME_FOR_USER = PropertyKeyFactory.keyWithFormat("SAVEDQUERY__DUPLICATE_NAME_FOR_USER", "You already have a private filter saved with the name {1}.");
    public static final IPropertyKey SAVEDQUERY__DUPLICATE_NAME_FOR_ROLE = PropertyKeyFactory.keyWithFormat("SAVEDQUERY__DUPLICATE_NAME_FOR_ROLE", "There already exists a role-level filter saved with the name {1}.");
    public static final IPropertyKey APPCALENDAREVENT__ONCE_EVENT_MUST_NOT_HAVE_RECURR_END_DATE = PropertyKeyFactory.keyWithFormat("APPCALENDAREVENT__ONCE_EVENT_MUST_NOT_HAVE_RECURR_END_DATE", "A calendar event of interval ONCE must not have a recurrence end date.");
    public static final IPropertyKey APPCALENDAREVENT__DAILY_EVENT_MUST_HAVE_RECURR_END_DATE = PropertyKeyFactory.keyWithFormat("APPCALENDAREVENT__DAILY_EVENT_MUST_HAVE_RECURR_END_DATE", "A calendar event of interval DAILY must have a recurrence end date.");
    public static final IPropertyKey APPCALENDAREVENT__RECURR_END_DATE_MUST_NOT_BE_BEFORE_OCCURR_START_DATE = PropertyKeyFactory.keyWithFormat("APPCALENDAREVENT__RECURR_END_DATE_MUST_NOT_BE_BEFORE_OCCURR_START_DATE", "The recurrence end date must not be before the recurrence start date.");
    public static final IPropertyKey FORMS__NO_MODEL_CACHE = PropertyKeyFactory.keyWithFormat("FORMS__NO_MODEL_CACHE", "Form error: could not find the model cache");
    public static final IPropertyKey FORMS__NO_MODEL = PropertyKeyFactory.keyWithFormat("FORMS__NO_MODEL", "Form error: could not find the model {0} in the model cache");
    public static final IPropertyKey SEARCH__NO_ITEMS_FOUND = PropertyKeyFactory.keyWithFormat("SEARCH__NO_ITEMS_FOUND", "No items found. Refine your search and try again.");
    public static final IPropertyKey SEARCH__TOO_MANY_ITEMS_FOUND = PropertyKeyFactory.keyWithFormat("SEARCH__TOO_MANY_ITEMS_FOUND", "More than 400 items found. Refine your search and try again.");
    public static final IPropertyKey SECURITY_PAGE_ACCESS_VIOLATION = PropertyKeyFactory.keyWithFormat("SECURITY_PAGE_ACCESS_VIOLATION", "You do not have permission to access the requested page.");
    public static final IPropertyKey FRAMEWORK__NO_ITEMS_TO_DISPLAY = PropertyKeyFactory.keyWithFormat("FRAMEWORK__NO_ITEMS_TO_DISPLAY", "No items to display.");
    public static final IPropertyKey VALIDATION__CANNOT_BE_DELETED = PropertyKeyFactory.keyWithFormat("VALIDATION__CANNOT_BE_DELETED", "The entity you are attempting to delete cannot be deleted at this time. Possible cause: It is in use.");
    public static final IPropertyKey ERROR__NULL_MESSAGE = PropertyKeyFactory.keyWithFormat("ERROR__NULL_MESSAGE", "{0}");
    public static final IPropertyKey TOOLTIP_PAGINATION_FIRST_PAGE = PropertyKeyFactory.keyWithFormat("TOOLTIP_PAGINATION_FIRST_PAGE", "Go to the first page");
    public static final IPropertyKey TOOLTIP_PAGINATION_NEXT_PAGE = PropertyKeyFactory.keyWithFormat("TOOLTIP_PAGINATION_NEXT_PAGE", "Go to next page");
    public static final IPropertyKey TOOLTIP_PAGINATION_PREVIOUS_PAGE = PropertyKeyFactory.keyWithFormat("TOOLTIP_PAGINATION_PREVIOUS_PAGE", "Go to previous page");
    public static final IPropertyKey TOOLTIP_PAGINATION_LAST_PAGE = PropertyKeyFactory.keyWithFormat("TOOLTIP_PAGINATION_LAST_PAGE", "Go to the last page");
    public static final IPropertyKey FAILURE__PREDICATE_PARM_LABEL_MISSING = PropertyKeyFactory.keyWithFormat("FAILURE__PREDICATE_PARM_LABEL_MISSING", "Invalid field: If saved criteria is of type OPTIONAL_PARM or REQUIRED_PARM then a non-null ParmLabel has to be entered. ");
    public static final IPropertyKey FAILURE__PREDICATE_PARM_UNSUPPORTED_VERB = PropertyKeyFactory.keyWithFormat("FAILURE__PREDICATE_PARM_UNSUPPORTED_VERB", "Invalid field: The predicate operator {0} is not supported for parameters.");
    public static final IPropertyKey FAILURE__PREDICATE_PARM_REQUIRED_PARAM_MISSING = PropertyKeyFactory.keyWithFormat("FAILURE__PREDICATE_PARM_REQUIRED_PARAM_MISSING", "Required query parameter for field {0} with label {1} was not provided.");
    public static final IPropertyKey DIALOG__PREDICAT_PARAMS_ENTRY_FORM_TITLE = PropertyKeyFactory.keyWithFormat("DIALOG__PREDICAT_PARAMS_ENTRY_FORM_TITLE", "Enter Filter Parameter Values");
    public static final IPropertyKey FAILURE__UNSUPPORTED_QUERY_MODE = PropertyKeyFactory.keyWithFormat("FAILURE__UNSUPPORTED_QUERY_MODE", "Universal Query unsupported mode= {0}.");
    public static final IPropertyKey FAILURE__QUERY_UNAVAILABLE = PropertyKeyFactory.keyWithFormat("FAILURE__QUERY_UNAVAILABLE", "Your query -{0}- does not exist or the user does not have access to use this query. Please make sure this query has been saved as a private filter.  ");
    public static final IPropertyKey FAILURE__QUERY_SERVICE_REQUEST = PropertyKeyFactory.keyWithFormat("FAILURE__QUERY_SERVICE_REQUEST", "Invalid query request: {0}.");
    public static final IPropertyKey INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED = PropertyKeyFactory.keyWithFormat("INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED", "{0} may still be running because its class [{1}] does not extend the InterruptableQuartzJobBean class or it does not implement the InterruptableJob interface.  ");
    public static final IPropertyKey INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED_DESCR = PropertyKeyFactory.keyWithFormat("INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED_DESCR", "Job(s) may have been deleted from scheduler, but may still be running. Please see details below.");
    public static final IPropertyKey INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED_TITLE = PropertyKeyFactory.keyWithFormat("INFO__INTERRUPTABLE_JOB_NOT_IMPLEMENTED_TITLE", "Job(s) may still be running.");
    public static final IPropertyKey FAILURE__INVALID_LICENSE_CONTENTS = PropertyKeyFactory.keyWithFormat("FAILURE__INVALID_LICENSE_CONTENTS", "The contents of the license file are invalid. Cannot upload license.");
    public static final IPropertyKey FAILURE__COULD_NOT_PARSE_LICENSE = PropertyKeyFactory.keyWithFormat("FAILURE__COULD_NOT_PARSE_LICENSE", "Could not parse parse license file. Cannot upload license. Error = {0}");
    public static final IPropertyKey FAILURE__COULD_NOT_FIND_LICENSE_RESOURCE = PropertyKeyFactory.keyWithFormat("FAILURE__COULD_NOT_FIND_LICENSE_RESOURCE", "Could not find associated resource file required to read license file. Security misconfiguration. Cannot upload license. Error = {0} ");
    public static final IPropertyKey FAILURE__GLOBAL_LICENSE_NOT_ALLOWED = PropertyKeyFactory.keyWithFormat("FAILURE__GLOBAL_LICENSE_NOT_ALLOWED", "Globally scoped licenses are NOT allowed for this application. ");
    public static final IPropertyKey FAILURE__DEV_LICENSE_NOT_ALLOWED = PropertyKeyFactory.keyWithFormat("FAILURE__DEV_LICENSE_NOT_ALLOWED", "Development licenses are NOT allowed to be created through the UI.");
    public static final IPropertyKey FAILURE__INVALID_SCOPE = PropertyKeyFactory.keyWithFormat("FAILURE__INVALID_SCOPE", "The scope {0} does not exist in the system.  ");
    public static final IPropertyKey FAILURE__INVALID_SCOPE_LEVEL = PropertyKeyFactory.keyWithFormat("FAILURE__INVALID_SCOPE_LEVEL", "The scope level {1} for field {0} has not been defined for the application, or the object cannot be scoped at that level.");
    public static final IPropertyKey FAILURE__INVALID_LICENSE_SCOPE = PropertyKeyFactory.keyWithFormat("FAILURE__INVALID_LICENSE_SCOPE", "The license file is licensed for a scope that either does not exist in the system or you do not have access. License file has scope ({0}). Cannot upload license.");
    public static final IPropertyKey FAILURE__LICENSE_DOES_NOT_MATCH_EXISTING = PropertyKeyFactory.keyWithFormat("FAILURE__LICENSE_DOES_NOT_MATCH_EXISTING", "The license file ({0} / {1} / {2}) does not match the license you are trying to update. Cannot upload license.");
    public static final IPropertyKey INFO__LICENSE_FILE_SUCCESSFULLY_UPLOADED = PropertyKeyFactory.keyWithFormat("INFO__LICENSE_FILE_SUCCESSFULLY_UPLOADED", "License File Successfully Uploaded for scope ({0}). You need to logout and log back in for the new license to take effect. All other application servers in the cluster must be manually refreshed via Licenses -> Actions -> Reload Licenses From Database. ");
    public static final IPropertyKey INFO__LICENSE_FILE_SUCCESSFULLY_EXPORTED = PropertyKeyFactory.keyWithFormat("INFO__LICENSE_FILE_SUCCESSFULLY_EXPORTED", "License File Successfully Exported to {0}");
    public static final IPropertyKey INFO__LICENSES_RELOADED = PropertyKeyFactory.keyWithFormat("INFO__LICENSES_RELOADED", "Licenses have been reloaded on the application server from the database.");
    public static final IPropertyKey FAILURE__CANNOT_EXPORT_GLOBAL_LICENSE = PropertyKeyFactory.keyWithFormat("FAILURE__CANNOT_EXPORT_GLOBAL_LICENSE", "You cannot export a globally scoped license.");
    public static final IPropertyKey FAILURE__CANNOT_EXPORT_DEVELOPER_LICENSE = PropertyKeyFactory.keyWithFormat("FAILURE__CANNOT_EXPORT_DEVELOPER_LICENSE", "You cannot export a developer license.");
    public static final IPropertyKey FAILURE__ESB_GATEWAY_SEND_EXCEPTION = PropertyKeyFactory.keyWithFormat("FAILURE__ESB_GATEWAY_SEND_EXCEPTION", "ESB client request to gateway failed for URL {0}.");
    public static final IPropertyKey ERROR__NODEINFO_IP_ADDR_NOT_FOUND = PropertyKeyFactory.keyWithFormat("ERROR__NODEINFO_IP_ADDR_NOT_FOUND", "IP address is not found for node {0}.");
    public static final IPropertyKey ERROR__NODEINFO_REQURIED_URL = PropertyKeyFactory.keyWithFormat("ERROR__NODEINFO_REQURIED_URL", "URL must be defined for node {0} to use this service.  Edit the node entry on the Node Info Desk table and set the URL, for example http://myserver:9080/apex");
    public static final IPropertyKey ERROR__NODEINFO_INVALID_URL = PropertyKeyFactory.keyWithFormat("ERROR__NODEINFO_INVALID_URL", "Invalid URL {1} provided for field {0}. Valid protocols are http or https.");
    public static final IPropertyKey ERROR__NODEINFO_LOCALHOST_URL = PropertyKeyFactory.keyWithFormat("ERROR__NODEINFO_LOCALHOST_URL", "A URL with host as localhost cannot be provided for field {0}.");
    public static final IPropertyKey ERROR__NODEINFO_INVALID_DIR_PATH = PropertyKeyFactory.keyWithFormat("ERROR__NODEINFO_INVALID_DIR_PATH", "Directory path {1} provided for field {0} is invalid or it does not exist.");
    public static final IPropertyKey FAILURE__REMOTE_NODE_REQUEST_FAILED = PropertyKeyFactory.keyWithFormat("FAILURE__REMOTE_NODE_REQUEST_FAILED", "Request to node {0} failed with HTTP status code {1}.nMessage: {2}");
    public static final IPropertyKey ERROR__SERVICE_NOT_AVAILABLE = PropertyKeyFactory.keyWithFormat("ERROR__SERVICE_NOT_AVAILABLE", "{0} service at node {1} might not be available or has not been configured properly.nMessage: {2}");
    public static final IPropertyKey ERROR__SERVICE_AUTH_FAILED = PropertyKeyFactory.keyWithFormat("ERROR__SERVICE_AUTH_FAILED", "Service authorization failed.");
    public static final IPropertyKey ERROR__SSO_SERVICE_AUTH_TOKEN_EXPIRED = PropertyKeyFactory.keyWithFormat("ERROR__SSO_SERVICE_AUTH_TOKEN_EXPIRED", "SSO Service authorization token has expired on {0}.");
    public static final IPropertyKey INFO__REQUEST_NOT_FULFILLED = PropertyKeyFactory.keyWithFormat("INFO__REQUEST_NOT_FULFILLED", "No resources fulfill the request parameters.");
    public static final IPropertyKey INFO__REQUEST_FULFILLED = PropertyKeyFactory.keyWithFormat("INFO__REQUEST_FULFILLED", "Resources have been downloaded into {0}.");
    public static final IPropertyKey CONFIRM__DELETE = PropertyKeyFactory.keyWithFormat("CONFIRM__DELETE", "Are you sure you want to delete this item?");
    public static final IPropertyKey CONFIRM__DELETE_MULTIPLE = PropertyKeyFactory.keyWithFormat("CONFIRM__DELETE_MULTIPLE", "Are you sure you want to delete selected items?");
    public static final IPropertyKey CONFIRM__DELETE_TITLE = PropertyKeyFactory.keyWithFormat("CONFIRM__DELETE_TITLE", "Delete?");
    public static final IPropertyKey ERROR__NO_GADGET_NAME = PropertyKeyFactory.keyWithFormat("ERROR__NO_GADGET_NAME", "The gadget name must be defined.");
    public static final IPropertyKey FAILURE__CONFIG_SETTING_VALIDATION = PropertyKeyFactory.keyWithFormat("FAILURE__CONFIG_SETTING_VALIDATION", "The config setting {0} cannot be saved due to the following validation error- {1}.");
    public static final IPropertyKey FAILURE__CONFIG_SETTING_PREPROCESS_UPDATE = PropertyKeyFactory.keyWithFormat("FAILURE__CONFIG_SETTING_PREPROCESS_UPDATE", "The config setting {0} cannot be saved due to the following preprocessing error- {1}.");
    public static final IPropertyKey INFO__VARIFORM_MENUS = PropertyKeyFactory.keyWithFormat("INFO__VARIFORM_MENUS", "tFor any menuItem you add, you can only select one of: commandRefId, variformId, or codeExtensionId.  ntExample: <menuItem label=MY LABEL userActionId=KNOWN_USER_ACTION_ID codeExtensionId=MY_GROOVY_CODE  />  nntRemove any menus you will not need.");
    public static final IPropertyKey INFO__VARIFORM_ACTIONS = PropertyKeyFactory.keyWithFormat("INFO__VARIFORM_ACTIONS", "tThese are the most common used actions. Please verify needs and edit accordingly.");
    public static final IPropertyKey INFO__VARIFORM_OBJECT_TEMPLATE = PropertyKeyFactory.keyWithFormat("INFO__VARIFORM_OBJECT_TEMPLATE", "tPlease edit and complete variform definition.");
    public static final IPropertyKey ERROR__XML_VARIFORM_FIELDS_MISMATCH = PropertyKeyFactory.keyWithFormat("ERROR__XML_VARIFORM_FIELDS_MISMATCH", "You might not have properly specified the element you wanted to override.");
    public static final IPropertyKey ERROR__XML_VARIFORM_MULTI_DEFS = PropertyKeyFactory.keyWithFormat("ERROR__XML_VARIFORM_MULTI_DEFS", "Only one modifiable element is allowed.");
    public static final IPropertyKey ERROR__XML_VARIFORM_IMMUTABLE_ID = PropertyKeyFactory.keyWithFormat("ERROR__XML_VARIFORM_IMMUTABLE_ID", "The variform id cannot be changed.");
    public static final IPropertyKey ERROR__XML_VARIFORM_MENU_DUPLICATE_ATTRIBUTE = PropertyKeyFactory.keyWithFormat("ERROR__XML_VARIFORM_MENU_DUPLICATE_ATTRIBUTE", "More than one {0} with the same value is not allowed within the same menu [category: {1}].nPlease review this menu's item definitions.");
    public static final IPropertyKey ERROR__XML_VARIFORM_MENU_DUPLICATE_MNEMONIC = PropertyKeyFactory.keyWithFormat("ERROR__XML_VARIFORM_MENU_DUPLICATE_MNEMONIC", "A mnemonic cannot be used by more than one menu item throughout a variform. Please correct menu item definitions which use mnemonics: {0}.");
    public static final IPropertyKey DB_BACKED_VARIFORM_CUSTOM_DESCR = PropertyKeyFactory.keyWithFormat("DB_BACKED_VARIFORM_CUSTOM_DESCR", "Dynamic Customization of {0}.");
    public static final IPropertyKey ERROR__CUSTOM_NAV_PRECEDING_NODE_BAD = PropertyKeyFactory.keyWithFormat("ERROR__CUSTOM_NAV_PRECEDING_NODE_BAD", "The menu node id you have selected to be inserted after, {0}, cannot be found in the current  menu tree.  If this is a newly created menu node you may need to log out and log back in for it to be made available.");
    public static final IPropertyKey ERROR__CUSTOM_NAV_NODE_SELECTION_INVALID = PropertyKeyFactory.keyWithFormat("ERROR__CUSTOM_NAV_NODE_SELECTION_INVALID", "You cannot add your node after the node you selected - {0}, please make another choice.");
    public static final IPropertyKey ERROR__CUSTOM_NAV_NOT_UNIQUE = PropertyKeyFactory.keyWithFormat("ERROR__CUSTOM_NAV_NOT_UNIQUE", "A record already exists for this scope with label {0} and parent {1} for this menu tree.");
    public static final IPropertyKey FAILURE_APPL_NO_VARIFORM_ID = PropertyKeyFactory.keyWithFormat("FAILURE_APPL_NO_VARIFORM_ID", "Application error. No variform id provided.");
    public static final IPropertyKey WARN__MENU_ITEM_CANNOT_BE_DELETED = PropertyKeyFactory.keyWithFormat("WARN__MENU_ITEM_CANNOT_BE_DELETED", "Menu {0}: item for action {1} cannot be deleted because it is part of the system definition. It can only be edited.");
    public static final IPropertyKey FAILURE_MAX_USER_DIAGNOSTICS_REACHED = PropertyKeyFactory.keyWithFormat("FAILURE_MAX_USER_DIAGNOSTICS_REACHED", "You have reached the maximum number of diagnostic records allowed ({0}) when you opened this window. Diagnostic event recording has been automatically disabled. No more events will be recorded. Please clear the event queue before proceeding. This limit can be increased with the DIAGNOSTIC_MAX_CAPTURE_USER_EVENTS setting. You will have to reopen this window.");
    public static final IPropertyKey XML_SCHEMA_PARSING_DETAIL_ERROR = PropertyKeyFactory.keyWithFormat("XML_SCHEMA_PARSING_DETAIL_ERROR", "Line {0}:{1}: {2}");
    public static final IPropertyKey XML_SCHEMA_PARSING_ERROR = PropertyKeyFactory.keyWithFormat("XML_SCHEMA_PARSING_ERROR", "The file {0} does not comply with the schema. Errors: {1}");
    public static final IPropertyKey XML_SCHEMA_CONTENTS_PARSING_ERROR = PropertyKeyFactory.keyWithFormat("XML_SCHEMA_CONTENTS_PARSING_ERROR", "XML contents does not comply with the schema. Errors: {1}");
    public static final IPropertyKey XML_CONTENTS_TYPE_ERROR = PropertyKeyFactory.keyWithFormat("XML_CONTENTS_TYPE_ERROR", "XML contents is expected to use {0}.");
    public static final IPropertyKey XML_SCHEMA_PARSING_PARAMETER_ERROR = PropertyKeyFactory.keyWithFormat("XML_SCHEMA_PARSING_PARAMETER_ERROR", "XML validation failed due to : {0}");
    public static final IPropertyKey ACTION_CMD_NOT_AVAILABLE = PropertyKeyFactory.keyWithFormat("ACTION_CMD_NOT_AVAILABLE", "The action command [{0}] is not available!");
    public static final IPropertyKey ACTION_CMD_TRIGGERED_ITSELF = PropertyKeyFactory.keyWithFormat("ACTION_CMD_TRIGGERED_ITSELF", "An action command cannot trigger itself through a code extension! Review code associated with action [{0}].");
    public static final IPropertyKey CCEVENT_CONFIGURATION_ERROR = PropertyKeyFactory.keyWithFormat("CCEVENT_CONFIGURATION_ERROR", "Invalid configuration for the {0}. ");
    public static final IPropertyKey CCEVENT_INVALID_SUBSCRIBER = PropertyKeyFactory.keyWithFormat("CCEVENT_INVALID_SUBSCRIBER", "Invalid component event subscriber for event type [{0}]. ");
    public static final IPropertyKey CCEVENT_ON_EVENT_EXECUTION_EXCEPTION = PropertyKeyFactory.keyWithFormat("CCEVENT_ON_EVENT_EXECUTION_EXCEPTION", "{0}");
    public static final IPropertyKey CCEVENT_ON_EVENT_EXECUTION_FAILED = PropertyKeyFactory.keyWithFormat("CCEVENT_ON_EVENT_EXECUTION_FAILED", "{0}: Component event [{1}:{2}] execution failed for node{3}! ");
    public static final IPropertyKey CCEVENT_ON_EVENT_EXECUTION_BY_CONSUMER_FAILED = PropertyKeyFactory.keyWithFormat("CCEVENT_ON_EVENT_EXECUTION_BY_CONSUMER_FAILED", "Component event [{0}:{1}] execution failed. Info:n{2} ");
    public static final IPropertyKey LABEL__CSV_TRUE = PropertyKeyFactory.keyWithFormat("LABEL__CSV_TRUE", "true");
    public static final IPropertyKey LABEL__CSV_FALSE = PropertyKeyFactory.keyWithFormat("LABEL__CSV_FALSE", "false");
    public static final IPropertyKey ERROR__XMLCHART_PARSE_FAILED = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_PARSE_FAILED", "Parsing of Gadget Chart failed!");
    public static final IPropertyKey ERROR__XMLCHART_DOMAIN_AXIS_OVERRIDDEN_FIELD = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_DOMAIN_AXIS_OVERRIDDEN_FIELD", "Domain Axis fieldId {0} cannot be overridden by fieldId {1}.");
    public static final IPropertyKey ERROR__XMLCHART_ILLEGAL_BOUNDS = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_ILLEGAL_BOUNDS", "Invalid chart bounds, lowerBound[{0}], upperBound[{1}]. lowerBound <= upperBound.");
    public static final IPropertyKey ERROR__XMLCHART_REQUIRED_BOUNDS_N_THRESH = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_REQUIRED_BOUNDS_N_THRESH", "A Gauge chart must have all its thresholds (lowerBound, minThreshold, maxThreshold, upperBound) defined.");
    public static final IPropertyKey ERROR__XMLCHART_INVALID_BOUNDS_N_THRESH = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_INVALID_BOUNDS_N_THRESH", "Invalid Gauge chart thresholds: lowerBound[{0}], minThreshold[{1}], maxThreshold[{2}], upperBound[{3}]. lowerBound <= minThreshold <= maxThreshold <= upperBound.        ");
    public static final IPropertyKey ERROR__XMLCHART_INVALID_NUMERIC_VALUE = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_INVALID_NUMERIC_VALUE", "Attribute {0} must be numeric.");
    public static final IPropertyKey ERROR__XMLCHART_DOMAIN_AXIS_FIELD_NOT_A_DATE = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_DOMAIN_AXIS_FIELD_NOT_A_DATE", "FieldId {0} not allowed. This chart's Domain Axis field must be a date.");
    public static final IPropertyKey ERROR__XMLCHART_RANGE_AXIS_FIELD_NOT_NUMERIC = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_RANGE_AXIS_FIELD_NOT_NUMERIC", "FieldId {0} not allowed. A chart's Range Axis field must be numeric.");
    public static final IPropertyKey ERROR__XMLCHART_DOMAIN_AXIS_FIELD_NOT_DATETIME_FOR_TIME_CONSTRAINT = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_DOMAIN_AXIS_FIELD_NOT_DATETIME_FOR_TIME_CONSTRAINT", "A chart's Domain Axis field must be a date/time field in order to have a relative time period constraint.");
    public static final IPropertyKey ERROR__XMLCHART_AXIS_FIELD_NOT_VALID_FILTER = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_AXIS_FIELD_NOT_VALID_FILTER", "Chart's Axis filter field '{0}' constraining the axis field values has not been identified.");
    public static final IPropertyKey ERROR__XMLCHART_FIELD_NOT_VALID_FILTER = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_FIELD_NOT_VALID_FILTER", "Chart's filter field '{0}' constraining the data is invalid.");
    public static final IPropertyKey ERROR__XMLCHART_TABLEVIEW_NOT_A_TABLE = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_TABLEVIEW_NOT_A_TABLE", "variformId '{0' in tableViewChart '{1}' must be a table variform.");
    public static final IPropertyKey ERROR__XMLCHART_INVALID_GAUGE_TYPE = PropertyKeyFactory.keyWithFormat("ERROR__XMLCHART_INVALID_GAUGE_TYPE", "Invalid gauge type {0}. Valid types: arc, meter");
    public static final IPropertyKey ERROR__GAUGE_CHART_FILTER_MISSING_OTHER_AXIS_FIELD = PropertyKeyFactory.keyWithFormat("ERROR__GAUGE_CHART_FILTER_MISSING_OTHER_AXIS_FIELD", "Gauge chart requires a filter field.");
    public static final IPropertyKey ERROR__CHART_DATASET_REQUIRED_FILTER_MISSING = PropertyKeyFactory.keyWithFormat("ERROR__CHART_DATASET_REQUIRED_FILTER_MISSING", "{0} dataset filter is required!");
    public static final IPropertyKey ERROR__CHART_DATASET_INVALID_FILTER = PropertyKeyFactory.keyWithFormat("ERROR__CHART_DATASET_INVALID_FILTER", "{0} dataset filter column {1} appears to be unrelated to the driver entity!");
    public static final IPropertyKey ERROR__GADGET_NUMERIC_PROP_CANNOT_BE_NULL = PropertyKeyFactory.keyWithFormat("ERROR__GADGET_NUMERIC_PROP_CANNOT_BE_NULL", "Gadget numeric property/attribute {0} cannot be null.");
    public static final IPropertyKey ERROR__GADGET_CUSTOM_DATA_METHOD = PropertyKeyFactory.keyWithFormat("ERROR__GADGET_CUSTOM_DATA_METHOD", "Chart data method failed for custom class {0}.");
    public static final IPropertyKey ERROR__GADGET_CUSTOM_DATA_METHOD_REQ_FAILED = PropertyKeyFactory.keyWithFormat("ERROR__GADGET_CUSTOM_DATA_METHOD_REQ_FAILED", "Chart data method failed to retrieve data. Exception: {0}.");
    public static final IPropertyKey WARN__DB_BACKED_VARIFORM_OVERRIDE_OUT_OF_SCOPE = PropertyKeyFactory.keyWithFormat("WARN__DB_BACKED_VARIFORM_OVERRIDE_OUT_OF_SCOPE", "Database-backed variform override {0} is out of your scope and cannot be modified.");
    public static final IPropertyKey ERROR__DB_BACKED_VARIFORM__ALREADY_OVERRIDDEN = PropertyKeyFactory.keyWithFormat("ERROR__DB_BACKED_VARIFORM__ALREADY_OVERRIDDEN", "Variform {0} has a database-backed override in the configuration named {1}. Undesired results may occur when modified in various configurations.");
    public static final IPropertyKey WARN__DB_BACKED_VARIFORM_OVERRIDE_DISABLED = PropertyKeyFactory.keyWithFormat("WARN__DB_BACKED_VARIFORM_OVERRIDE_DISABLED", "Variform {0} has a database-backed override named {1} which has been disabled. No changes are allowed at the present time.");
    public static final IPropertyKey ERROR_MENUITEM_MNEMONIC_INVALID = PropertyKeyFactory.keyWithFormat("ERROR_MENUITEM_MNEMONIC_INVALID", "A menu item mnemonic is specified by one uppercase letter. Valid letters: B, E, F, G, J, K, L, M, N, P, Q, R, T, W, X, Y, Z.");
    public static final IPropertyKey ERROR__RELATIVE_TIME_PERIOD_INVALID = PropertyKeyFactory.keyWithFormat("ERROR__RELATIVE_TIME_PERIOD_INVALID", "Gadget {0}: {1} is not a valid relative time period for property {2}.nProperty Value Format: [-+][1-9][0-9]*(w|d|h|m)nPlease correct the value and reset the gadget variform definition if applicable.");
    public static final IPropertyKey WARN__NODE_STATUS_CHANGE_TO_SAME = PropertyKeyFactory.keyWithFormat("WARN__NODE_STATUS_CHANGE_TO_SAME", "Node {0} is already in status {1}.");
    public static final IPropertyKey WARN__NODE_STATUS_CHANGE = PropertyKeyFactory.keyWithFormat("WARN__NODE_STATUS_CHANGE", "Node {0} status change does not appear to be a valid transition. Status has been transitioned to {1}.  It can later be changed to {2}.");
    public static final IPropertyKey ERROR__LOCAL_NODE_STATUS_CHANGE = PropertyKeyFactory.keyWithFormat("ERROR__LOCAL_NODE_STATUS_CHANGE", "Local node {0} status change to {1} is not allowed. You can log in into another node and try this operation again.nA period of 24 hours after last node startup time is required before deactivating a node.");
    public static final IPropertyKey ERROR__NONLOCAL_NODE_STATUS_CHANGE = PropertyKeyFactory.keyWithFormat("ERROR__NONLOCAL_NODE_STATUS_CHANGE", "Non-local node {0} status change to {1} is not allowed. The node has been reached reached and shows an effective active status.");
    public static final IPropertyKey ERROR__NODE_STATUS_CHANGE = PropertyKeyFactory.keyWithFormat("ERROR__NODE_STATUS_CHANGE", "Node {0} status change does not appear to be a valid transition. The node was last started less than a day ago.nA period of 24 hours after last node startup time is required before deactivating a node.");
    public static final IPropertyKey ERROR__EXCEL_FILE_IO_EXCEPTION = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_FILE_IO_EXCEPTION", "Excel File {0} input / output error: [{1}].");
    public static final IPropertyKey ERROR__EXCEL_FILE_NAME_NOT_PROVIDED = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_FILE_NAME_NOT_PROVIDED", "Excel File not provided. [saveAs] method should be used.");
    public static final IPropertyKey ERROR__EXCEL_FILE_NOT_FOUND = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_FILE_NOT_FOUND", "Excel File {0} could not be found.");
    public static final IPropertyKey ERROR__EXCEL_FILE_RANGE_NOT_FOUND = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_FILE_RANGE_NOT_FOUND", "In Excel File {0}, range [{1}] could not be found.");
    public static final IPropertyKey ERROR__EXCEL_SHEET_CAN_NOT_BE_REMOVED = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_SHEET_CAN_NOT_BE_REMOVED", "In Excel File {0} there is only 1 sheet, it can not be removed.");
    public static final IPropertyKey ERROR__EXCEL_SHEET_CAN_NOT_BE_ACTIVATED = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_SHEET_CAN_NOT_BE_ACTIVATED", "In Excel File {0} there is a sheet could NOT be found with name {1}.");
    public static final IPropertyKey ERROR__EXCEL_SHEET_CAN_NOT_BE_CLONED = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_SHEET_CAN_NOT_BE_CLONED", "In Excel File {0}, current sheet can not be cloned with name {1}. It already exists.");
    public static final IPropertyKey ERROR__EXCEL_MACROS_CAN_NOT_BE_RUN_ON_CURRENT_OS = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_MACROS_CAN_NOT_BE_RUN_ON_CURRENT_OS", "Calling method tries to open Excel Application and run Macros. It is allowed on Windows Operating System only.");
    public static final IPropertyKey ERROR__EXCEL_PROCESSBUILDER_EXCEPTION = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_PROCESSBUILDER_EXCEPTION", "While opening Excel file {0} with ProcessBuilder following exception happened: [{1}]. Verify macros in the Excel File.");
    public static final IPropertyKey ERROR__EXCEL_PROCESSBUILDER_TIMEOUT_EXCEPTION = PropertyKeyFactory.keyWithFormat("ERROR__EXCEL_PROCESSBUILDER_TIMEOUT_EXCEPTION", "While opening Excel file {0} with ProcessBuilder Timeout exception happened: [{1}]. Verify macros in the Excel File");
    public static final IPropertyKey ERROR__CELLRANGEGENERATOR_EMPTY_ARRAY = PropertyKeyFactory.keyWithFormat("ERROR__CELLRANGEGENERATOR_EMPTY_ARRAY", "CellRangeGenerator can not be contsructed with an Empty Array.");
    public static final IPropertyKey ERROR__CELLRANGEGENERATOR_CAST_ERROR_INT = PropertyKeyFactory.keyWithFormat("ERROR__CELLRANGEGENERATOR_CAST_ERROR_INT", "Can not cast [{0}] to int (integer).");
    public static final IPropertyKey ERROR__CELLRANGEGENERATOR_CAST_ERROR_DOUBLE = PropertyKeyFactory.keyWithFormat("ERROR__CELLRANGEGENERATOR_CAST_ERROR_DOUBLE", "Can not cast [{0}] to double.");
    public static final IPropertyKey ERROR__CELLRANGEGENERATOR_CAST_ERROR_DATE = PropertyKeyFactory.keyWithFormat("ERROR__CELLRANGEGENERATOR_CAST_ERROR_DATE", "Can not cast [{0}] to Date.");
    public static final IPropertyKey FAILURE__JMS_SERVER_NOT_ACCESSIBLE = PropertyKeyFactory.keyWithFormat("FAILURE__JMS_SERVER_NOT_ACCESSIBLE", "The JMS server pointed to by {0} is not accessible.");
    public static final IPropertyKey FAILURE__EMPTY_ESB_CONFIGURATION = PropertyKeyFactory.keyWithFormat("FAILURE__EMPTY_ESB_CONFIGURATION", "Empty ESB configuration content.");
    public static final IPropertyKey FAILURE__ESB_CONFIGURATION_NAME = PropertyKeyFactory.keyWithFormat("FAILURE__ESB_CONFIGURATION_NAME", "Overriding ESB Configuration name cannot have xml extension.");
    public static final IPropertyKey DEADLOCK__OCCURRED = PropertyKeyFactory.keyWithFormat("DEADLOCK__OCCURRED", "Database deadlock detected, your last action was not saved due to a database conflict. Please try again.");
    public static final IPropertyKey CONSTRAINT_VIOLATION_AT_DELETION = PropertyKeyFactory.keyWithFormat("CONSTRAINT_VIOLATION_AT_DELETION", "An entity could not be deleted, because it is referred by other entities. Please review any referencing entities.");
    public static final IPropertyKey UNIQUE_CONSTRAINT_VIOLATION = PropertyKeyFactory.keyWithFormat("UNIQUE_CONSTRAINT_VIOLATION", "An entity is violating uniqueness rule. Please review if similar entity exists in different scope.");
    public static final IPropertyKey FAILURE__JOB_SCHEDULE = PropertyKeyFactory.keyWithFormat("FAILURE__JOB_SCHEDULE", "An exception occurred while scheduling a job: {0}.");
    public static final IPropertyKey FAILURE__OBJECT_NOT_FOUND = PropertyKeyFactory.keyWithFormat("FAILURE__OBJECT_NOT_FOUND", "Requested operation failed. The object was not found. Most likely it was deleted by another user.");
    public static final IPropertyKey NO_CODE_EXTENSION_FOUND_FOR_KEY = PropertyKeyFactory.keyWithFormat("NO_CODE_EXTENSION_FOUND_FOR_KEY", "No Code Extension found for key:{0}");
    public static final IPropertyKey PURGE_DESCRIPTION_APPLICATION_LOG = PropertyKeyFactory.keyWithFormat("PURGE_DESCRIPTION_APPLICATION_LOG", "Application log entries older than PURGE_APPLICATION_LOG_DAYS_TO_RETAIN days");
    public static final IPropertyKey PURGE_DESCRIPTION_PERSISTENT_LOGIN = PropertyKeyFactory.keyWithFormat("PURGE_DESCRIPTION_PERSISTENT_LOGIN", "Persistent login entries older than 3 days The 3 is not configurable");

}
