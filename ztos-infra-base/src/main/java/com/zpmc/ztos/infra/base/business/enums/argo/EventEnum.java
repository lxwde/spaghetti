package com.zpmc.ztos.infra.base.business.enums.argo;

import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

//public enum EventEnum {
//    UNIT_CREATE(1, "UNIT_CREATE", "", "", "UNIT_CREATE"),
//    UNIT_ACTIVATE(2, "UNIT_ACTIVATE", "", "", "UNIT_ACTIVATE"),
//    UNIT_REROUTE(3, "UNIT_REROUTE", "", "", "UNIT_REROUTE"),
//    UNIT_PROPERTY_UPDATE(4, "UNIT_PROPERTY_UPDATE", "", "", "UNIT_PROPERTY_UPDATE"),
//    UNIT_PIN_ASSIGNED(5, "UNIT_PIN_ASSIGNED", "", "", "UNIT_PIN_ASSIGNED"),
//    UNIT_TRUCKER_ASSIGNED(6, "UNIT_TRUCKER_ASSIGNED", "", "", "UNIT_TRUCKER_ASSIGNED"),
//    UNIT_IGNORED_EDI(7, "UNIT_IGNORED_EDI", "", "", "UNIT_IGNORED_EDI"),
//    UNIT_LOADLIST_EDI_CREATED(8, "UNIT_LOADLIST_EDI_CREATED", "", "", "UNIT_LOADLIST_EDI_CREATED"),
//    UNIT_LOADLIST_EDI_UPDATED(9, "UNIT_LOADLIST_EDI_UPDATED", "", "", "UNIT_LOADLIST_EDI_UPDATED"),
//    UNIT_MERGE(10, "UNIT_MERGE", "", "", "UNIT_MERGE"),
//    UNIT_RETIRE(11, "UNIT_RETIRE", "", "", "UNIT_RETIRE"),
//    UNIT_DEPART(12, "UNIT_DEPART", "", "", "UNIT_DEPART"),
//    UNIT_YARD_MOVE(13, "UNIT_YARD_MOVE", "", "", "UNIT_YARD_MOVE"),
//    UNIT_YARD_SHIFT(14, "UNIT_YARD_SHIFT", "", "", "UNIT_YARD_SHIFT"),
//    UNIT_SHIFT_ON_CARRIER(15, "UNIT_SHIFT_ON_CARRIER", "", "", "UNIT_SHIFT_ON_CARRIER"),
//    UNIT_POSITION_CORRECTION(16, "UNIT_POSITION_CORRECTION", "", "", "UNIT_POSITION_CORRECTION"),
//    UNIT_LOAD(17, "UNIT_LOAD", "", "", "UNIT_LOAD"),
//    UNIT_DISCH(18, "UNIT_DISCH", "", "", "UNIT_DISCH"),
//    UNIT_TRANSLOAD(19, "UNIT_TRANSLOAD", "", "", "UNIT_TRANSLOAD"),
//    RCAR_PLF_MISSING_CENTROID(20, "RCAR_PLF_MISSING_CENTROID", "", "", "RCAR_PLF_MISSING_CENTROID"),
//    UNIT_RAMP(21, "UNIT_RAMP", "", "", "UNIT_RAMP"),
//    UNIT_DERAMP(22, "UNIT_DERAMP", "", "", "UNIT_DERAMP"),
//    UNIT_DELIVER(23, "UNIT_DELIVER", "", "", "UNIT_DELIVER"),
//    UNIT_RECEIVE(24, "UNIT_RECEIVE", "", "", "UNIT_RECEIVE"),
//    UNIT_IN_GATE(25, "UNIT_IN_GATE", "", "", "UNIT_IN_GATE"),
//    UNIT_OUT_GATE(26, "UNIT_OUT_GATE", "", "", "UNIT_OUT_GATE"),
//    UNIT_IN_VESSEL(27, "UNIT_IN_VESSEL", "", "", "UNIT_IN_VESSEL"),
//    UNIT_OUT_VESSEL(28, "UNIT_OUT_VESSEL", "", "", "UNIT_OUT_VESSEL"),
//    UNIT_IN_RAIL(29, "UNIT_IN_RAIL", "", "", "UNIT_IN_RAIL"),
//    UNIT_OUT_RAIL(30, "UNIT_OUT_RAIL", "", "", "UNIT_OUT_RAIL"),
//    UNIT_STRIP(31, "UNIT_STRIP", "", "", "UNIT_STRIP"),
//    UNIT_STUFF(32, "UNIT_STUFF", "", "", "UNIT_STUFF"),
//    UNIT_POWER_CONNECT(33, "UNIT_POWER_CONNECT", "", "", "UNIT_POWER_CONNECT"),
//    UNIT_POWER_DISCONNECT(34, "UNIT_POWER_DISCONNECT", "", "", "UNIT_POWER_DISCONNECT"),
//    UNIT_WANTS_POWER_YES(35, "UNIT_WANTS_POWER_YES", "", "", "UNIT_WANTS_POWER_YES"),
//    UNIT_WANTS_POWER_NO(36, "UNIT_WANTS_POWER_NO", "", "", "UNIT_WANTS_POWER_NO"),
//    UNIT_ALARM(37, "UNIT_ALARM", "", "", "UNIT_ALARM"),
//    UNIT_REEFER_FAULT(38, "UNIT_REEFER_FAULT", "", "", "UNIT_REEFER_FAULT"),
//    UNIT_SEAL(39, "UNIT_SEAL", "", "", "UNIT_SEAL"),
//    UNIT_MOUNT(40, "UNIT_MOUNT", "", "", "UNIT_MOUNT"),
//    UNIT_DISMOUNT(41, "UNIT_DISMOUNT", "", "", "UNIT_DISMOUNT"),
//    UNIT_SWIPE(42, "UNIT_SWIPE", "", "", "UNIT_SWIPE"),
//    UNIT_ROLL(43, "UNIT_ROLL", "", "", "UNIT_ROLL"),
//    UNIT_RENUMBER(44, "UNIT_RENUMBER", "", "", "UNIT_RENUMBER"),
//    UNIT_CHECKDIGIT(45, "UNIT_CHECKDIGIT", "", "", "UNIT_CHECKDIGIT"),
//    UNIT_PREADVISE(46, "UNIT_PREADVISE", "", "", "UNIT_PREADVISE"),
//    UNIT_CANCEL_PREADVISE(47, "UNIT_CANCEL_PREADVISE", "", "", "UNIT_CANCEL_PREADVISE"),
//    UNIT_RESERVE(48, "UNIT_RESERVE", "", "", "UNIT_RESERVE"),
//    UNIT_CANCEL_RESERVE(49, "UNIT_CANCEL_RESERVE", "", "", "UNIT_CANCEL_RESERVE"),
//    UNIT_BUNDLE(50, "UNIT_BUNDLE", "", "", "UNIT_BUNDLE"),
//    UNIT_BUNDLE_ADD(51, "UNIT_BUNDLE_ADD", "", "", "UNIT_BUNDLE_ADD"),
//    UNIT_UNBUNDLE(52, "UNIT_UNBUNDLE", "", "", "UNIT_UNBUNDLE"),
//    UNIT_BRING_BACK_INTO_YARD(53, "UNIT_BRING_BACK_INTO_YARD", "", "", "UNIT_BRING_BACK_INTO_YARD"),
//    UNIT_DELIVER_REJECTED(54, "UNIT_DELIVER_REJECTED", "", "", "UNIT_DELIVER_REJECTED"),
//    UNIT_BRING_TO_COMMUNITY(55, "UNIT_BRING_TO_COMMUNITY", "", "", "UNIT_BRING_TO_COMMUNITY"),
//    UNIT_RETURN_TO_INBOUND_CARRIER(56, "UNIT_RETURN_TO_INBOUND_CARRIER", "", "", "UNIT_RETURN_TO_INBOUND_CARRIER"),
//    UNIT_ENABLE_ROAD(57, "UNIT_ENABLE_ROAD", "", "", "UNIT_ENABLE_ROAD"),
//    UNIT_DISABLE_ROAD(58, "UNIT_DISABLE_ROAD", "", "", "UNIT_DISABLE_ROAD"),
//    UNIT_RECORD_DAMAGE(59, "UNIT_RECORD_DAMAGE", "", "", "UNIT_RECORD_DAMAGE"),
//    UNIT_DAMAGES_UPDATED(60, "UNIT_DAMAGES_UPDATED", "", "", "UNIT_DAMAGES_UPDATED"),
//    UNIT_DAMAGED(61, "UNIT_DAMAGED", "", "", "UNIT_DAMAGED"),
//    UNIT_REPAIRED(62, "UNIT_REPAIRED", "", "", "UNIT_REPAIRED"),
//    UNIT_DAMAGES_DELETED(63, "UNIT_DAMAGES_DELETED", "", "", "UNIT_DAMAGES_DELETED"),
//    UNIT_RECTIFY(64, "UNIT_RECTIFY", "", "", "UNIT_RECTIFY"),
//    UNIT_RETURN_TO_STORAGE(65, "UNIT_RETURN_TO_STORAGE", "", "", "UNIT_RETURN_TO_STORAGE"),
//    UNIT_SNX_UPDATE(66, "UNIT_SNX_UPDATE", "", "", "UNIT_SNX_UPDATE"),
//    UNIT_SNX_UPDATE_REJECTED(67, "UNIT_SNX_UPDATE_REJECTED", "", "", "UNIT_SNX_UPDATE_REJECTED"),
//    UNIT_OFFHIRE(68, "UNIT_OFFHIRE", "", "", "UNIT_OFFHIRE"),
//    UNIT_ONHIRE(69, "UNIT_ONHIRE", "", "", "UNIT_ONHIRE"),
//    UNIT_IFT_OUT(70, "UNIT_IFT_OUT", "", "", "UNIT_IFT_OUT"),
//    UNIT_IFT_IN(71, "UNIT_IFT_IN", "", "", "UNIT_IFT_IN"),
//    UNIT_DOCUMENT_CREATE(72, "UNIT_DOCUMENT_CREATE", "", "", "UNIT_DOCUMENT_CREATE"),
//    UNIT_DOCUMENT_UPDATE(73, "UNIT_DOCUMENT_UPDATE", "", "", "UNIT_DOCUMENT_UPDATE"),
//    UNIT_DOCUMENT_DELETE(74, "UNIT_DOCUMENT_DELETE", "", "", "UNIT_DOCUMENT_DELETE"),
//    UNIT_NOTICE(75, "UNIT_NOTICE", "", "", "UNIT_NOTICE"),
//    CARGO_PROPERTY_UPDATE(76, "CARGO_PROPERTY_UPDATE", "", "", "CARGO_PROPERTY_UPDATE"),
//    CARGO_DISCH(77, "CARGO_DISCH", "", "", "CARGO_DISCH"),
//    CARGO_LOAD(78, "CARGO_LOAD", "", "", "CARGO_LOAD"),
//    CARGO_DELIVER(79, "CARGO_DELIVER", "", "", "CARGO_DELIVER"),
//    CARGO_RECEIVE(80, "CARGO_RECEIVE", "", "", "CARGO_RECEIVE"),
//    CARGO_RAMP(81, "CARGO_RAMP", "", "", "CARGO_RAMP"),
//    CARGO_DERAMP(82, "CARGO_DERAMP", "", "", "CARGO_DERAMP"),
//    CARGO_STRIP(83, "CARGO_STRIP", "", "", "CARGO_STRIP"),
//    CARGO_STUFF(84, "CARGO_STUFF", "", "", "CARGO_STUFF"),
//    CARGO_MANUFACTURED(85, "CARGO_MANUFACTURED", "", "", "CARGO_MANUFACTURED"),
//    CARGO_TRANSLOAD(86, "CARGO_TRANSLOAD", "", "", "CARGO_TRANSLOAD"),
//    CARGO_MOVE(87, "CARGO_MOVE", "", "", "CARGO_MOVE"),
//    DISCREPANCY_NOTED(88, "DISCREPANCY_NOTED", "", "", "DISCREPANCY_NOTED"),
//    CARGO_POSITION_UPDATED(89, "CARGO_POSITION_UPDATED", "", "", "CARGO_POSITION_UPDATED"),
//    CARGO_DAMAGE(90, "CARGO_DAMAGE", "", "", "CARGO_DAMAGE"),
//    CARGO_SPLIT(91, "CARGO_SPLIT", "", "", "CARGO_SPLIT"),
//    CARGO_SPLIT_OFF(92, "CARGO_SPLIT_OFF", "", "", "CARGO_SPLIT_OFF"),
//    CARGO_RECONSIGN(93, "CARGO_RECONSIGN", "", "", "CARGO_RECONSIGN"),
//    CARGO_RECONSIGN_OFF(94, "CARGO_RECONSIGN_OFF", "", "", "CARGO_RECONSIGN_OFF"),
//    NOTICE_BKG(95, "NOTICE_BKG", "", "", "NOTICE_BKG"),
//    REROUTE_BKG(96, "REROUTE_BKG", "", "", "REROUTE_BKG"),
//    COMMODITY_UPDATE_BKG(97, "COMMODITY_UPDATE_BKG", "", "", "COMMODITY_UPDATE_BKG"),
//    EQ_UPDATE_BKG(98, "EQ_UPDATE_BKG", "", "", "EQ_UPDATE_BKG"),
//    EQ_RECEIVE_BKG(99, "EQ_RECEIVE_BKG", "", "", "EQ_RECEIVE_BKG"),
//    EQ_DISPATCH_BKG(100, "EQ_DISPATCH_BKG", "", "", "EQ_DISPATCH_BKG"),
//    EQ_ASSIGN_BKG(101, "EQ_ASSIGN_BKG", "", "", "EQ_ASSIGN_BKG"),
//    EQ_RESERVE_BKG(102, "EQ_RESERVE_BKG", "", "", "EQ_RESERVE_BKG"),
//    EQ_PREADVISE_BKG(103, "EQ_PREADVISE_BKG", "", "", "EQ_PREADVISE_BKG"),
//    REROUTE_RAIL_ORDER(104, "REROUTE_RAIL_ORDER", "", "", "REROUTE_RAIL_ORDER"),
//    EQ_RECEIVE_RO(105, "EQ_RECEIVE_RO", "", "", "EQ_RECEIVE_RO"),
//    NOTICE_RO(106, "NOTICE_RO", "", "", "NOTICE_RO"),
//    EQ_UPDATE_RO(107, "EQ_UPDATE_RO", "", "", "EQ_UPDATE_RO"),
//    EQ_RECEIVE_ERO(108, "EQ_RECEIVE_ERO", "", "", "EQ_RECEIVE_ERO"),
//    NOTICE_ERO(109, "NOTICE_ERO", "", "", "NOTICE_ERO"),
//    EQ_UPDATE_ERO(110, "EQ_UPDATE_ERO", "", "", "EQ_UPDATE_ERO"),
//    EDO_CREATE(111, "EDO_CREATE", "", "", "EDO_CREATE"),
//    EDO_PROPERTY_UPDATE(112, "EDO_PROPERTY_UPDATE", "", "", "EDO_PROPERTY_UPDATE"),
//    EQ_UPDATE_EDO(113, "EQ_UPDATE_EDO", "", "", "EQ_UPDATE_EDO"),
//    EQ_DISPATCH_EDO(114, "EQ_DISPATCH_EDO", "", "", "EQ_DISPATCH_EDO"),
//    EQ_RESERVE_EDO(115, "EQ_RESERVE_EDO", "", "", "EQ_RESERVE_EDO"),
//    NOTICE_DO(116, "NOTICE_DO", "", "", "NOTICE_DO"),
//    EQ_UPDATE_ELO(117, "EQ_UPDATE_ELO", "", "", "EQ_UPDATE_ELO"),
//    EQ_ASSIGN_ELO(118, "EQ_ASSIGN_ELO", "", "", "EQ_ASSIGN_ELO"),
//    NOTICE_ELO(119, "NOTICE_ELO", "", "", "NOTICE_ELO"),
//    PHASE_VV(120, "PHASE_VV", "", "", "PHASE_VV"),
//    UPDATE_VV(121, "UPDATE_VV", "", "", "UPDATE_VV"),
//    DELETE_STOWPLAN(122, "DELETE_STOWPLAN", "", "", "DELETE_STOWPLAN"),
//    REPLACE_STOWPLAN(123, "REPLACE_STOWPLAN", "", "", "REPLACE_STOWPLAN"),
//    NOTICE_VV(124, "NOTICE_VV", "", "", "NOTICE_VV"),
//    MOVE_TV(125, "MOVE_TV", "", "", "MOVE_TV"),
//    NOTICE_TV(126, "NOTICE_TV", "", "", "NOTICE_TV"),
//    CUSTOM_TV(127, "CUSTOM_TV", "", "", "CUSTOM_TV"),
//    TV_ITZ_LANE_ARRIVAL(128, "TV_ITZ_LANE_ARRIVAL", "", "", "TV_ITZ_LANE_ARRIVAL"),
//    TV_ITZ_DONE(129, "TV_ITZ_DONE", "", "", "TV_ITZ_DONE"),
//    PHASE_RV(130, "PHASE_RV", "", "", "PHASE_RV"),
//    UPDATE_RV(131, "UPDATE_RV", "", "", "UPDATE_RV"),
//    NOTICE_RV(132, "NOTICE_RV", "", "", "NOTICE_RV"),
//    REROUTE_RV(133, "REROUTE_RV", "", "", "REROUTE_RV"),
//    EDI_EXTRACT(134, "EDI_EXTRACT", "", "", "EDI_EXTRACT"),
//    EDI_EXTRACT_FAILED(135, "EDI_EXTRACT_FAILED", "", "", "EDI_EXTRACT_FAILED"),
//    EDI_POST(136, "EDI_POST", "", "", "EDI_POST"),
//    EDI_UNIT_BOL_DETACHED(137, "EDI_UNIT_BOL_DETACHED", "", "", "EDI_UNIT_BOL_DETACHED"),
//    EDI_POST_FAILED(138, "EDI_POST_FAILED", "", "", "EDI_POST_FAILED"),
//    NOTICE_EDISESS(139, "NOTICE_EDISESS", "", "", "NOTICE_EDISESS"),
//    CLUSTER_ERROR_DETECTED(140, "CLUSTER_ERROR_DETECTED", "", "", "CLUSTER_ERROR_DETECTED"),
//    CLUSTER_ERROR_CONTINUES(141, "CLUSTER_ERROR_CONTINUES", "", "", "CLUSTER_ERROR_CONTINUES"),
//    CLUSTER_ERROR_CLEARED(142, "CLUSTER_ERROR_CLEARED", "", "", "CLUSTER_ERROR_CLEARED"),
//    NOTICE_YARD(143, "NOTICE_YARD", "", "", "NOTICE_YARD"),
//    OBSOLETE_DRAYBACK(144, "OBSOLETE_DRAYBACK", "", "", "OBSOLETE_DRAYBACK"),
//    OBSOLETE_CREATE(145, "OBSOLETE_CREATE", "", "", "OBSOLETE_CREATE"),
//    OBSOLETE_ACTIVATE(146, "OBSOLETE_ACTIVATE", "", "", "OBSOLETE_ACTIVATE"),
//    OBSOLETE_REROUTE_CTR(147, "OBSOLETE_REROUTE_CTR", "", "", "OBSOLETE_REROUTE_CTR"),
//    OBSOLETE_REROUTE_GDS(148, "OBSOLETE_REROUTE_GDS", "", "", "OBSOLETE_REROUTE_GDS"),
//    OBSOLETE_PROPERTY_UPDATE_CTR(149, "OBSOLETE_PROPERTY_UPDATE_CTR", "", "", "OBSOLETE_PROPERTY_UPDATE_CTR"),
//    OBSOLETE_IGNORED_EDI_CTR(150, "OBSOLETE_IGNORED_EDI_CTR", "", "", "OBSOLETE_IGNORED_EDI_CTR"),
//    OBSOLETE_PROPERTY_UPDATE_GDS(151, "OBSOLETE_PROPERTY_UPDATE_GDS", "", "", "OBSOLETE_PROPERTY_UPDATE_GDS"),
//    OBSOLETE_MERGE(152, "OBSOLETE_MERGE", "", "", "OBSOLETE_MERGE"),
//    OBSOLETE_REACTIVATE(153, "OBSOLETE_REACTIVATE", "", "", "OBSOLETE_REACTIVATE"),
//    OBSOLETE_RETIRE(154, "OBSOLETE_RETIRE", "", "", "OBSOLETE_RETIRE"),
//    OBSOLETE_DEPART(155, "OBSOLETE_DEPART", "", "", "OBSOLETE_DEPART"),
//    OBSOLETE_YARD_MOVE(156, "OBSOLETE_YARD_MOVE", "", "", "OBSOLETE_YARD_MOVE"),
//    OBSOLETE_YARD_SHIFT(157, "OBSOLETE_YARD_SHIFT", "", "", "OBSOLETE_YARD_SHIFT"),
//    OBSOLETE_SHIFT_ON_CARRIER(158, "OBSOLETE_SHIFT_ON_CARRIER", "", "", "OBSOLETE_SHIFT_ON_CARRIER"),
//    OBSOLETE_POSITION_CORRECTION(159, "OBSOLETE_POSITION_CORRECTION", "", "", "OBSOLETE_POSITION_CORRECTION"),
//    OBSOLETE_LOAD_CONTAINER(160, "OBSOLETE_LOAD_CONTAINER", "", "", "OBSOLETE_LOAD_CONTAINER"),
//    OBSOLETE_LOAD_GOODS(161, "OBSOLETE_LOAD_GOODS", "", "", "OBSOLETE_LOAD_GOODS"),
//    OBSOLETE_DISCH_CONTAINER(162, "OBSOLETE_DISCH_CONTAINER", "", "", "OBSOLETE_DISCH_CONTAINER"),
//    OBSOLETE_DISCH_GOODS(163, "OBSOLETE_DISCH_GOODS", "", "", "OBSOLETE_DISCH_GOODS"),
//    OBSOLETE_TRANSLOAD_CONTAINER(164, "OBSOLETE_TRANSLOAD_CONTAINER", "", "", "OBSOLETE_TRANSLOAD_CONTAINER"),
//    OBSOLETE_TRANSLOAD_GOODS(165, "OBSOLETE_TRANSLOAD_GOODS", "", "", "OBSOLETE_TRANSLOAD_GOODS"),
//    OBSOLETE_RAMP_CONTAINER(166, "OBSOLETE_RAMP_CONTAINER", "", "", "OBSOLETE_RAMP_CONTAINER"),
//    OBSOLETE_RAMP_GOODS(167, "OBSOLETE_RAMP_GOODS", "", "", "OBSOLETE_RAMP_GOODS"),
//    OBSOLETE_DERAMP_CONTAINER(168, "OBSOLETE_DERAMP_CONTAINER", "", "", "OBSOLETE_DERAMP_CONTAINER"),
//    OBSOLETE_DERAMP_GOODS(169, "OBSOLETE_DERAMP_GOODS", "", "", "OBSOLETE_DERAMP_GOODS"),
//    OBSOLETE_DELIVER_EQUIPMENT(170, "OBSOLETE_DELIVER_EQUIPMENT", "", "", "OBSOLETE_DELIVER_EQUIPMENT"),
//    OBSOLETE_DELIVER_CONTAINER(171, "OBSOLETE_DELIVER_CONTAINER", "", "", "OBSOLETE_DELIVER_CONTAINER"),
//    OBSOLETE_DELIVER_CHASSIS(172, "OBSOLETE_DELIVER_CHASSIS", "", "", "OBSOLETE_DELIVER_CHASSIS"),
//    OBSOLETE_DELIVER_ACCESSORY(173, "OBSOLETE_DELIVER_ACCESSORY", "", "", "OBSOLETE_DELIVER_ACCESSORY"),
//    OBSOLETE_DELIVER_GOODS(174, "OBSOLETE_DELIVER_GOODS", "", "", "OBSOLETE_DELIVER_GOODS"),
//    OBSOLETE_RECEIVE_EQUIPMENT(175, "OBSOLETE_RECEIVE_EQUIPMENT", "", "", "OBSOLETE_RECEIVE_EQUIPMENT"),
//    OBSOLETE_RECEIVE_CONTAINER(176, "OBSOLETE_RECEIVE_CONTAINER", "", "", "OBSOLETE_RECEIVE_CONTAINER"),
//    OBSOLETE_RECEIVE_CHASSIS(177, "OBSOLETE_RECEIVE_CHASSIS", "", "", "OBSOLETE_RECEIVE_CHASSIS"),
//    OBSOLETE_RECEIVE_ACCESSORY(178, "OBSOLETE_RECEIVE_ACCESSORY", "", "", "OBSOLETE_RECEIVE_ACCESSORY"),
//    OBSOLETE_RECEIVE_GOODS(179, "OBSOLETE_RECEIVE_GOODS", "", "", "OBSOLETE_RECEIVE_GOODS"),
//    OBSOLETE_STRIP_CONTAINER(180, "OBSOLETE_STRIP_CONTAINER", "", "", "OBSOLETE_STRIP_CONTAINER"),
//    OBSOLETE_STRIP_GOODS(181, "OBSOLETE_STRIP_GOODS", "", "", "OBSOLETE_STRIP_GOODS"),
//    OBSOLETE_STUFF_CONTAINER(182, "OBSOLETE_STUFF_CONTAINER", "", "", "OBSOLETE_STUFF_CONTAINER"),
//    OBSOLETE_STUFF_GOODS(183, "OBSOLETE_STUFF_GOODS", "", "", "OBSOLETE_STUFF_GOODS"),
//    OBSOLETE_POWER_CONNECT(184, "OBSOLETE_POWER_CONNECT", "", "", "OBSOLETE_POWER_CONNECT"),
//    OBSOLETE_POWER_DISCONNECT(185, "OBSOLETE_POWER_DISCONNECT", "", "", "OBSOLETE_POWER_DISCONNECT"),
//    OBSOLETE_SEAL_UNIT(186, "OBSOLETE_SEAL_UNIT", "", "", "OBSOLETE_SEAL_UNIT"),
//    OBSOLETE_MOUNT(187, "OBSOLETE_MOUNT", "", "", "OBSOLETE_MOUNT"),
//    OBSOLETE_DISMOUNT(188, "OBSOLETE_DISMOUNT", "", "", "OBSOLETE_DISMOUNT"),
//    OBSOLETE_SWIPE(189, "OBSOLETE_SWIPE", "", "", "OBSOLETE_SWIPE"),
//    OBSOLETE_ROLL(190, "OBSOLETE_ROLL", "", "", "OBSOLETE_ROLL"),
//    OBSOLETE_RENUMBER(191, "OBSOLETE_RENUMBER", "", "", "OBSOLETE_RENUMBER"),
//    OBSOLETE_CHECKDIGIT(192, "OBSOLETE_CHECKDIGIT", "", "", "OBSOLETE_CHECKDIGIT"),
//    OBSOLETE_PREADVISE(193, "OBSOLETE_PREADVISE", "", "", "OBSOLETE_PREADVISE"),
//    OBSOLETE_CANCEL_PREADVISE(194, "OBSOLETE_CANCEL_PREADVISE", "", "", "OBSOLETE_CANCEL_PREADVISE"),
//    OBSOLETE_RESERVE(195, "OBSOLETE_RESERVE", "", "", "OBSOLETE_RESERVE"),
//    OBSOLETE_CANCEL_RESERVE(196, "OBSOLETE_CANCEL_RESERVE", "", "", "OBSOLETE_CANCEL_RESERVE"),
//    OBSOLETE_BUNDLE(197, "OBSOLETE_BUNDLE", "", "", "OBSOLETE_BUNDLE"),
//    OBSOLETE_UNBUNDLE(198, "OBSOLETE_UNBUNDLE", "", "", "OBSOLETE_UNBUNDLE"),
//    OBSOLETE_BRING_BACK_INTO_YARD(199, "OBSOLETE_BRING_BACK_INTO_YARD", "", "", "OBSOLETE_BRING_BACK_INTO_YARD"),
//    OBSOLETE_BRING_TO_COMMUNITY(200, "OBSOLETE_BRING_TO_COMMUNITY", "", "", "OBSOLETE_BRING_TO_COMMUNITY"),
//    OBSOLETE_NOTICE(201, "OBSOLETE_NOTICE", "", "", "OBSOLETE_NOTICE"),
//    OBSOLETE_NOTICE_CHS(202, "OBSOLETE_NOTICE_CHS", "", "", "OBSOLETE_NOTICE_CHS"),
//    OBSOLETE_NOTICE_ACC(203, "OBSOLETE_NOTICE_ACC", "", "", "OBSOLETE_NOTICE_ACC"),
//    OBSOLETE_ENABLE_ROAD(204, "OBSOLETE_ENABLE_ROAD", "", "", "OBSOLETE_ENABLE_ROAD"),
//    OBSOLETE_DISABLE_ROAD(205, "OBSOLETE_DISABLE_ROAD", "", "", "OBSOLETE_DISABLE_ROAD"),
//    OBSOLETE_RECORD_DAMAGE(206, "OBSOLETE_RECORD_DAMAGE", "", "", "OBSOLETE_RECORD_DAMAGE"),
//    OBSOLETE_RECTIFY(207, "OBSOLETE_RECTIFY", "", "", "OBSOLETE_RECTIFY"),
//    OBSOLETE_RETURN_TO_STORAGE(208, "OBSOLETE_RETURN_TO_STORAGE", "", "", "OBSOLETE_RETURN_TO_STORAGE"),
//    OBSOLETE_WANTS_POWER_YES(209, "OBSOLETE_WANTS_POWER_YES", "", "", "OBSOLETE_WANTS_POWER_YES"),
//    OBSOLETE_WANTS_POWER_NO(210, "OBSOLETE_WANTS_POWER_NO", "", "", "OBSOLETE_WANTS_POWER_NO"),
//    UNIT_OPERATOR_CHANGE(211, "UNIT_OPERATOR_CHANGE", "", "", "UNIT_OPERATOR_CHANGE"),
//    UNIT_STORAGE_UPDATE(212, "UNIT_STORAGE_UPDATE", "", "", "UNIT_STORAGE_UPDATE"),
//    UNIT_LINE_STORAGE_UPDATE(213, "UNIT_LINE_STORAGE_UPDATE", "", "", "UNIT_LINE_STORAGE_UPDATE"),
//    UNIT_POWER_UPDATE(214, "UNIT_POWER_UPDATE", "", "", "UNIT_POWER_UPDATE"),
//    UPDATE_DELIVERY_RQMNTS(215, "UPDATE_DELIVERY_RQMNTS", "", "", "UPDATE_DELIVERY_RQMNTS"),
//    UNIT_HAZARDS_UPDATE(216, "UNIT_HAZARDS_UPDATE", "", "", "UNIT_HAZARDS_UPDATE"),
//    UNIT_HAZARDS_INSERT(217, "UNIT_HAZARDS_INSERT", "", "", "UNIT_HAZARDS_INSERT"),
//    UNIT_HAZARDS_DELETE(218, "UNIT_HAZARDS_DELETE", "", "", "UNIT_HAZARDS_DELETE"),
//    REEFER_SETTINGS_RECORDED(219, "REEFER_SETTINGS_RECORDED", "", "", "REEFER_SETTINGS_RECORDED"),
//    UNIT_OVERDIMENSIONS_UPDATE(220, "UNIT_OVERDIMENSIONS_UPDATE", "", "", "UNIT_OVERDIMENSIONS_UPDATE"),
//    UNIT_ATTACH_TO_ERO(221, "UNIT_ATTACH_TO_ERO", "", "", "UNIT_ATTACH_TO_ERO"),
//    UNIT_DRAY_IN(222, "UNIT_DRAY_IN", "", "", "UNIT_DRAY_IN"),
//    SERVICE_ORDER_PROPERTY_UPDATE(223, "SERVICE_ORDER_PROPERTY_UPDATE", "", "", "SERVICE_ORDER_PROPERTY_UPDATE"),
//    SERVICE_ORDER_BILLING_PARTY_CHANGED(224, "SERVICE_ORDER_BILLING_PARTY_CHANGED", "", "", "SERVICE_ORDER_BILLING_PARTY_CHANGED"),
//    SERVICE_ORDER_STATUS_CHANGED(225, "SERVICE_ORDER_STATUS_CHANGED", "", "", "SERVICE_ORDER_STATUS_CHANGED"),
//    SERVICE_ORDER_SERVICE_ADDED(226, "SERVICE_ORDER_SERVICE_ADDED", "", "", "SERVICE_ORDER_SERVICE_ADDED"),
//    SERVICE_ORDER_SERVICE_REMOVED(227, "SERVICE_ORDER_SERVICE_REMOVED", "", "", "SERVICE_ORDER_SERVICE_REMOVED"),
//    SERVICE_ORDER_EQ_ADDED(228, "SERVICE_ORDER_EQ_ADDED", "", "", "SERVICE_ORDER_EQ_ADDED"),
//    SERVICE_ORDER_EQ_REMOVED(229, "SERVICE_ORDER_EQ_REMOVED", "", "", "SERVICE_ORDER_EQ_REMOVED"),
//    SERVICE_ORDER_ITEM_ADDED(230, "SERVICE_ORDER_ITEM_ADDED", "", "", "SERVICE_ORDER_ITEM_ADDED"),
//    SERVICE_ORDER_ITEM_REMOVED(231, "SERVICE_ORDER_ITEM_REMOVED", "", "", "SERVICE_ORDER_ITEM_REMOVED"),
//    SERVICE_ORDER_ITEM_PROPERTY_UPDATE(232, "SERVICE_ORDER_ITEM_PROPERTY_UPDATE", "", "", "SERVICE_ORDER_ITEM_PROPERTY_UPDATE"),
//    SERVICE_ORDER_UNIT_STATUS_CHANGED(233, "SERVICE_ORDER_UNIT_STATUS_CHANGED", "", "", "SERVICE_ORDER_UNIT_STATUS_CHANGED"),
//    EQ_RESERVE_BL(234, "EQ_RESERVE_BL", "", "", "EQ_RESERVE_BL"),
//    BL_CREATE(235, "BL_CREATE", "", "", "BL_CREATE"),
//    BL_PROPERTY_UPDATE(236, "BL_PROPERTY_UPDATE", "", "", "BL_PROPERTY_UPDATE"),
//    REROUTE_BL(237, "REROUTE_BL", "", "", "REROUTE_BL"),
//    BOOKING_HAZARDS_UPDATE(238, "BOOKING_HAZARDS_UPDATE", "", "", "BOOKING_HAZARDS_UPDATE"),
//    BOOKING_HAZARDS_INSERT(239, "BOOKING_HAZARDS_INSERT", "", "", "BOOKING_HAZARDS_INSERT"),
//    BOOKING_HAZARDS_DELETE(240, "BOOKING_HAZARDS_DELETE", "", "", "BOOKING_HAZARDS_DELETE"),
//    BOOKING_PROPERTY_UPDATE(241, "BOOKING_PROPERTY_UPDATE", "", "", "BOOKING_PROPERTY_UPDATE"),
//    BOOKING_CREATE(242, "BOOKING_CREATE", "", "", "BOOKING_CREATE"),
//    APPT_CREATE(243, "APPT_CREATE", "", "", "APPT_CREATE"),
//    TVAPPT_CREATE(244, "TVAPPT_CREATE", "", "", "TVAPPT_CREATE"),
//    APPT_CANCEL(245, "APPT_CANCEL", "", "", "APPT_CANCEL"),
//    TVAPPT_CANCEL(246, "TVAPPT_CANCEL", "", "", "TVAPPT_CANCEL"),
//    APPT_EXPIRE(247, "APPT_EXPIRE", "", "", "APPT_EXPIRE"),
//    TVAPPT_EXPIRE(248, "TVAPPT_EXPIRE", "", "", "TVAPPT_EXPIRE"),
//    APPT_CLOSE(249, "APPT_CLOSE", "", "", "APPT_CLOSE"),
//    TVAPPT_CLOSE(250, "TVAPPT_CLOSE", "", "", "TVAPPT_CLOSE"),
//    APPT_USED(251, "APPT_USED", "", "", "APPT_USED"),
//    TVAPPT_USED(252, "TVAPPT_USED", "", "", "TVAPPT_USED"),
//    APPT_USED_LATE(253, "APPT_USED_LATE", "", "", "APPT_USED_LATE"),
//    TVAPPT_USED_LATE(254, "TVAPPT_USED_LATE", "", "", "TVAPPT_USED_LATE"),
//    APPT_LATE(255, "APPT_LATE", "", "", "APPT_LATE"),
//    TVAPPT_LATE(256, "TVAPPT_LATE", "", "", "TVAPPT_LATE"),
//    APPT_USED_PEAK_HRS(257, "APPT_USED_PEAK_HRS", "", "", "APPT_USED_PEAK_HRS"),
//    TVAPPT_USED_PEAK_HRS(258, "TVAPPT_USED_PEAK_HRS", "", "", "TVAPPT_USED_PEAK_HRS"),
//    APPT_CANCELED_NOT_REUSED(259, "APPT_CANCELED_NOT_REUSED", "", "", "APPT_CANCELED_NOT_REUSED"),
//    TVAPPT_CANCELED_NOT_REUSED(260, "TVAPPT_CANCELED_NOT_REUSED", "", "", "TVAPPT_CANCELED_NOT_REUSED"),
//    CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED(261, "CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED", "", "", "CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED"),
//    CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED(262, "CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED", "", "", "CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED"),
//    CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED(263, "CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED", "", "", "CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED"),
//    UNIT_EVENT_PROPERTY_UPDATE(264, "UNIT_EVENT_PROPERTY_UPDATE", "", "", "UNIT_EVENT_PROPERTY_UPDATE"),
//    UNIT_TRANSFER_ALLOWED(265, "UNIT_TRANSFER_ALLOWED", "", "", "UNIT_TRANSFER_ALLOWED"),
//    UNIT_TBD_UNIT_MERGE(266, "UNIT_TBD_UNIT_MERGE", "", "", "UNIT_TBD_UNIT_MERGE"),
//    RAILCAR_DAMAGED(267, "RAILCAR_DAMAGED", "", "", "RAILCAR_DAMAGED"),
//    RAILCAR_REPAIRED(268, "RAILCAR_REPAIRED", "", "", "RAILCAR_REPAIRED"),
//    CAS_VESSEL_VISIT_UPDATE(269, "CAS_VESSEL_VISIT_UPDATE", "", "", "CAS_VESSEL_VISIT_UPDATE"),
//    CAS_TRAIN_VISIT_UPDATE(270, "CAS_TRAIN_VISIT_UPDATE", "", "", "CAS_TRAIN_VISIT_UPDATE"),
//    CAS_VV_REQUEST_CONTAINER_LIST(271, "CAS_VV_REQUEST_CONTAINER_LIST", "", "", "CAS_VV_REQUEST_CONTAINER_LIST"),
//    CAS_RV_REQUEST_CONTAINER_LIST(272, "CAS_RV_REQUEST_CONTAINER_LIST", "", "", "CAS_RV_REQUEST_CONTAINER_LIST"),
//    CAS_VV_REQUEST_GEOMETRY(273, "CAS_VV_REQUEST_GEOMETRY", "", "", "CAS_VV_REQUEST_GEOMETRY"),
//    CAS_RV_REQUEST_GEOMETRY(274, "CAS_RV_REQUEST_GEOMETRY", "", "", "CAS_RV_REQUEST_GEOMETRY"),
//    CAS_UNIT_CAPTURE(275, "CAS_UNIT_CAPTURE", "", "", "CAS_UNIT_CAPTURE"),
//    CAS_UNIT_POSITION_UPDATE(276, "CAS_UNIT_POSITION_UPDATE", "", "", "CAS_UNIT_POSITION_UPDATE"),
//    CAS_UNIT_READY_TO_TRANSFER(277, "CAS_UNIT_READY_TO_TRANSFER", "", "", "CAS_UNIT_READY_TO_TRANSFER"),
//    CHE_LIFT(278, "CHE_LIFT", "", "", "CHE_LIFT"),
//    CHE_SET(279, "CHE_SET", "", "", "CHE_SET"),
//    CHE_ERROR_UNIT_HEAVY_FOR_CHE(280, "CHE_ERROR_UNIT_HEAVY_FOR_CHE", "", "", "CHE_ERROR_UNIT_HEAVY_FOR_CHE"),
//    CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST(281, "CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST", "", "", "CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST"),
//    CHE_ERROR_UNIT_DAMAGED(282, "CHE_ERROR_UNIT_DAMAGED", "", "", "CHE_ERROR_UNIT_DAMAGED"),
//    CHE_ERROR_UNIT_HAS_HOLDS(283, "CHE_ERROR_UNIT_HAS_HOLDS", "", "", "CHE_ERROR_UNIT_HAS_HOLDS"),
//    CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE(284, "CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE", "", "", "CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE"),
//    CHE_ORDER_REJECTION(285, "CHE_ORDER_REJECTION", "", "", "CHE_ORDER_REJECTION"),
//    CHE_ORDER_ABORT(286, "CHE_ORDER_ABORT", "", "", "CHE_ORDER_ABORT"),
//    CHE_DISPATCH_ERROR(287, "CHE_DISPATCH_ERROR", "", "", "CHE_DISPATCH_ERROR"),
//    CHE_SCHEDULE_ERROR(288, "CHE_SCHEDULE_ERROR", "", "", "CHE_SCHEDULE_ERROR"),
//    CHE_SCHEDULER_QUARANTINE(289, "CHE_SCHEDULER_QUARANTINE", "", "", "CHE_SCHEDULER_QUARANTINE"),
//    RAILCAR_INVENTORY(290, "RAILCAR_INVENTORY", "", "", "RAILCAR_INVENTORY"),
//    RAILCAR_SPOTTING_FAILED(291, "RAILCAR_SPOTTING_FAILED", "", "", "RAILCAR_SPOTTING_FAILED"),
//    RAILCAR_SPOTTED(292, "RAILCAR_SPOTTED", "", "", "RAILCAR_SPOTTED"),
//    CHE_RAIL_DROP_POSITION_UNKNOWN(293, "CHE_RAIL_DROP_POSITION_UNKNOWN", "", "", "CHE_RAIL_DROP_POSITION_UNKNOWN"),
//    CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER(294, "CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER", "", "", "CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER"),
//    CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED(295, "CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED", "", "", "CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED"),
//    CHE_ERROR_REPORTED_STOW_POSITION_INVALID(296, "CHE_ERROR_REPORTED_STOW_POSITION_INVALID", "", "", "CHE_ERROR_REPORTED_STOW_POSITION_INVALID"),
//    CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR(297, "CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR", "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR"),
//    CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR(298, "CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR", "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR"),
//    CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR(299, "CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR", "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR"),
//    CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE(300, "CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE", "", "", "CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE"),
//    CHE_DISCHARGE_SWAP(301, "CHE_DISCHARGE_SWAP", "", "", "CHE_DISCHARGE_SWAP"),
//    CHE_ERROR_DURING_UNIT_CAPTURE(302, "CHE_ERROR_DURING_UNIT_CAPTURE", "", "", "CHE_ERROR_DURING_UNIT_CAPTURE"),
//    CHE_ERROR_DOOR_DIRECTION_MISMATCH(303, "CHE_ERROR_DOOR_DIRECTION_MISMATCH", "", "", "CHE_ERROR_DOOR_DIRECTION_MISMATCH"),
//    CHE_ERROR_ID_DIFF_FROM_KNOWN(304, "CHE_ERROR_ID_DIFF_FROM_KNOWN", "", "", "CHE_ERROR_ID_DIFF_FROM_KNOWN"),
//    CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED(305, "CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED", "", "", "CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED"),
//    CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME(306, "CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME", "", "", "CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME"),
//    TZ_NO_DIRECT_INTERCHANGE_TPS(307, "TZ_NO_DIRECT_INTERCHANGE_TPS", "", "", "TZ_NO_DIRECT_INTERCHANGE_TPS"),
//    UNIT_DISCHLIST_EDI_CREATED(308, "UNIT_DISCHLIST_EDI_CREATED", "", "", "UNIT_DISCHLIST_EDI_CREATED"),
//    UNIT_DISCHLIST_EDI_UPDATED(309, "UNIT_DISCHLIST_EDI_UPDATED", "", "", "UNIT_DISCHLIST_EDI_UPDATED"),
//    UNIT_CARRIAGE_MOUNT(310, "UNIT_CARRIAGE_MOUNT", "", "", "UNIT_CARRIAGE_MOUNT"),
//    UNIT_CARRIAGE_DISMOUNT(311, "UNIT_CARRIAGE_DISMOUNT", "", "", "UNIT_CARRIAGE_DISMOUNT"),
//    UNIT_CTR_ACCESSORY_MOUNT(312, "UNIT_CTR_ACCESSORY_MOUNT", "", "", "UNIT_CTR_ACCESSORY_MOUNT"),
//    UNIT_CTR_ACCESSORY_DISMOUNT(313, "UNIT_CTR_ACCESSORY_DISMOUNT", "", "", "UNIT_CTR_ACCESSORY_DISMOUNT"),
//    UNIT_CHS_ACCESSORY_MOUNT(314, "UNIT_CHS_ACCESSORY_MOUNT", "", "", "UNIT_CHS_ACCESSORY_MOUNT"),
//    UNIT_CHS_ACCESSORY_DISMOUNT(315, "UNIT_CHS_ACCESSORY_DISMOUNT", "", "", "UNIT_CHS_ACCESSORY_DISMOUNT"),
//    UNIT_BUNDLE_PAYLOAD_ADD(316, "UNIT_BUNDLE_PAYLOAD_ADD", "", "", "UNIT_BUNDLE_PAYLOAD_ADD"),
//    UNIT_BUNDLE_PAYLOAD_SWIPE(317, "UNIT_BUNDLE_PAYLOAD_SWIPE", "", "", "UNIT_BUNDLE_PAYLOAD_SWIPE"),
//    WI_POSITION_UPDATED(318, "WI_POSITION_UPDATED", "", "", "WI_POSITION_UPDATED"),
//    WI_DISCHARGE_LOADED_BACK(319, "WI_DISCHARGE_LOADED_BACK", "", "", "WI_DISCHARGE_LOADED_BACK"),
//    UNIT_ACCESSORY_BRING_BACK_INTO_YARD(320, "UNIT_ACCESSORY_BRING_BACK_INTO_YARD", "", "", "UNIT_ACCESSORY_BRING_BACK_INTO_YARD"),
//    UNIT_ACCESSORY_BRING_TO_COMMUNITY(321, "UNIT_ACCESSORY_BRING_TO_COMMUNITY", "", "", "UNIT_ACCESSORY_BRING_TO_COMMUNITY"),
//    UNIT_ACCESSORY_DELIVER(322, "UNIT_ACCESSORY_DELIVER", "", "", "UNIT_ACCESSORY_DELIVER"),
//    UNIT_ACCESSORY_DELIVER_REJECTED(323, "UNIT_ACCESSORY_DELIVER_REJECTED", "", "", "UNIT_ACCESSORY_DELIVER_REJECTED"),
//    UNIT_ACCESSORY_DERAMP(324, "UNIT_ACCESSORY_DERAMP", "", "", "UNIT_ACCESSORY_DERAMP"),
//    UNIT_ACCESSORY_DISCH(325, "UNIT_ACCESSORY_DISCH", "", "", "UNIT_ACCESSORY_DISCH"),
//    UNIT_ACCESSORY_DRAY_IN(326, "UNIT_ACCESSORY_DRAY_IN", "", "", "UNIT_ACCESSORY_DRAY_IN"),
//    UNIT_ACCESSORY_IFT_IN(327, "UNIT_ACCESSORY_IFT_IN", "", "", "UNIT_ACCESSORY_IFT_IN"),
//    UNIT_ACCESSORY_IFT_OUT(328, "UNIT_ACCESSORY_IFT_OUT", "", "", "UNIT_ACCESSORY_IFT_OUT"),
//    UNIT_ACCESSORY_IN_GATE(329, "UNIT_ACCESSORY_IN_GATE", "", "", "UNIT_ACCESSORY_IN_GATE"),
//    UNIT_ACCESSORY_IN_RAIL(330, "UNIT_ACCESSORY_IN_RAIL", "", "", "UNIT_ACCESSORY_IN_RAIL"),
//    UNIT_ACCESSORY_IN_VESSEL(331, "UNIT_ACCESSORY_IN_VESSEL", "", "", "UNIT_ACCESSORY_IN_VESSEL"),
//    UNIT_ACCESSORY_OUT_GATE(332, "UNIT_ACCESSORY_OUT_GATE", "", "", "UNIT_ACCESSORY_OUT_GATE"),
//    UNIT_ACCESSORY_OUT_RAIL(333, "UNIT_ACCESSORY_OUT_RAIL", "", "", "UNIT_ACCESSORY_OUT_RAIL"),
//    UNIT_ACCESSORY_POSITION_CORRECTION(334, "UNIT_ACCESSORY_POSITION_CORRECTION", "", "", "UNIT_ACCESSORY_POSITION_CORRECTION"),
//    UNIT_ACCESSORY_RAMP(335, "UNIT_ACCESSORY_RAMP", "", "", "UNIT_ACCESSORY_RAMP"),
//    UNIT_ACCESSORY_RECEIVE(336, "UNIT_ACCESSORY_RECEIVE", "", "", "UNIT_ACCESSORY_RECEIVE"),
//    UNIT_ACCESSORY_REROUTE(337, "UNIT_ACCESSORY_REROUTE", "", "", "UNIT_ACCESSORY_REROUTE"),
//    UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER(338, "UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER", "", "", "UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER"),
//    UNIT_ACCESSORY_SHIFT_ON_CARRIER(339, "UNIT_ACCESSORY_SHIFT_ON_CARRIER", "", "", "UNIT_ACCESSORY_SHIFT_ON_CARRIER"),
//    UNIT_ACCESSORY_YARD_MOVE(340, "UNIT_ACCESSORY_YARD_MOVE", "", "", "UNIT_ACCESSORY_YARD_MOVE"),
//    UNIT_ACCESSORY_YARD_SHIFT(341, "UNIT_ACCESSORY_YARD_SHIFT", "", "", "UNIT_ACCESSORY_YARD_SHIFT"),
//    UNIT_CARRIAGE_BRING_BACK_INTO_YARD(342, "UNIT_CARRIAGE_BRING_BACK_INTO_YARD", "", "", "UNIT_CARRIAGE_BRING_BACK_INTO_YARD"),
//    UNIT_CARRIAGE_BRING_TO_COMMUNITY(343, "UNIT_CARRIAGE_BRING_TO_COMMUNITY", "", "", "UNIT_CARRIAGE_BRING_TO_COMMUNITY"),
//    UNIT_CARRIAGE_DELIVER(344, "UNIT_CARRIAGE_DELIVER", "", "", "UNIT_CARRIAGE_DELIVER"),
//    UNIT_CARRIAGE_DELIVER_REJECTED(345, "UNIT_CARRIAGE_DELIVER_REJECTED", "", "", "UNIT_CARRIAGE_DELIVER_REJECTED"),
//    UNIT_CARRIAGE_DRAY_IN(346, "UNIT_CARRIAGE_DRAY_IN", "", "", "UNIT_CARRIAGE_DRAY_IN"),
//    UNIT_CARRIAGE_IFT_IN(347, "UNIT_CARRIAGE_IFT_IN", "", "", "UNIT_CARRIAGE_IFT_IN"),
//    UNIT_CARRIAGE_IFT_OUT(348, "UNIT_CARRIAGE_IFT_OUT", "", "", "UNIT_CARRIAGE_IFT_OUT"),
//    UNIT_CARRIAGE_IN_GATE(349, "UNIT_CARRIAGE_IN_GATE", "", "", "UNIT_CARRIAGE_IN_GATE"),
//    UNIT_CARRIAGE_OUT_GATE(350, "UNIT_CARRIAGE_OUT_GATE", "", "", "UNIT_CARRIAGE_OUT_GATE"),
//    UNIT_CARRIAGE_POSITION_CORRECTION(351, "UNIT_CARRIAGE_POSITION_CORRECTION", "", "", "UNIT_CARRIAGE_POSITION_CORRECTION"),
//    UNIT_CARRIAGE_RECEIVE(352, "UNIT_CARRIAGE_RECEIVE", "", "", "UNIT_CARRIAGE_RECEIVE"),
//    UNIT_CARRIAGE_YARD_MOVE(353, "UNIT_CARRIAGE_YARD_MOVE", "", "", "UNIT_CARRIAGE_YARD_MOVE"),
//    UNIT_CARRIAGE_YARD_SHIFT(354, "UNIT_CARRIAGE_YARD_SHIFT", "", "", "UNIT_CARRIAGE_YARD_SHIFT"),
//    UNIT_PAYLOAD_BRING_BACK_INTO_YARD(355, "UNIT_PAYLOAD_BRING_BACK_INTO_YARD", "", "", "UNIT_PAYLOAD_BRING_BACK_INTO_YARD"),
//    UNIT_PAYLOAD_BRING_TO_COMMUNITY(356, "UNIT_PAYLOAD_BRING_TO_COMMUNITY", "", "", "UNIT_PAYLOAD_BRING_TO_COMMUNITY"),
//    UNIT_PAYLOAD_DELIVER(357, "UNIT_PAYLOAD_DELIVER", "", "", "UNIT_PAYLOAD_DELIVER"),
//    UNIT_PAYLOAD_DELIVER_REJECTED(358, "UNIT_PAYLOAD_DELIVER_REJECTED", "", "", "UNIT_PAYLOAD_DELIVER_REJECTED"),
//    UNIT_PAYLOAD_DERAMP(359, "UNIT_PAYLOAD_DERAMP", "", "", "UNIT_PAYLOAD_DERAMP"),
//    UNIT_PAYLOAD_DISCH(360, "UNIT_PAYLOAD_DISCH", "", "", "UNIT_PAYLOAD_DISCH"),
//    UNIT_PAYLOAD_DRAY_IN(361, "UNIT_PAYLOAD_DRAY_IN", "", "", "UNIT_PAYLOAD_DRAY_IN"),
//    UNIT_PAYLOAD_IFT_IN(362, "UNIT_PAYLOAD_IFT_IN", "", "", "UNIT_PAYLOAD_IFT_IN"),
//    UNIT_PAYLOAD_IFT_OUT(363, "UNIT_PAYLOAD_IFT_OUT", "", "", "UNIT_PAYLOAD_IFT_OUT"),
//    UNIT_PAYLOAD_IN_GATE(364, "UNIT_PAYLOAD_IN_GATE", "", "", "UNIT_PAYLOAD_IN_GATE"),
//    UNIT_PAYLOAD_IN_RAIL(365, "UNIT_PAYLOAD_IN_RAIL", "", "", "UNIT_PAYLOAD_IN_RAIL"),
//    UNIT_PAYLOAD_IN_VESSEL(366, "UNIT_PAYLOAD_IN_VESSEL", "", "", "UNIT_PAYLOAD_IN_VESSEL"),
//    UNIT_PAYLOAD_LOAD(367, "UNIT_PAYLOAD_LOAD", "", "", "UNIT_PAYLOAD_LOAD"),
//    UNIT_PAYLOAD_OUT_GATE(368, "UNIT_PAYLOAD_OUT_GATE", "", "", "UNIT_PAYLOAD_OUT_GATE"),
//    UNIT_PAYLOAD_OUT_RAIL(369, "UNIT_PAYLOAD_OUT_RAIL", "", "", "UNIT_PAYLOAD_OUT_RAIL"),
//    UNIT_PAYLOAD_OUT_VESSEL(370, "UNIT_PAYLOAD_OUT_VESSEL", "", "", "UNIT_PAYLOAD_OUT_VESSEL"),
//    UNIT_PAYLOAD_POSITION_CORRECTION(371, "UNIT_PAYLOAD_POSITION_CORRECTION", "", "", "UNIT_PAYLOAD_POSITION_CORRECTION"),
//    UNIT_PAYLOAD_RAMP(372, "UNIT_PAYLOAD_RAMP", "", "", "UNIT_PAYLOAD_RAMP"),
//    UNIT_PAYLOAD_RECEIVE(373, "UNIT_PAYLOAD_RECEIVE", "", "", "UNIT_PAYLOAD_RECEIVE"),
//    UNIT_PAYLOAD_REROUTE(374, "UNIT_PAYLOAD_REROUTE", "", "", "UNIT_PAYLOAD_REROUTE"),
//    UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER(375, "UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER", "", "", "UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER"),
//    UNIT_PAYLOAD_ROLL(376, "UNIT_PAYLOAD_ROLL", "", "", "UNIT_PAYLOAD_ROLL"),
//    UNIT_PAYLOAD_SHIFT_ON_CARRIER(377, "UNIT_PAYLOAD_SHIFT_ON_CARRIER", "", "", "UNIT_PAYLOAD_SHIFT_ON_CARRIER"),
//    UNIT_PAYLOAD_YARD_MOVE(378, "UNIT_PAYLOAD_YARD_MOVE", "", "", "UNIT_PAYLOAD_YARD_MOVE"),
//    UNIT_PAYLOAD_YARD_SHIFT(379, "UNIT_PAYLOAD_YARD_SHIFT", "", "", "UNIT_PAYLOAD_YARD_SHIFT"),
//    UNIT_TRANSLOAD_STRIP(380, "UNIT_TRANSLOAD_STRIP", "", "", "UNIT_TRANSLOAD_STRIP"),
//    UNIT_TRANSLOAD_TO_EMPTY(381, "UNIT_TRANSLOAD_TO_EMPTY", "", "", "UNIT_TRANSLOAD_TO_EMPTY"),
//    UNIT_TRANSLOAD_STUFF(382, "UNIT_TRANSLOAD_STUFF", "", "", "UNIT_TRANSLOAD_STUFF"),
//    UNIT_TRANSLOAD_TO_FULL(383, "UNIT_TRANSLOAD_TO_FULL", "", "", "UNIT_TRANSLOAD_TO_FULL"),
//    UNIT_MISIDENTIFIED(384, "UNIT_MISIDENTIFIED", "", "", "UNIT_MISIDENTIFIED"),
//    UNKNOWN_DOOR_DIRECTION_ENCOUNTERED(385, "UNKNOWN_DOOR_DIRECTION_ENCOUNTERED", "", "", "UNKNOWN_DOOR_DIRECTION_ENCOUNTERED"),
//    WI_CREATED_FOR_UNPLANNED_DISCH(386, "WI_CREATED_FOR_UNPLANNED_DISCH", "", "", "WI_CREATED_FOR_UNPLANNED_DISCH"),
//    AGV_SCHEDULER_MOVE_CREATION_FAILURE(387, "AGV_SCHEDULER_MOVE_CREATION_FAILURE", "", "", "AGV_SCHEDULER_MOVE_CREATION_FAILURE"),
//    WQ_SHIFT_FOR_POW_UPDATED(388, "WQ_SHIFT_FOR_POW_UPDATED", "", "", "WQ_SHIFT_FOR_POW_UPDATED"),
//    EMULATION_SCHEDULED_EXCEPTION_CHE(389, "EMULATION_SCHEDULED_EXCEPTION_CHE", "", "", "EMULATION_SCHEDULED_EXCEPTION_CHE"),
//    EMULATION_SCHEDULED_EXCEPTION_YARD(390, "EMULATION_SCHEDULED_EXCEPTION_YARD", "", "", "EMULATION_SCHEDULED_EXCEPTION_YARD"),
//    EMULATION_SCHEDULED_EXCEPTION_UNIT(391, "EMULATION_SCHEDULED_EXCEPTION_UNIT", "", "", "EMULATION_SCHEDULED_EXCEPTION_UNIT"),
//    EMULATION_MOVE_EXCEPTION_YARD(392, "EMULATION_MOVE_EXCEPTION_YARD", "", "", "EMULATION_MOVE_EXCEPTION_YARD"),
//    TZ_DECKER_FAIL_TO_DECK(393, "TZ_DECKER_FAIL_TO_DECK", "", "", "TZ_DECKER_FAIL_TO_DECK"),
//    AHI_MBEAN_FAILURE(394, "AHI_MBEAN_FAILURE", "", "", "AHI_MBEAN_FAILURE"),
//    AHI_LOG_FAILURE(395, "AHI_LOG_FAILURE", "", "", "AHI_LOG_FAILURE"),
//    AHI_NOTIFICATION(396, "AHI_NOTIFICATION", "", "", "AHI_NOTIFICATION"),
//    NULL_UNIT_STOW_FACTOR_ENCOUNTERED(397, "NULL_UNIT_STOW_FACTOR_ENCOUNTERED", "", "", "NULL_UNIT_STOW_FACTOR_ENCOUNTERED"),
//    UNIT_VERMAS_EDI_CANCEL(398, "UNIT_VERMAS_EDI_CANCEL", "", "", "UNIT_VERMAS_EDI_CANCEL"),
//    UNIT_VERMAS_EDI_REPLACE(399, "UNIT_VERMAS_EDI_REPLACE", "", "", "UNIT_VERMAS_EDI_REPLACE"),
//    UNIT_VERMAS_EDI_CREATED(400, "UNIT_VERMAS_EDI_CREATED", "", "", "UNIT_VERMAS_EDI_CREATED"),
//    UNIT_VERMAS_EDI_UPDATED(401, "UNIT_VERMAS_EDI_UPDATED", "", "", "UNIT_VERMAS_EDI_UPDATED"),
//    CHE_ERROR_CHE_IS_UNAVAILABLE(402, "CHE_ERROR_CHE_IS_UNAVAILABLE", "", "", "CHE_ERROR_CHE_IS_UNAVAILABLE"),
//    UNIT_VGM_ASSIGNED(403, "UNIT_VGM_ASSIGNED", "", "", "UNIT_VGM_ASSIGNED"),
//    UNIT_VGM_UPDATED(404, "UNIT_VGM_UPDATED", "", "", "UNIT_VGM_UPDATED"),
//    UNIT_VGM_CANCEL(405, "UNIT_VGM_CANCEL", "", "", "UNIT_VGM_CANCEL"),
//    UNIT_EQUIPMENT_MEASURED_WEIGHT(406, "UNIT_EQUIPMENT_MEASURED_WEIGHT", "", "", "UNIT_EQUIPMENT_MEASURED_WEIGHT"),
//    UNIT_DOOR_DIRECTION_CHANGED(407, "UNIT_DOOR_DIRECTION_CHANGED", "", "", "UNIT_DOOR_DIRECTION_CHANGED"),
//    CHE_SCHEDULER_ALERT(408, "CHE_SCHEDULER_ALERT", "", "", "CHE_SCHEDULER_ALERT");
//    private final int key;
//    private final String code;
//    private final String desc;
//    private final String color;
//    private final String displayName;
//
//    EventEnum(int key, String code, String desc, String color, String displayName) {
//        this.key = key;
//        this.code = code;
//        this.desc = desc;
//        this.color = color;
//        this.displayName = displayName;
//    }
//
//    public static List getEnumList() {
//        return EnumUtils.getEnumList(EventEnum.class);
//    }
//
//    public static EnumSet getEnumSet() {
//        return EnumSet.allOf(EventEnum.class);
//    }
//
//    public int getKey() {
//        return key;
//    }
//
//    public String getCode() {
//        return code;
//    }
//
//    public String getDesc() {
//        return desc;
//    }
//
//    public String getColor() {
//        return color;
//    }
//
//    public String getDisplayName() {
//        return displayName;
//    }
//
//}


public class EventEnum
        extends SystemEventTypeEnum {
    public static final EventEnum UNIT_CREATE = new EventEnum("UNIT_CREATE", "atom.EventEnum.UNIT_CREATE.description", "atom.EventEnum.UNIT_CREATE.code", "", "", "", "Unit created", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CREATE");
    public static final EventEnum UNIT_ACTIVATE = new EventEnum("UNIT_ACTIVATE", "atom.EventEnum.UNIT_ACTIVATE.description", "atom.EventEnum.UNIT_ACTIVATE.code", "", "", "", "Unit activated or in an Active state", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACTIVATE");
    public static final EventEnum UNIT_REROUTE = new EventEnum("UNIT_REROUTE", "atom.EventEnum.UNIT_REROUTE.description", "atom.EventEnum.UNIT_REROUTE.code", "", "", "", "Unit routing changed", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "REROUTE_CTR");
    public static final EventEnum UNIT_PROPERTY_UPDATE = new EventEnum("UNIT_PROPERTY_UPDATE", "atom.EventEnum.UNIT_PROPERTY_UPDATE.description", "atom.EventEnum.UNIT_PROPERTY_UPDATE.code", "", "", "", "Unit physical status or other details updated", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "PROPERTY_UPDATE_CTR");
    public static final EventEnum UNIT_PIN_ASSIGNED = new EventEnum("UNIT_PIN_ASSIGNED", "atom.EventEnum.UNIT_PIN_ASSIGNED.description", "atom.EventEnum.UNIT_PIN_ASSIGNED.code", "", "", "", "Unit PIN number is assigned or updated", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "PIN_ASSIGNED_CTR");
    public static final EventEnum UNIT_TRUCKER_ASSIGNED = new EventEnum("UNIT_TRUCKER_ASSIGNED", "atom.EventEnum.UNIT_TRUCKER_ASSIGNED.description", "atom.EventEnum.UNIT_TRUCKER_ASSIGNED.code", "", "", "", "Unit trucking company is assigned", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "TRUCKER_ASSIGNED_CTR");
    public static final EventEnum UNIT_IGNORED_EDI = new EventEnum("UNIT_IGNORED_EDI", "atom.EventEnum.UNIT_IGNORED_EDI.description", "atom.EventEnum.UNIT_IGNORED_EDI.code", "", "", "", "Unit not updated from an EDI posting", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "IGNORED_EDI_CTR");
    public static final EventEnum UNIT_LOADLIST_EDI_CREATED = new EventEnum("UNIT_LOADLIST_EDI_CREATED", "atom.EventEnum.UNIT_LOADLIST_EDI_CREATED.description", "atom.EventEnum.UNIT_LOADLIST_EDI_CREATED.code", "", "", "", "Unit updated from LoadList EDI posting", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_LOADLIST_EDI_CREATED");
    public static final EventEnum UNIT_LOADLIST_EDI_UPDATED = new EventEnum("UNIT_LOADLIST_EDI_UPDATED", "atom.EventEnum.UNIT_LOADLIST_EDI_UPDATED.description", "atom.EventEnum.UNIT_LOADLIST_EDI_UPDATED.code", "", "", "", "Unit updated by LoadList EDI posting", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_LOADLIST_EDI_UPDATED");
    public static final EventEnum UNIT_MERGE = new EventEnum("UNIT_MERGE", "atom.EventEnum.UNIT_MERGE.description", "atom.EventEnum.UNIT_MERGE.code", "", "", "", "Unit merged with another unit that was rerouted or renumbered", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "MERGE");
    public static final EventEnum UNIT_RETIRE = new EventEnum("UNIT_RETIRE", "atom.EventEnum.UNIT_RETIRE.description", "atom.EventEnum.UNIT_RETIRE.code", "", "", "", "Unit retired or in a Retired state", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "RETIRE");
    public static final EventEnum UNIT_DEPART = new EventEnum("UNIT_DEPART", "atom.EventEnum.UNIT_DEPART.description", "atom.EventEnum.UNIT_DEPART.code", "", "", "", "Unit departed or in a Departed state", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "DEPART");
    public static final EventEnum UNIT_YARD_MOVE = new EventEnum("UNIT_YARD_MOVE", "atom.EventEnum.UNIT_YARD_MOVE.description", "atom.EventEnum.UNIT_YARD_MOVE.code", "", "", "", "Unit moved in the yard", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "YARD_MOVE");
    public static final EventEnum UNIT_YARD_SHIFT = new EventEnum("UNIT_YARD_SHIFT", "atom.EventEnum.UNIT_YARD_SHIFT.description", "atom.EventEnum.UNIT_YARD_SHIFT.code", "", "", "", "Unit shifted in the yard in order to access another unit", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "YARD_SHIFT");
    public static final EventEnum UNIT_SHIFT_ON_CARRIER = new EventEnum("UNIT_SHIFT_ON_CARRIER", "atom.EventEnum.UNIT_SHIFT_ON_CARRIER.description", "atom.EventEnum.UNIT_SHIFT_ON_CARRIER.code", "", "", "", "Unit moved while on a carrier, such as a vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "SHIFT_ON_CARRIER");
    public static final EventEnum UNIT_POSITION_CORRECTION = new EventEnum("UNIT_POSITION_CORRECTION", "atom.EventEnum.UNIT_POSITION_CORRECTION.description", "atom.EventEnum.UNIT_POSITION_CORRECTION.code", "", "", "", "Unit position updated", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "POSITION_CORRECTION");
    public static final EventEnum UNIT_LOAD = new EventEnum("UNIT_LOAD", "atom.EventEnum.UNIT_LOAD.description", "atom.EventEnum.UNIT_LOAD.code", "", "", "", "Unit loaded onto a vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "LOAD_CONTAINER");
    public static final EventEnum UNIT_DISCH = new EventEnum("UNIT_DISCH", "atom.EventEnum.UNIT_DISCH.description", "atom.EventEnum.UNIT_DISCH.code", "", "", "", "Unit discharged from a vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "DISCH_CONTAINER");
    public static final EventEnum UNIT_TRANSLOAD = new EventEnum("UNIT_TRANSLOAD", "atom.EventEnum.UNIT_TRANSLOAD.description", "atom.EventEnum.UNIT_TRANSLOAD.code", "", "", "", "Contents transloaded to the unit", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "TRANSLOAD_CONTAINER");
    public static final EventEnum RCAR_PLF_MISSING_CENTROID = new EventEnum("RCAR_PLF_MISSING_CENTROID", "atom.EventEnum.RCAR_PLF_MISSING_CENTROID.description", "atom.EventEnum.RCAR_PLF_MISSING_CENTROID.code", "", "", "", "Rgc move excluded", true, true, true, true, false, LogicalEntityEnum.CHE, "", "", "RGC_SCHEDULER");
    public static final EventEnum UNIT_RAMP = new EventEnum("UNIT_RAMP", "atom.EventEnum.UNIT_RAMP.description", "atom.EventEnum.UNIT_RAMP.code", "", "", "", "Unit loaded onto a railcar", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "RAMP_CONTAINER");
    public static final EventEnum UNIT_DERAMP = new EventEnum("UNIT_DERAMP", "atom.EventEnum.UNIT_DERAMP.description", "atom.EventEnum.UNIT_DERAMP.code", "", "", "", "Unit discharged from a railcar", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "DERAMP_CONTAINER");
    public static final EventEnum UNIT_DELIVER = new EventEnum("UNIT_DELIVER", "atom.EventEnum.UNIT_DELIVER.description", "atom.EventEnum.UNIT_DELIVER.code", "", "", "", "Unit delivered to a truck", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "DELIVER_CONTAINER");
    public static final EventEnum UNIT_RECEIVE = new EventEnum("UNIT_RECEIVE", "atom.EventEnum.UNIT_RECEIVE.description", "atom.EventEnum.UNIT_RECEIVE.code", "", "", "", "Unit received from a truck", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "RECEIVE_CONTAINER");
    public static final EventEnum UNIT_IN_GATE = new EventEnum("UNIT_IN_GATE", "atom.EventEnum.UNIT_IN_GATE.description", "atom.EventEnum.UNIT_IN_GATE.code", "", "", "", "Unit entered facility via gate", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "IN_GATE_CONTAINER");
    public static final EventEnum UNIT_OUT_GATE = new EventEnum("UNIT_OUT_GATE", "atom.EventEnum.UNIT_OUT_GATE.description", "atom.EventEnum.UNIT_OUT_GATE.code", "", "", "", "Unit exited facility via gate", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "OUT_GATE_CONTAINER");
    public static final EventEnum UNIT_IN_VESSEL = new EventEnum("UNIT_IN_VESSEL", "atom.EventEnum.UNIT_IN_VESSEL.description", "atom.EventEnum.UNIT_IN_VESSEL.code", "", "", "", "Unit entered facility via vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "IN_VESSEL_CONTAINER");
    public static final EventEnum UNIT_OUT_VESSEL = new EventEnum("UNIT_OUT_VESSEL", "atom.EventEnum.UNIT_OUT_VESSEL.description", "atom.EventEnum.UNIT_OUT_VESSEL.code", "", "", "", "Unit exited facility via vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "OUT_VESSEL_CONTAINER");
    public static final EventEnum UNIT_IN_RAIL = new EventEnum("UNIT_IN_RAIL", "atom.EventEnum.UNIT_IN_RAIL.description", "atom.EventEnum.UNIT_IN_RAIL.code", "", "", "", "Unit entered facility via rail", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "IN_RAIL_CONTAINER");
    public static final EventEnum UNIT_OUT_RAIL = new EventEnum("UNIT_OUT_RAIL", "atom.EventEnum.UNIT_OUT_RAIL.description", "atom.EventEnum.UNIT_OUT_RAIL.code", "", "", "", "Unit exited facility via rail", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "OUT_RAIL_CONTAINER");
    public static final EventEnum UNIT_STRIP = new EventEnum("UNIT_STRIP", "atom.EventEnum.UNIT_STRIP.description", "atom.EventEnum.UNIT_STRIP.code", "", "", "", "Unit stripped or goods removed", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "STRIP_CONTAINER");
    public static final EventEnum UNIT_STUFF = new EventEnum("UNIT_STUFF", "atom.EventEnum.UNIT_STUFF.description", "atom.EventEnum.UNIT_STUFF.code", "", "", "", "Unit stuffed with goods", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "STUFF_CONTAINER");
    public static final EventEnum UNIT_POWER_CONNECT = new EventEnum("UNIT_POWER_CONNECT", "atom.EventEnum.UNIT_POWER_CONNECT.description", "atom.EventEnum.UNIT_POWER_CONNECT.code", "", "", "", "Reefer container power connected", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "POWER_CONNECT");
    public static final EventEnum UNIT_POWER_DISCONNECT = new EventEnum("UNIT_POWER_DISCONNECT", "atom.EventEnum.UNIT_POWER_DISCONNECT.description", "atom.EventEnum.UNIT_POWER_DISCONNECT.code", "", "", "", "Reefer container power disconnected", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "POWER_DISCONNECT");
    public static final EventEnum UNIT_WANTS_POWER_YES = new EventEnum("UNIT_WANTS_POWER_YES", "atom.EventEnum.UNIT_WANTS_POWER_YES.description", "atom.EventEnum.UNIT_WANTS_POWER_YES.code", "", "", "", "Unit requires power or Wants Power checkbox selected", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_WANTS_POWER_YES");
    public static final EventEnum UNIT_WANTS_POWER_NO = new EventEnum("UNIT_WANTS_POWER_NO", "atom.EventEnum.UNIT_WANTS_POWER_NO.description", "atom.EventEnum.UNIT_WANTS_POWER_NO.code", "", "", "", "Unit does not require power or Wants Power checkbox de-selected", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_WANTS_POWER_NO");
    public static final EventEnum UNIT_ALARM = new EventEnum("UNIT_ALARM", "atom.EventEnum.UNIT_ALARM.description", "atom.EventEnum.UNIT_ALARM.code", "", "", "", "Reefer container alarm is on", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_ALARM");
    public static final EventEnum UNIT_REEFER_FAULT = new EventEnum("UNIT_REEFER_FAULT", "atom.EventEnum.UNIT_REEFER_FAULT.description", "atom.EventEnum.UNIT_REEFER_FAULT.code", "", "", "", "Unit reefer fault code changed", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "REEFER_FAULT");
    public static final EventEnum UNIT_SEAL = new EventEnum("UNIT_SEAL", "atom.EventEnum.UNIT_SEAL.description", "atom.EventEnum.UNIT_SEAL.code", "", "", "", "Unit seals attached", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "SEAL_UNIT");
    public static final EventEnum UNIT_MOUNT = new EventEnum("UNIT_MOUNT", "atom.EventEnum.UNIT_MOUNT.description", "atom.EventEnum.UNIT_MOUNT.code", "", "", "", "Mount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "MOUNT");
    public static final EventEnum UNIT_DISMOUNT = new EventEnum("UNIT_DISMOUNT", "atom.EventEnum.UNIT_DISMOUNT.description", "atom.EventEnum.UNIT_DISMOUNT.code", "", "", "", "Dismount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "DISMOUNT");
    public static final EventEnum UNIT_SWIPE = new EventEnum("UNIT_SWIPE", "atom.EventEnum.UNIT_SWIPE.description", "atom.EventEnum.UNIT_SWIPE.code", "", "", "", "Equipment detached or goods transloaded from the unit", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "SWIPE");
    public static final EventEnum UNIT_ROLL = new EventEnum("UNIT_ROLL", "atom.EventEnum.UNIT_ROLL.description", "atom.EventEnum.UNIT_ROLL.code", "", "", "", "Unit rolled to another vessel", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ROLL");
    public static final EventEnum UNIT_RENUMBER = new EventEnum("UNIT_RENUMBER", "atom.EventEnum.UNIT_RENUMBER.description", "atom.EventEnum.UNIT_RENUMBER.code", "", "", "", "Unit number updated", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "RENUMBER");
    public static final EventEnum UNIT_CHECKDIGIT = new EventEnum("UNIT_CHECKDIGIT", "atom.EventEnum.UNIT_CHECKDIGIT.description", "atom.EventEnum.UNIT_CHECKDIGIT.code", "", "", "", "Unit check digit updated", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "CHECKDIGIT");
    public static final EventEnum UNIT_PREADVISE = new EventEnum("UNIT_PREADVISE", "atom.EventEnum.UNIT_PREADVISE.description", "atom.EventEnum.UNIT_PREADVISE.code", "", "", "", "Unit pre-advised", true, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "PREADVISE");
    public static final EventEnum UNIT_CANCEL_PREADVISE = new EventEnum("UNIT_CANCEL_PREADVISE", "atom.EventEnum.UNIT_CANCEL_PREADVISE.description", "atom.EventEnum.UNIT_CANCEL_PREADVISE.code", "", "", "", "Unit pre-advise cancelled", true, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CANCEL_PREADVISE");
    public static final EventEnum UNIT_RESERVE = new EventEnum("UNIT_RESERVE", "atom.EventEnum.UNIT_RESERVE.description", "atom.EventEnum.UNIT_RESERVE.code", "", "", "", "Unit reserved for an order (booking or EDO)", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "RESERVE");
    public static final EventEnum UNIT_CANCEL_RESERVE = new EventEnum("UNIT_CANCEL_RESERVE", "atom.EventEnum.UNIT_CANCEL_RESERVE.description", "atom.EventEnum.UNIT_CANCEL_RESERVE.code", "", "", "", "Unit reservation for an order (booking or EDO) cancelled", true, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CANCEL_RESERVE");
    public static final EventEnum UNIT_BUNDLE = new EventEnum("UNIT_BUNDLE", "atom.EventEnum.UNIT_BUNDLE.description", "atom.EventEnum.UNIT_BUNDLE.code", "", "", "", "Bundle", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "BUNDLE");
    public static final EventEnum UNIT_BUNDLE_ADD = new EventEnum("UNIT_BUNDLE_ADD", "atom.EventEnum.UNIT_BUNDLE_ADD.description", "atom.EventEnum.UNIT_BUNDLE_ADD.code", "", "", "", "Equipment added to bundle", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "BUNDLE_ADD");
    public static final EventEnum UNIT_UNBUNDLE = new EventEnum("UNIT_UNBUNDLE", "atom.EventEnum.UNIT_UNBUNDLE.description", "atom.EventEnum.UNIT_UNBUNDLE.code", "", "", "", "Unbundle", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "UNBUNDLE");
    public static final EventEnum UNIT_BRING_BACK_INTO_YARD = new EventEnum("UNIT_BRING_BACK_INTO_YARD", "atom.EventEnum.UNIT_BRING_BACK_INTO_YARD.description", "atom.EventEnum.UNIT_BRING_BACK_INTO_YARD.code", "", "", "", "Unit brought back into the yard due to a cancelled delivery gate transaction", true, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "BRING_BACK_INTO_YARD");
    public static final EventEnum UNIT_DELIVER_REJECTED = new EventEnum("UNIT_DELIVER_REJECTED", "atom.EventEnum.UNIT_DELIVER_REJECTED.description", "atom.EventEnum.UNIT_DELIVER_REJECTED.code", "", "", "", "Unit returned to yard - rejected by trucker", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "DELIVER_REJECTED");
    public static final EventEnum UNIT_BRING_TO_COMMUNITY = new EventEnum("UNIT_BRING_TO_COMMUNITY", "atom.EventEnum.UNIT_BRING_TO_COMMUNITY.description", "atom.EventEnum.UNIT_BRING_TO_COMMUNITY.code", "", "", "", "Unit put back into the community due to a cancelled receive gate transaction", true, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "BRING_TO_COMMUNITY");
    public static final EventEnum UNIT_RETURN_TO_INBOUND_CARRIER = new EventEnum("UNIT_RETURN_TO_INBOUND_CARRIER", "atom.EventEnum.UNIT_RETURN_TO_INBOUND_CARRIER.description", "atom.EventEnum.UNIT_RETURN_TO_INBOUND_CARRIER.code", "", "", "", "Unit returned to inbound carrier due to cancellation of direct delivery request ", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "RETURN_TO_INBOUND_CARRIER");
    public static final EventEnum UNIT_ENABLE_ROAD = new EventEnum("UNIT_ENABLE_ROAD", "atom.EventEnum.UNIT_ENABLE_ROAD.description", "atom.EventEnum.UNIT_ENABLE_ROAD.code", "", "", "", "Unit in the yard and available for delivery by truck", false, false, true, false, false, LogicalEntityEnum.UNIT, "", "", "ENABLE_ROAD");
    public static final EventEnum UNIT_DISABLE_ROAD = new EventEnum("UNIT_DISABLE_ROAD", "atom.EventEnum.UNIT_DISABLE_ROAD.description", "atom.EventEnum.UNIT_DISABLE_ROAD.code", "", "", "", "Unit in the yard but not available for delivery by truck", false, false, true, false, false, LogicalEntityEnum.UNIT, "", "", "DISABLE_ROAD");
    public static final EventEnum UNIT_RECORD_DAMAGE = new EventEnum("UNIT_RECORD_DAMAGE", "atom.EventEnum.UNIT_RECORD_DAMAGE.description", "atom.EventEnum.UNIT_RECORD_DAMAGE.code", "", "", "", "Unit damages recorded", false, false, true, false, false, LogicalEntityEnum.UNIT, "", "", "RECORD_DAMAGE");
    public static final EventEnum UNIT_DAMAGES_UPDATED = new EventEnum("UNIT_DAMAGES_UPDATED", "atom.EventEnum.UNIT_DAMAGES_UPDATED.description", "atom.EventEnum.UNIT_DAMAGES_UPDATED.code", "", "", "", "Unit damages updated", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UPDATE_DAMAGE");
    public static final EventEnum UNIT_DAMAGED = new EventEnum("UNIT_DAMAGED", "atom.EventEnum.UNIT_DAMAGED.description", "atom.EventEnum.UNIT_DAMAGED.code", "", "", "", "A new damage was recorded", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DAMAGED");
    public static final EventEnum UNIT_REPAIRED = new EventEnum("UNIT_REPAIRED", "atom.EventEnum.UNIT_REPAIRED.description", "atom.EventEnum.UNIT_REPAIRED.code", "", "", "", "Unit repaired", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_REPAIRED");
    public static final EventEnum UNIT_DAMAGES_DELETED = new EventEnum("UNIT_DAMAGES_DELETED", "atom.EventEnum.UNIT_DAMAGES_DELETED.description", "atom.EventEnum.UNIT_DAMAGES_DELETED.code", "", "", "", "Unit damages deleted", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "DAMAGE_DELETED");
    public static final EventEnum UNIT_RECTIFY = new EventEnum("UNIT_RECTIFY", "atom.EventEnum.UNIT_RECTIFY.description", "atom.EventEnum.UNIT_RECTIFY.code", "", "", "", "Unit rectified using Actions --> Rectify Unit", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "RECTIFY");
    public static final EventEnum UNIT_RETURN_TO_STORAGE = new EventEnum("UNIT_RETURN_TO_STORAGE", "atom.EventEnum.UNIT_RETURN_TO_STORAGE.description", "atom.EventEnum.UNIT_RETURN_TO_STORAGE.code", "", "", "", "Unit returned to storage using Actions --> Return to Storage", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "RETURN_TO_STORAGE");
    public static final EventEnum UNIT_SNX_UPDATE = new EventEnum("UNIT_SNX_UPDATE", "atom.EventEnum.UNIT_SNX_UPDATE.description", "atom.EventEnum.UNIT_SNX_UPDATE.code", "", "", "", "SNX Unit Update", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "SNX_UPDATE");
    public static final EventEnum UNIT_SNX_UPDATE_REJECTED = new EventEnum("UNIT_SNX_UPDATE_REJECTED", "atom.EventEnum.UNIT_SNX_UPDATE_REJECTED.description", "atom.EventEnum.UNIT_SNX_UPDATE_REJECTED.code", "", "", "", "Rejected SNX Unit Update", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "SNX_UPDATE_REJECTED");
    public static final EventEnum UNIT_OFFHIRE = new EventEnum("UNIT_OFFHIRE", "atom.EventEnum.UNIT_OFFHIRE.description", "atom.EventEnum.UNIT_OFFHIRE.code", "", "", "", "Off-hire On-hire Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "OFFHIRE");
    public static final EventEnum UNIT_ONHIRE = new EventEnum("UNIT_ONHIRE", "atom.EventEnum.UNIT_ONHIRE.description", "atom.EventEnum.UNIT_ONHIRE.code", "", "", "", "Off-hire On-hire Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ONHIRE");
    public static final EventEnum UNIT_IFT_OUT = new EventEnum("UNIT_IFT_OUT", "atom.EventEnum.UNIT_IFT_OUT.description", "atom.EventEnum.UNIT_IFT_OUT.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "IFT_OUT");
    public static final EventEnum UNIT_IFT_IN = new EventEnum("UNIT_IFT_IN", "atom.EventEnum.UNIT_IFT_IN.description", "atom.EventEnum.UNIT_IFT_IN.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "IFT_IN");
    public static final EventEnum UNIT_DOCUMENT_CREATE = new EventEnum("UNIT_DOCUMENT_CREATE", "atom.EventEnum.UNIT_DOCUMENT_CREATE.description", "atom.EventEnum.UNIT_DOCUMENT_CREATE.code", "", "", "", "Unit Document Created", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DOCUMENT_CREATE");
    public static final EventEnum UNIT_DOCUMENT_UPDATE = new EventEnum("UNIT_DOCUMENT_UPDATE", "atom.EventEnum.UNIT_DOCUMENT_UPDATE.description", "atom.EventEnum.UNIT_DOCUMENT_UPDATE.code", "", "", "", "Unit Document Updated", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DOCUMENT_UPDATE");
    public static final EventEnum UNIT_DOCUMENT_DELETE = new EventEnum("UNIT_DOCUMENT_DELETE", "atom.EventEnum.UNIT_DOCUMENT_DELETE.description", "atom.EventEnum.UNIT_DOCUMENT_DELETE.code", "", "", "", "Unit Document Deleted", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DOCUMENT_DELETED");
    public static final EventEnum UNIT_NOTICE = new EventEnum("UNIT_NOTICE", "atom.EventEnum.UNIT_NOTICE.description", "atom.EventEnum.UNIT_NOTICE.code", "", "", "", "Notice generated for the unit", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "NOTICE");
    public static final EventEnum CARGO_PROPERTY_UPDATE = new EventEnum("CARGO_PROPERTY_UPDATE", "atom.EventEnum.CARGO_PROPERTY_UPDATE.description", "atom.EventEnum.CARGO_PROPERTY_UPDATE.code", "", "", "", "Cargo lot details updated", false, false, false, true, false, LogicalEntityEnum.CARGOLOT, "", "", "CARGO_PROPERTY_UPDATE");
    public static final EventEnum CARGO_DISCH = new EventEnum("CARGO_DISCH", "atom.EventEnum.CARGO_DISCH.description", "atom.EventEnum.CARGO_DISCH.code", "", "", "", "Cargo is discharged", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_DISCH");
    public static final EventEnum CARGO_LOAD = new EventEnum("CARGO_LOAD", "atom.EventEnum.CARGO_LOAD.description", "atom.EventEnum.CARGO_LOAD.code", "", "", "", "Cargo is loaded", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_LOAD");
    public static final EventEnum CARGO_DELIVER = new EventEnum("CARGO_DELIVER", "atom.EventEnum.CARGO_DELIVER.description", "atom.EventEnum.CARGO_DELIVER.code", "", "", "", "Cargo is delivered", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_DELIVER");
    public static final EventEnum CARGO_RECEIVE = new EventEnum("CARGO_RECEIVE", "atom.EventEnum.CARGO_RECEIVE.description", "atom.EventEnum.CARGO_RECEIVE.code", "", "", "", "Cargo is received", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_RECEIVE");
    public static final EventEnum CARGO_RAMP = new EventEnum("CARGO_RAMP", "atom.EventEnum.CARGO_RAMP.description", "atom.EventEnum.CARGO_RAMP.code", "", "", "", "Cargo is loaded to railcar", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_RAMP");
    public static final EventEnum CARGO_DERAMP = new EventEnum("CARGO_DERAMP", "atom.EventEnum.CARGO_DERAMP.description", "atom.EventEnum.CARGO_DERAMP.code", "", "", "", "Cargo is unloaded from railcar", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_DERAMP");
    public static final EventEnum CARGO_STRIP = new EventEnum("CARGO_STRIP", "atom.EventEnum.CARGO_STRIP.description", "atom.EventEnum.CARGO_STRIP.code", "", "", "", "Cargo is stripped from container", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_STRIP");
    public static final EventEnum CARGO_STUFF = new EventEnum("CARGO_STUFF", "atom.EventEnum.CARGO_STUFF.description", "atom.EventEnum.CARGO_STUFF.code", "", "", "", "Cargo is stuffed to container", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_STUFF");
    public static final EventEnum CARGO_MANUFACTURED = new EventEnum("CARGO_MANUFACTURED", "atom.EventEnum.CARGO_MANUFACTURED.description", "atom.EventEnum.CARGO_MANUFACTURED.code", "", "", "", "Cargo is manufactured at facility", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_MANUFACTURED");
    public static final EventEnum CARGO_TRANSLOAD = new EventEnum("CARGO_TRANSLOAD", "atom.EventEnum.CARGO_TRANSLOAD.description", "atom.EventEnum.CARGO_TRANSLOAD.code", "", "", "", "Contents transloaded to another unit", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_TRANSLOAD");
    public static final EventEnum CARGO_MOVE = new EventEnum("CARGO_MOVE", "atom.EventEnum.CARGO_MOVE.description", "atom.EventEnum.CARGO_MOVE.code", "", "", "", "Contents moved to another position", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_MOVE");
    public static final EventEnum DISCREPANCY_NOTED = new EventEnum("DISCREPANCY_NOTED", "atom.EventEnum.DISCREPANCY_NOTED.description", "atom.EventEnum.DISCREPANCY_NOTED.code", "", "", "", "Cargo quantity discrepancy is noted", false, false, true, true, false, LogicalEntityEnum.CARGOLOT, "", "", "DISCREPANCY_NOTED");
    public static final EventEnum CARGO_POSITION_UPDATED = new EventEnum("CARGO_POSITION_UPDATED", "atom.EventEnum.CARGO_POSITION_UPDATED.description", "atom.EventEnum.CARGO_POSITION_UPDATED.code", "", "", "", "Cargo lot position is updated", false, false, true, true, false, LogicalEntityEnum.CARGOLOT, "", "", "CARGO_POSITION_UPDATED");
    public static final EventEnum CARGO_DAMAGE = new EventEnum("CARGO_DAMAGE", "atom.EventEnum.CARGO_DAMAGE.description", "atom.EventEnum.CARGO_DAMAGE.code", "", "", "", "Cargo damage is recorded", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_DAMAGE");
    public static final EventEnum CARGO_SPLIT = new EventEnum("CARGO_SPLIT", "atom.EventEnum.CARGO_SPLIT.description", "atom.EventEnum.CARGO_SPLIT.code", "", "", "", "BL Cargo Split", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_SPLIT_OFF");
    public static final EventEnum CARGO_SPLIT_OFF = new EventEnum("CARGO_SPLIT_OFF", "atom.EventEnum.CARGO_SPLIT_OFF.description", "atom.EventEnum.CARGO_SPLIT_OFF.code", "", "", "", "BL Cargo Split To", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_SPLIT_TO");
    public static final EventEnum CARGO_RECONSIGN = new EventEnum("CARGO_RECONSIGN", "atom.EventEnum.CARGO_RECONSIGN.description", "atom.EventEnum.CARGO_RECONSIGN.code", "", "", "", "BL Cargo Reconsign", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_RECONSIGN_OFF");
    public static final EventEnum CARGO_RECONSIGN_OFF = new EventEnum("CARGO_RECONSIGN_OFF", "atom.EventEnum.CARGO_RECONSIGN_OFF.description", "atom.EventEnum.CARGO_RECONSIGN_OFF.code", "", "", "", "BL Cargo Reconsign To", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "CARGO", "CARGO_RECONSIGN_TO");
    public static final EventEnum NOTICE_BKG = new EventEnum("NOTICE_BKG", "atom.EventEnum.NOTICE_BKG.description", "atom.EventEnum.NOTICE_BKG.code", "", "", "", "Notice generated for the booking", false, false, false, true, false, LogicalEntityEnum.BKG, "", "", "NOTICE_BKG");
    public static final EventEnum REROUTE_BKG = new EventEnum("REROUTE_BKG", "atom.EventEnum.REROUTE_BKG.description", "atom.EventEnum.REROUTE_BKG.code", "", "", "", "Booking routing changed", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "REROUTE_BKG");
    public static final EventEnum COMMODITY_UPDATE_BKG = new EventEnum("COMMODITY_UPDATE_BKG", "atom.EventEnum.COMMODITY_UPDATE_BKG.description", "atom.EventEnum.COMMODITY_UPDATE_BKG.code", "", "", "", "Booking item commodity updated", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "COMMODITY_UPDATE_BKG");
    public static final EventEnum EQ_UPDATE_BKG = new EventEnum("EQ_UPDATE_BKG", "atom.EventEnum.EQ_UPDATE_BKG.description", "atom.EventEnum.EQ_UPDATE_BKG.code", "", "", "", "Booking item updated", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_UPDATE_BKG");
    public static final EventEnum EQ_RECEIVE_BKG = new EventEnum("EQ_RECEIVE_BKG", "atom.EventEnum.EQ_RECEIVE_BKG.description", "atom.EventEnum.EQ_RECEIVE_BKG.code", "", "", "", "Equipment received through a gate against the booking", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_RECEIVE_BKG");
    public static final EventEnum EQ_DISPATCH_BKG = new EventEnum("EQ_DISPATCH_BKG", "atom.EventEnum.EQ_DISPATCH_BKG.description", "atom.EventEnum.EQ_DISPATCH_BKG.code", "", "", "", "Equipment delivered through a gate against the booking", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_DISPATCH_BKG");
    public static final EventEnum EQ_ASSIGN_BKG = new EventEnum("EQ_ASSIGN_BKG", "atom.EventEnum.EQ_ASSIGN_BKG.description", "atom.EventEnum.EQ_ASSIGN_BKG.code", "", "", "", "Equipment assigned to the booking using Actions --> Assign to Export Booking", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_ASSIGN_BKG");
    public static final EventEnum EQ_RESERVE_BKG = new EventEnum("EQ_RESERVE_BKG", "atom.EventEnum.EQ_RESERVE_BKG.description", "atom.EventEnum.EQ_RESERVE_BKG.code", "", "", "", "Equipment reserved against the booking", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_RESERVE_BKG");
    public static final EventEnum EQ_PREADVISE_BKG = new EventEnum("EQ_PREADVISE_BKG", "atom.EventEnum.EQ_PREADVISE_BKG.description", "atom.EventEnum.EQ_PREADVISE_BKG.code", "", "", "", "Equipment pre-advised against the booking", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "EQ_PREADVISE_BKG");
    public static final EventEnum REROUTE_RAIL_ORDER = new EventEnum("REROUTE_RAIL_ORDER", "atom.EventEnum.REROUTE_RAIL_ORDER.description", "atom.EventEnum.REROUTE_RAIL_ORDER.code", "", "", "", "Rail Order routing changed", false, false, true, true, false, LogicalEntityEnum.RO, "", "", "REROUTE_RAIL_ORDER");
    public static final EventEnum EQ_RECEIVE_RO = new EventEnum("EQ_RECEIVE_RO", "atom.EventEnum.EQ_RECEIVE_RO.description", "atom.EventEnum.EQ_RECEIVE_RO.code", "", "", "", "Equipment received through a gate against the rail order", false, false, true, true, false, LogicalEntityEnum.RO, "", "", "EQ_RECEIVE_RO");
    public static final EventEnum NOTICE_RO = new EventEnum("NOTICE_RO", "atom.EventEnum.NOTICE_RO.description", "atom.EventEnum.NOTICE_RO.code", "", "", "", "Notice generated for the rail order", false, false, false, true, false, LogicalEntityEnum.RO, "", "", "NOTICE_RO");
    public static final EventEnum EQ_UPDATE_RO = new EventEnum("EQ_UPDATE_RO", "atom.EventEnum.EQ_UPDATE_RO.description", "atom.EventEnum.EQ_UPDATE_RO.code", "", "", "", "Rail order item updated", false, false, true, true, false, LogicalEntityEnum.RO, "", "", "EQ_UPDATE_RO");
    public static final EventEnum EQ_RECEIVE_ERO = new EventEnum("EQ_RECEIVE_ERO", "atom.EventEnum.EQ_RECEIVE_ERO.description", "atom.EventEnum.EQ_RECEIVE_ERO.code", "", "", "", "Equipment received through a gate against the receive order", false, false, true, true, false, LogicalEntityEnum.ERO, "", "", "EQ_RECEIVE_ERO");
    public static final EventEnum NOTICE_ERO = new EventEnum("NOTICE_ERO", "atom.EventEnum.NOTICE_ERO.description", "atom.EventEnum.NOTICE_ERO.code", "", "", "", "Notice generated for the ERO", false, false, false, true, false, LogicalEntityEnum.ERO, "", "", "NOTICE_ERO");
    public static final EventEnum EQ_UPDATE_ERO = new EventEnum("EQ_UPDATE_ERO", "atom.EventEnum.EQ_UPDATE_ERO.description", "atom.EventEnum.EQ_UPDATE_ERO.code", "", "", "", "Equipment Receive order item updated", false, false, true, true, false, LogicalEntityEnum.ERO, "", "", "EQ_UPDATE_ERO");
    public static final EventEnum EDO_CREATE = new EventEnum("EDO_CREATE", "atom.EventEnum.EDO_CREATE.description", "atom.EventEnum.EDO_CREATE.code", "", "", "", "Equipment Delivery Order created", false, false, true, true, false, LogicalEntityEnum.DO, "", "", "EDO_CREATE");
    public static final EventEnum EDO_PROPERTY_UPDATE = new EventEnum("EDO_PROPERTY_UPDATE", "atom.EventEnum.EDO_PROPERTY_UPDATE.description", "atom.EventEnum.EDO_PROPERTY_UPDATE.code", "", "", "", "Equipment Delivery Order properties update", false, false, true, true, false, LogicalEntityEnum.DO, "", "", "EDO_PROPERTY_UPDATE");
    public static final EventEnum EQ_UPDATE_EDO = new EventEnum("EQ_UPDATE_EDO", "atom.EventEnum.EQ_UPDATE_EDO.description", "atom.EventEnum.EQ_UPDATE_EDO.code", "", "", "", "Equipment delivery order item updated", false, false, true, true, false, LogicalEntityEnum.DO, "", "", "EQ_UPDATE_EDO");
    public static final EventEnum EQ_DISPATCH_EDO = new EventEnum("EQ_DISPATCH_EDO", "atom.EventEnum.EQ_DISPATCH_EDO.description", "atom.EventEnum.EQ_DISPATCH_EDO.code", "", "", "", "Equipment delivered through a gate against the EDO", false, false, true, true, false, LogicalEntityEnum.DO, "", "", "EQ_DISPATCH_EDO");
    public static final EventEnum EQ_RESERVE_EDO = new EventEnum("EQ_RESERVE_EDO", "atom.EventEnum.EQ_RESERVE_EDO.description", "atom.EventEnum.EQ_RESERVE_EDO.code", "", "", "", "Equipment reserved against the EDO", false, false, true, true, false, LogicalEntityEnum.DO, "", "", "EQ_RESERVE_EDO");
    public static final EventEnum NOTICE_DO = new EventEnum("NOTICE_DO", "atom.EventEnum.NOTICE_DO.description", "atom.EventEnum.NOTICE_DO.code", "", "", "", "Notice generated for the EDO", false, false, false, true, false, LogicalEntityEnum.DO, "", "", "NOTICE_DO");
    public static final EventEnum EQ_UPDATE_ELO = new EventEnum("EQ_UPDATE_ELO", "atom.EventEnum.EQ_UPDATE_ELO.description", "atom.EventEnum.EQ_UPDATE_ELO.code", "", "", "", "Equipment load out order item updated", false, false, true, true, false, LogicalEntityEnum.LO, "", "", "EQ_UPDATE_ELO");
    public static final EventEnum EQ_ASSIGN_ELO = new EventEnum("EQ_ASSIGN_ELO", "atom.EventEnum.EQ_ASSIGN_ELO.description", "atom.EventEnum.EQ_ASSIGN_ELO.code", "", "", "", "Equipment assigned to the ELO", false, false, true, true, false, LogicalEntityEnum.LO, "", "", "EQ_ASSIGN_ELO");
    public static final EventEnum NOTICE_ELO = new EventEnum("NOTICE_ELO", "atom.EventEnum.NOTICE_ELO.description", "atom.EventEnum.NOTICE_ELO.code", "", "", "", "Notice generated for the ELO", false, false, false, true, false, LogicalEntityEnum.LO, "", "", "NOTICE_ELO");
    public static final EventEnum PHASE_VV = new EventEnum("PHASE_VV", "atom.EventEnum.PHASE_VV.description", "atom.EventEnum.PHASE_VV.code", "", "", "", "Vessel visit phase changed", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "PHASE_VV");
    public static final EventEnum UPDATE_VV = new EventEnum("UPDATE_VV", "atom.EventEnum.UPDATE_VV.description", "atom.EventEnum.UPDATE_VV.code", "", "", "", "Vessel visit updated", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "UPDATE_VV");
    public static final EventEnum DELETE_STOWPLAN = new EventEnum("DELETE_STOWPLAN", "atom.EventEnum.DELETE_STOWPLAN.description", "atom.EventEnum.DELETE_STOWPLAN.code", "", "", "", "Vessel stowplan delete", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "DELETE_STOWPLAN");
    public static final EventEnum REPLACE_STOWPLAN = new EventEnum("REPLACE_STOWPLAN", "atom.EventEnum.REPLACE_STOWPLAN.description", "atom.EventEnum.REPLACE_STOWPLAN.code", "", "", "", "Vessel stowplan replace", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "REPLACE_STOWPLAN");
    public static final EventEnum NOTICE_VV = new EventEnum("NOTICE_VV", "atom.EventEnum.NOTICE_VV.description", "atom.EventEnum.NOTICE_VV.code", "", "", "", "Notice generated for the vessel visit", false, false, false, true, false, LogicalEntityEnum.VV, "", "", "NOTICE_VV");
    public static final EventEnum MOVE_TV = new EventEnum("MOVE_TV", "atom.EventEnum.MOVE_TV.description", "atom.EventEnum.MOVE_TV.code", "", "", "", "Truck moved through facility", false, true, true, true, false, LogicalEntityEnum.TV, "", "", "MOVE_TV");
    public static final EventEnum NOTICE_TV = new EventEnum("NOTICE_TV", "atom.EventEnum.NOTICE_TV.description", "atom.EventEnum.NOTICE_TV.code", "", "", "", "Notice generated for the truck visit", false, false, false, true, false, LogicalEntityEnum.TV, "", "", "NOTICE_TV");
    public static final EventEnum CUSTOM_TV = new EventEnum("CUSTOM_TV", "atom.EventEnum.CUSTOM_TV.description", "atom.EventEnum.CUSTOM_TV.code", "", "", "", "Custom groovy code executed for the truck visit", false, false, false, true, false, LogicalEntityEnum.TV, "", "", "Custom-TV");
    public static final EventEnum TV_ITZ_LANE_ARRIVAL = new EventEnum("TV_ITZ_LANE_ARRIVAL", "atom.EventEnum.TV_ITZ_LANE_ARRIVAL.description", "atom.EventEnum.TV_ITZ_LANE_ARRIVAL.code", "", "", "", "Truck reported its presence at a transfer area", false, true, true, true, false, LogicalEntityEnum.TV, "", "", "TV_ITZ_LANE_ARRIVAL");
    public static final EventEnum TV_ITZ_DONE = new EventEnum("TV_ITZ_DONE", "atom.EventEnum.TV_ITZ_DONE.description", "atom.EventEnum.TV_ITZ_DONE.code", "", "", "", "Truck handling is done at a transfer area", false, true, true, true, false, LogicalEntityEnum.TV, "", "", "TV_ITZ_DONE");
    public static final EventEnum PHASE_RV = new EventEnum("PHASE_RV", "atom.EventEnum.PHASE_RV.description", "atom.EventEnum.PHASE_RV.code", "", "", "", "Train visit phase changed", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "PHASE_RV");
    public static final EventEnum UPDATE_RV = new EventEnum("UPDATE_RV", "atom.EventEnum.UPDATE_RV.description", "atom.EventEnum.UPDATE_RV.code", "", "", "", "Train visit updated", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "UPDATE_RV");
    public static final EventEnum NOTICE_RV = new EventEnum("NOTICE_RV", "atom.EventEnum.NOTICE_RV.description", "atom.EventEnum.NOTICE_RV.code", "", "", "", "Notice generated for the train visit", false, false, false, true, false, LogicalEntityEnum.RV, "", "", "NOTICE_RV");
    public static final EventEnum REROUTE_RV = new EventEnum("REROUTE_RV", "atom.EventEnum.REROUTE_RV.description", "atom.EventEnum.REROUTE_RV.code", "", "", "", "Train visit rerouted", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "REROUTE_RV");
    public static final EventEnum EDI_EXTRACT = new EventEnum("EDI_EXTRACT", "atom.EventEnum.EDI_EXTRACT.description", "atom.EventEnum.EDI_EXTRACT.code", "", "", "", "EDI session successfully extracted", false, false, true, true, false, LogicalEntityEnum.EDISESS, "", "", "EDI_EXTRACT");
    public static final EventEnum EDI_EXTRACT_FAILED = new EventEnum("EDI_EXTRACT_FAILED", "atom.EventEnum.EDI_EXTRACT_FAILED.description", "atom.EventEnum.EDI_EXTRACT_FAILED.code", "", "", "", "EDI session extract failed", false, false, true, true, false, LogicalEntityEnum.EDISESS, "", "", "EDI_EXTRACT_FAILED");
    public static final EventEnum EDI_POST = new EventEnum("EDI_POST", "atom.EventEnum.EDI_POST.description", "atom.EventEnum.EDI_POST.code", "", "", "", "EDI session successfully posted", false, false, true, true, false, LogicalEntityEnum.EDISESS, "", "", "EDI_POST");
    public static final EventEnum EDI_UNIT_BOL_DETACHED = new EventEnum("EDI_UNIT_BOL_DETACHED", "atom.EventEnum.EDI_UNIT_BOL_DETACHED.description", "atom.EventEnum.EDI_UNIT_BOL_DETACHED.code", "", "", "", "Unit and BillOfLading detached for Manifest Delete", false, false, true, true, false, LogicalEntityEnum.BL, "", "", "EDI_UNIT_BOL_DETACHED");
    public static final EventEnum EDI_POST_FAILED = new EventEnum("EDI_POST_FAILED", "atom.EventEnum.EDI_POST_FAILED.description", "atom.EventEnum.EDI_POST_FAILED.code", "", "", "", "EDI session post failed", false, false, true, true, false, LogicalEntityEnum.EDISESS, "", "", "EDI_POST_FAILED");
    public static final EventEnum NOTICE_EDISESS = new EventEnum("NOTICE_EDISESS", "atom.EventEnum.NOTICE_EDISESS.description", "atom.EventEnum.NOTICE_EDISESS.code", "", "", "", "Notice generated for the edi session", false, false, false, true, false, LogicalEntityEnum.EDISESS, "", "", "NOTICE_EDISESS");
    public static final EventEnum CLUSTER_ERROR_DETECTED = new EventEnum("CLUSTER_ERROR_DETECTED", "atom.EventEnum.CLUSTER_ERROR_DETECTED.description", "atom.EventEnum.CLUSTER_ERROR_DETECTED.code", "", "", "", "Cluster error detected", false, false, true, true, false, LogicalEntityEnum.YARD, "", "", "CLUSTER_ERROR_DETECTED");
    public static final EventEnum CLUSTER_ERROR_CONTINUES = new EventEnum("CLUSTER_ERROR_CONTINUES", "atom.EventEnum.CLUSTER_ERROR_CONTINUES.description", "atom.EventEnum.CLUSTER_ERROR_CONTINUES.code", "", "", "", "Cluster error continues", false, false, true, true, false, LogicalEntityEnum.YARD, "", "", "CLUSTER_ERROR_CONTINUES");
    public static final EventEnum CLUSTER_ERROR_CLEARED = new EventEnum("CLUSTER_ERROR_CLEARED", "atom.EventEnum.CLUSTER_ERROR_CLEARED.description", "atom.EventEnum.CLUSTER_ERROR_CLEARED.code", "", "", "", "Cluster error cleared", false, false, true, true, false, LogicalEntityEnum.YARD, "", "", "CLUSTER_ERROR_CLEARED");
    public static final EventEnum NOTICE_YARD = new EventEnum("NOTICE_YARD", "atom.EventEnum.NOTICE_YARD.description", "atom.EventEnum.NOTICE_YARD.code", "", "", "", "Notice generated for a Yard event", false, false, false, true, false, LogicalEntityEnum.YARD, "", "", "NOTICE_YARD");
    public static final EventEnum OBSOLETE_DRAYBACK = new EventEnum("DRAYBACK", "atom.EventEnum.OBSOLETE_DRAYBACK.description", "atom.EventEnum.OBSOLETE_DRAYBACK.code", "", "", "", "Dray Back", false, false, false, true, false, LogicalEntityEnum.CTR, "OBSOLETE", "", "");
    public static final EventEnum OBSOLETE_CREATE = new EventEnum("CREATE", "atom.EventEnum.OBSOLETE_CREATE.description", "atom.EventEnum.OBSOLETE_CREATE.code", "", "", "", "Create", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_CREATE", "", "");
    public static final EventEnum OBSOLETE_ACTIVATE = new EventEnum("ACTIVATE", "atom.EventEnum.OBSOLETE_ACTIVATE.description", "atom.EventEnum.OBSOLETE_ACTIVATE.code", "", "", "", "Activate", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_ACTIVATE", "", "");
    public static final EventEnum OBSOLETE_REROUTE_CTR = new EventEnum("REROUTE_CTR", "atom.EventEnum.OBSOLETE_REROUTE_CTR.description", "atom.EventEnum.OBSOLETE_REROUTE_CTR.code", "", "", "", "Reroute", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_REROUTE", "", "");
    public static final EventEnum OBSOLETE_REROUTE_GDS = new EventEnum("REROUTE_GDS", "atom.EventEnum.OBSOLETE_REROUTE_GDS.description", "atom.EventEnum.OBSOLETE_REROUTE_GDS.code", "", "", "", "Reroute", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_REROUTE", "", "");
    public static final EventEnum OBSOLETE_PROPERTY_UPDATE_CTR = new EventEnum("PROPERTY_UPDATE_CTR", "atom.EventEnum.OBSOLETE_PROPERTY_UPDATE_CTR.description", "atom.EventEnum.OBSOLETE_PROPERTY_UPDATE_CTR.code", "", "", "", "Property Update", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_PROPERTY_UPDATE", "", "");
    public static final EventEnum OBSOLETE_IGNORED_EDI_CTR = new EventEnum("IGNORED_EDI_CTR", "atom.EventEnum.OBSOLETE_IGNORED_EDI_CTR.description", "atom.EventEnum.OBSOLETE_IGNORED_EDI_CTR.code", "", "", "", "Ignored EDI", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_IGNORED_EDI", "", "");
    public static final EventEnum OBSOLETE_PROPERTY_UPDATE_GDS = new EventEnum("PROPERTY_UPDATE_GDS", "atom.EventEnum.OBSOLETE_PROPERTY_UPDATE_GDS.description", "atom.EventEnum.OBSOLETE_PROPERTY_UPDATE_GDS.code", "", "", "", "Property Update", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_PROPERTY_UPDATE", "", "");
    public static final EventEnum OBSOLETE_MERGE = new EventEnum("MERGE", "atom.EventEnum.OBSOLETE_MERGE.description", "atom.EventEnum.OBSOLETE_MERGE.code", "", "", "", "Merge", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_MERGE", "", "");
    public static final EventEnum OBSOLETE_REACTIVATE = new EventEnum("REACTIVATE", "atom.EventEnum.OBSOLETE_REACTIVATE.description", "atom.EventEnum.OBSOLETE_REACTIVATE.code", "", "", "", "Re-activate", false, false, true, true, false, LogicalEntityEnum.CTR, "OBSOLETE", "", "");
    public static final EventEnum OBSOLETE_RETIRE = new EventEnum("RETIRE", "atom.EventEnum.OBSOLETE_RETIRE.description", "atom.EventEnum.OBSOLETE_RETIRE.code", "", "", "", "Retire", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_RETIRE", "", "");
    public static final EventEnum OBSOLETE_DEPART = new EventEnum("DEPART", "atom.EventEnum.OBSOLETE_DEPART.description", "atom.EventEnum.OBSOLETE_DEPART.code", "", "", "", "Depart", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_DEPART", "", "");
    public static final EventEnum OBSOLETE_YARD_MOVE = new EventEnum("YARD_MOVE", "atom.EventEnum.OBSOLETE_YARD_MOVE.description", "atom.EventEnum.OBSOLETE_YARD_MOVE.code", "", "", "", "Yard Move", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_YARD_MOVE", "", "");
    public static final EventEnum OBSOLETE_YARD_SHIFT = new EventEnum("YARD_SHIFT", "atom.EventEnum.OBSOLETE_YARD_SHIFT.description", "atom.EventEnum.OBSOLETE_YARD_SHIFT.code", "", "", "", "Yard Shift", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_YARD_SHIFT", "", "");
    public static final EventEnum OBSOLETE_SHIFT_ON_CARRIER = new EventEnum("SHIFT_ON_CARRIER", "atom.EventEnum.OBSOLETE_SHIFT_ON_CARRIER.description", "atom.EventEnum.OBSOLETE_SHIFT_ON_CARRIER.code", "", "", "", "Shift on Carrier", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_SHIFT_ON_CARRIER", "", "");
    public static final EventEnum OBSOLETE_POSITION_CORRECTION = new EventEnum("POSITION_CORRECTION", "atom.EventEnum.OBSOLETE_POSITION_CORRECTION.description", "atom.EventEnum.OBSOLETE_POSITION_CORRECTION.code", "", "", "", "Correct Position", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_POSITION_CORRECTION", "", "");
    public static final EventEnum OBSOLETE_LOAD_CONTAINER = new EventEnum("LOAD_CONTAINER", "atom.EventEnum.OBSOLETE_LOAD_CONTAINER.description", "atom.EventEnum.OBSOLETE_LOAD_CONTAINER.code", "", "", "", "Load", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_LOAD", "", "");
    public static final EventEnum OBSOLETE_LOAD_GOODS = new EventEnum("LOAD_GOODS", "atom.EventEnum.OBSOLETE_LOAD_GOODS.description", "atom.EventEnum.OBSOLETE_LOAD_GOODS.code", "", "", "", "Load", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_LOAD", "", "");
    public static final EventEnum OBSOLETE_DISCH_CONTAINER = new EventEnum("DISCH_CONTAINER", "atom.EventEnum.OBSOLETE_DISCH_CONTAINER.description", "atom.EventEnum.OBSOLETE_DISCH_CONTAINER.code", "", "", "", "Discharge", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DISCH", "", "");
    public static final EventEnum OBSOLETE_DISCH_GOODS = new EventEnum("DISCH_GOODS", "atom.EventEnum.OBSOLETE_DISCH_GOODS.description", "atom.EventEnum.OBSOLETE_DISCH_GOODS.code", "", "", "", "Discharge", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_DISCH", "", "");
    public static final EventEnum OBSOLETE_TRANSLOAD_CONTAINER = new EventEnum("TRANSLOAD_CONTAINER", "atom.EventEnum.OBSOLETE_TRANSLOAD_CONTAINER.description", "atom.EventEnum.OBSOLETE_TRANSLOAD_CONTAINER.code", "", "", "", "Transload", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_TRANSLOAD", "", "");
    public static final EventEnum OBSOLETE_TRANSLOAD_GOODS = new EventEnum("TRANSLOAD_GOODS", "atom.EventEnum.OBSOLETE_TRANSLOAD_GOODS.description", "atom.EventEnum.OBSOLETE_TRANSLOAD_GOODS.code", "", "", "", "Transload", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_TRANSLOAD", "", "");
    public static final EventEnum OBSOLETE_RAMP_CONTAINER = new EventEnum("RAMP_CONTAINER", "atom.EventEnum.OBSOLETE_RAMP_CONTAINER.description", "atom.EventEnum.OBSOLETE_RAMP_CONTAINER.code", "", "", "", "Ramp", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_RAMP", "", "");
    public static final EventEnum OBSOLETE_RAMP_GOODS = new EventEnum("RAMP_GOODS", "atom.EventEnum.OBSOLETE_RAMP_GOODS.description", "atom.EventEnum.OBSOLETE_RAMP_GOODS.code", "", "", "", "Ramp", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_RAMP", "", "");
    public static final EventEnum OBSOLETE_DERAMP_CONTAINER = new EventEnum("DERAMP_CONTAINER", "atom.EventEnum.OBSOLETE_DERAMP_CONTAINER.description", "atom.EventEnum.OBSOLETE_DERAMP_CONTAINER.code", "", "", "", "Deramp", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DERAMP", "", "");
    public static final EventEnum OBSOLETE_DERAMP_GOODS = new EventEnum("DERAMP_GOODS", "atom.EventEnum.OBSOLETE_DERAMP_GOODS.description", "atom.EventEnum.OBSOLETE_DERAMP_GOODS.code", "", "", "", "Deramp", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_DERAMP", "", "");
    public static final EventEnum OBSOLETE_DELIVER_EQUIPMENT = new EventEnum("DELIVER_EQUIPMENT", "atom.EventEnum.OBSOLETE_DELIVER_EQUIPMENT.description", "atom.EventEnum.OBSOLETE_DELIVER_EQUIPMENT.code", "", "", "", "Deliver Equipment", true, true, true, true, false, LogicalEntityEnum.CTR, "OBSOLETE", "", "");
    public static final EventEnum OBSOLETE_DELIVER_CONTAINER = new EventEnum("DELIVER_CONTAINER", "atom.EventEnum.OBSOLETE_DELIVER_CONTAINER.description", "atom.EventEnum.OBSOLETE_DELIVER_CONTAINER.code", "", "", "", "Deliver", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DELIVER", "", "");
    public static final EventEnum OBSOLETE_DELIVER_CHASSIS = new EventEnum("DELIVER_CHASSIS", "atom.EventEnum.OBSOLETE_DELIVER_CHASSIS.description", "atom.EventEnum.OBSOLETE_DELIVER_CHASSIS.code", "", "", "", "Deliver Chassis", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DELIVER", "", "");
    public static final EventEnum OBSOLETE_DELIVER_ACCESSORY = new EventEnum("DELIVER_ACCESSORY", "atom.EventEnum.OBSOLETE_DELIVER_ACCESSORY.description", "atom.EventEnum.OBSOLETE_DELIVER_ACCESSORY.code", "", "", "", "Deliver Accessory", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DELIVER", "", "");
    public static final EventEnum OBSOLETE_DELIVER_GOODS = new EventEnum("DELIVER_GOODS", "atom.EventEnum.OBSOLETE_DELIVER_GOODS.description", "atom.EventEnum.OBSOLETE_DELIVER_GOODS.code", "", "", "", "Deliver", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_DELIVER", "", "");
    public static final EventEnum OBSOLETE_RECEIVE_EQUIPMENT = new EventEnum("RECEIVE_EQUIPMENT", "atom.EventEnum.OBSOLETE_RECEIVE_EQUIPMENT.description", "atom.EventEnum.OBSOLETE_RECEIVE_EQUIPMENT.code", "", "", "", "Receive Equipment", true, true, true, true, false, LogicalEntityEnum.CTR, "OBSOLETE", "", "");
    public static final EventEnum OBSOLETE_RECEIVE_CONTAINER = new EventEnum("RECEIVE_CONTAINER", "atom.EventEnum.OBSOLETE_RECEIVE_CONTAINER.description", "atom.EventEnum.OBSOLETE_RECEIVE_CONTAINER.code", "", "", "", "Receive", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_RECEIVE", "", "");
    public static final EventEnum OBSOLETE_RECEIVE_CHASSIS = new EventEnum("RECEIVE_CHASSIS", "atom.EventEnum.OBSOLETE_RECEIVE_CHASSIS.description", "atom.EventEnum.OBSOLETE_RECEIVE_CHASSIS.code", "", "", "", "Receive Chassis", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_RECEIVE", "", "");
    public static final EventEnum OBSOLETE_RECEIVE_ACCESSORY = new EventEnum("RECEIVE_ACCESSORY", "atom.EventEnum.OBSOLETE_RECEIVE_ACCESSORY.description", "atom.EventEnum.OBSOLETE_RECEIVE_ACCESSORY.code", "", "", "", "Receive Accessory", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_RECEIVE", "", "");
    public static final EventEnum OBSOLETE_RECEIVE_GOODS = new EventEnum("RECEIVE_GOODS", "atom.EventEnum.OBSOLETE_RECEIVE_GOODS.description", "atom.EventEnum.OBSOLETE_RECEIVE_GOODS.code", "", "", "", "Receive", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_RECEIVE", "", "");
    public static final EventEnum OBSOLETE_STRIP_CONTAINER = new EventEnum("STRIP_CONTAINER", "atom.EventEnum.OBSOLETE_STRIP_CONTAINER.description", "atom.EventEnum.OBSOLETE_STRIP_CONTAINER.code", "", "", "", "Strip", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_STRIP", "", "");
    public static final EventEnum OBSOLETE_STRIP_GOODS = new EventEnum("STRIP_GOODS", "atom.EventEnum.OBSOLETE_STRIP_GOODS.description", "atom.EventEnum.OBSOLETE_STRIP_GOODS.code", "", "", "", "Strip", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_STRIP", "", "");
    public static final EventEnum OBSOLETE_STUFF_CONTAINER = new EventEnum("STUFF_CONTAINER", "atom.EventEnum.OBSOLETE_STUFF_CONTAINER.description", "atom.EventEnum.OBSOLETE_STUFF_CONTAINER.code", "", "", "", "Stuff", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_STUFF", "", "");
    public static final EventEnum OBSOLETE_STUFF_GOODS = new EventEnum("STUFF_GOODS", "atom.EventEnum.OBSOLETE_STUFF_GOODS.description", "atom.EventEnum.OBSOLETE_STUFF_GOODS.code", "", "", "", "Stuff", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_STUFF", "", "");
    public static final EventEnum OBSOLETE_POWER_CONNECT = new EventEnum("POWER_CONNECT", "atom.EventEnum.OBSOLETE_POWER_CONNECT.description", "atom.EventEnum.OBSOLETE_POWER_CONNECT.code", "", "", "", "Power On", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_POWER_CONNECT", "", "");
    public static final EventEnum OBSOLETE_POWER_DISCONNECT = new EventEnum("POWER_DISCONNECT", "atom.EventEnum.OBSOLETE_POWER_DISCONNECT.description", "atom.EventEnum.OBSOLETE_POWER_DISCONNECT.code", "", "", "", "Power Off", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_POWER_DISCONNECT", "", "");
    public static final EventEnum OBSOLETE_SEAL_UNIT = new EventEnum("SEAL_UNIT", "atom.EventEnum.OBSOLETE_SEAL_UNIT.description", "atom.EventEnum.OBSOLETE_SEAL_UNIT.code", "", "", "", "Attach Seals", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_SEAL", "", "");
    public static final EventEnum OBSOLETE_MOUNT = new EventEnum("MOUNT", "atom.EventEnum.OBSOLETE_MOUNT.description", "atom.EventEnum.OBSOLETE_MOUNT.code", "", "", "", "Mount", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_MOUNT", "", "");
    public static final EventEnum OBSOLETE_DISMOUNT = new EventEnum("DISMOUNT", "atom.EventEnum.OBSOLETE_DISMOUNT.description", "atom.EventEnum.OBSOLETE_DISMOUNT.code", "", "", "", "Dismount", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_DISMOUNT", "", "");
    public static final EventEnum OBSOLETE_SWIPE = new EventEnum("SWIPE", "atom.EventEnum.OBSOLETE_SWIPE.description", "atom.EventEnum.OBSOLETE_SWIPE.code", "", "", "", "Swipe", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_SWIPE", "", "");
    public static final EventEnum OBSOLETE_ROLL = new EventEnum("ROLL", "atom.EventEnum.OBSOLETE_ROLL.description", "atom.EventEnum.OBSOLETE_ROLL.code", "", "", "", "Roll", true, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_ROLL", "", "");
    public static final EventEnum OBSOLETE_RENUMBER = new EventEnum("RENUMBER", "atom.EventEnum.OBSOLETE_RENUMBER.description", "atom.EventEnum.OBSOLETE_RENUMBER.code", "", "", "", "Renumber", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_RENUMBER", "", "");
    public static final EventEnum OBSOLETE_CHECKDIGIT = new EventEnum("CHECKDIGIT", "atom.EventEnum.OBSOLETE_CHECKDIGIT.description", "atom.EventEnum.OBSOLETE_CHECKDIGIT.code", "", "", "", "Check Digit", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_CHECKDIGIT", "", "");
    public static final EventEnum OBSOLETE_PREADVISE = new EventEnum("PREADVISE", "atom.EventEnum.OBSOLETE_PREADVISE.description", "atom.EventEnum.OBSOLETE_PREADVISE.code", "", "", "", "Preadvise", true, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_PREADVISE", "", "");
    public static final EventEnum OBSOLETE_CANCEL_PREADVISE = new EventEnum("CANCEL_PREADVISE", "atom.EventEnum.OBSOLETE_CANCEL_PREADVISE.description", "atom.EventEnum.OBSOLETE_CANCEL_PREADVISE.code", "", "", "", "Cancel Preadvise", true, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_CANCEL_PREADVISE", "", "");
    public static final EventEnum OBSOLETE_RESERVE = new EventEnum("RESERVE", "atom.EventEnum.OBSOLETE_RESERVE.description", "atom.EventEnum.OBSOLETE_RESERVE.code", "", "", "", "Reserve", true, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_RESERVE", "", "");
    public static final EventEnum OBSOLETE_CANCEL_RESERVE = new EventEnum("CANCEL_RESERVE", "atom.EventEnum.OBSOLETE_CANCEL_RESERVE.description", "atom.EventEnum.OBSOLETE_CANCEL_RESERVE.code", "", "", "", "Cancel Reserve", true, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_CANCEL_RESERVE", "", "");
    public static final EventEnum OBSOLETE_BUNDLE = new EventEnum("BUNDLE", "atom.EventEnum.OBSOLETE_BUNDLE.description", "atom.EventEnum.OBSOLETE_BUNDLE.code", "", "", "", "Bundle", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_BUNDLE", "", "");
    public static final EventEnum OBSOLETE_UNBUNDLE = new EventEnum("UNBUNDLE", "atom.EventEnum.OBSOLETE_UNBUNDLE.description", "atom.EventEnum.OBSOLETE_UNBUNDLE.code", "", "", "", "Unbundle", true, true, false, true, false, LogicalEntityEnum.CTR, "UNIT_UNBUNDLE", "", "");
    public static final EventEnum OBSOLETE_BRING_BACK_INTO_YARD = new EventEnum("BRING_BACK_INTO_YARD", "atom.EventEnum.OBSOLETE_BRING_BACK_INTO_YARD.description", "atom.EventEnum.OBSOLETE_BRING_BACK_INTO_YARD.code", "", "", "", "Un-deliver", true, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_BRING_BACK_INTO_YARD", "", "");
    public static final EventEnum OBSOLETE_BRING_TO_COMMUNITY = new EventEnum("BRING_TO_COMMUNITY", "atom.EventEnum.OBSOLETE_BRING_TO_COMMUNITY.description", "atom.EventEnum.OBSOLETE_BRING_TO_COMMUNITY.code", "", "", "", "Un-receive", true, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_BRING_TO_COMMUNITY", "", "");
    public static final EventEnum OBSOLETE_NOTICE = new EventEnum("NOTICE", "atom.EventEnum.OBSOLETE_NOTICE.description", "atom.EventEnum.OBSOLETE_NOTICE.code", "", "", "", "Notice-CTR", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_NOTICE", "", "");
    public static final EventEnum OBSOLETE_NOTICE_CHS = new EventEnum("NOTICE_CHS", "atom.EventEnum.OBSOLETE_NOTICE_CHS.description", "atom.EventEnum.OBSOLETE_NOTICE_CHS.code", "", "", "", "Notice-CHS", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_NOTICE", "", "");
    public static final EventEnum OBSOLETE_NOTICE_ACC = new EventEnum("NOTICE_ACC", "atom.EventEnum.OBSOLETE_NOTICE_ACC.description", "atom.EventEnum.OBSOLETE_NOTICE_ACC.code", "", "", "", "Notice-ACC", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_NOTICE", "", "");
    public static final EventEnum OBSOLETE_ENABLE_ROAD = new EventEnum("ENABLE_ROAD", "atom.EventEnum.OBSOLETE_ENABLE_ROAD.description", "atom.EventEnum.OBSOLETE_ENABLE_ROAD.code", "", "", "", "Enable Road", false, false, true, false, false, LogicalEntityEnum.CTR, "UNIT_ENABLE_ROAD", "", "");
    public static final EventEnum OBSOLETE_DISABLE_ROAD = new EventEnum("DISABLE_ROAD", "atom.EventEnum.OBSOLETE_DISABLE_ROAD.description", "atom.EventEnum.OBSOLETE_DISABLE_ROAD.code", "", "", "", "Disable Road", false, false, true, false, false, LogicalEntityEnum.CTR, "UNIT_DISABLE_ROAD", "", "");
    public static final EventEnum OBSOLETE_RECORD_DAMAGE = new EventEnum("RECORD_DAMAGE", "atom.EventEnum.OBSOLETE_RECORD_DAMAGE.description", "atom.EventEnum.OBSOLETE_RECORD_DAMAGE.code", "", "", "", "Record Damage", false, false, true, false, false, LogicalEntityEnum.CTR, "UNIT_RECORD_DAMAGE", "", "");
    public static final EventEnum OBSOLETE_RECTIFY = new EventEnum("RECTIFY", "atom.EventEnum.OBSOLETE_RECTIFY.description", "atom.EventEnum.OBSOLETE_RECTIFY.code", "", "", "", "Rectify", false, false, false, true, false, LogicalEntityEnum.CTR, "UNIT_RECTIFY", "", "");
    public static final EventEnum OBSOLETE_RETURN_TO_STORAGE = new EventEnum("RETURN_TO_STORAGE", "atom.EventEnum.OBSOLETE_RETURN_TO_STORAGE.description", "atom.EventEnum.OBSOLETE_RETURN_TO_STORAGE.code", "", "", "", "Return to Storage", false, false, true, true, false, LogicalEntityEnum.CTR, "UNIT_RETURN_TO_STORAGE", "", "");
    public static final EventEnum OBSOLETE_WANTS_POWER_YES = new EventEnum("WANTS_POWER_YES", "atom.EventEnum.OBSOLETE_WANTS_POWER_YES.description", "atom.EventEnum.OBSOLETE_WANTS_POWER_YES.code", "", "", "", "Wants Power Yes", false, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_WANTS_POWER_YES", "", "");
    public static final EventEnum OBSOLETE_WANTS_POWER_NO = new EventEnum("WANTS_POWER_NO", "atom.EventEnum.OBSOLETE_WANTS_POWER_NO.description", "atom.EventEnum.OBSOLETE_WANTS_POWER_NO.code", "", "", "", "Wants Power No", false, true, true, true, false, LogicalEntityEnum.CTR, "UNIT_WANTS_POWER_NO", "", "");
    public static final EventEnum UNIT_OPERATOR_CHANGE = new EventEnum("UNIT_OPERATOR_CHANGE", "atom.EventEnum.UNIT_OPERATOR_CHANGE.description", "atom.EventEnum.UNIT_OPERATOR_CHANGE.code", "", "", "", "Unit Operator changed", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_OPR_CHANGE");
    public static final EventEnum UNIT_STORAGE_UPDATE = new EventEnum("UNIT_STORAGE_UPDATE", "atom.EventEnum.UNIT_STORAGE_UPDATE.description", "atom.EventEnum.UNIT_STORAGE_UPDATE.code", "", "", "", "Storage details are updated.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_STORAGE_UPDATE");
    public static final EventEnum UNIT_LINE_STORAGE_UPDATE = new EventEnum("UNIT_LINE_STORAGE_UPDATE", "atom.EventEnum.UNIT_LINE_STORAGE_UPDATE.description", "atom.EventEnum.UNIT_LINE_STORAGE_UPDATE.code", "", "", "", "Line Storage details are updated.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_LINE_STORAGE_UPDATE");
    public static final EventEnum UNIT_POWER_UPDATE = new EventEnum("UNIT_POWER_UPDATE", "atom.EventEnum.UNIT_POWER_UPDATE.description", "atom.EventEnum.UNIT_POWER_UPDATE.code", "", "", "", "Power details are updated.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_POWER_UPDATE");
    public static final EventEnum UPDATE_DELIVERY_RQMNTS = new EventEnum("UPDATE_DELIVERY_RQMNTS", "atom.EventEnum.UPDATE_DELIVERY_RQMNTS.description", "atom.EventEnum.UPDATE_DELIVERY_RQMNTS.code", "", "", "", "Delivery Requirements are updated.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UPDATE_DELIVERY_RQMNTS");
    public static final EventEnum UNIT_HAZARDS_UPDATE = new EventEnum("UNIT_HAZARDS_UPDATE", "atom.EventEnum.UNIT_HAZARDS_UPDATE.description", "atom.EventEnum.UNIT_HAZARDS_UPDATE.code", "", "", "", "Unit Hazards are recorded.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_HAZARDS_UPDATE");
    public static final EventEnum UNIT_HAZARDS_INSERT = new EventEnum("UNIT_HAZARDS_INSERT", "atom.EventEnum.UNIT_HAZARDS_INSERT.description", "atom.EventEnum.UNIT_HAZARDS_INSERT.code", "", "", "", "Unit Hazard Items Inserted.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_HAZARDS_INSERT");
    public static final EventEnum UNIT_HAZARDS_DELETE = new EventEnum("UNIT_HAZARDS_DELETE", "atom.EventEnum.UNIT_HAZARDS_DELETE.description", "atom.EventEnum.UNIT_HAZARDS_DELETE.code", "", "", "", "Unit Hazard Items Deleted.", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_HAZARDS_DELETE");
    public static final EventEnum REEFER_SETTINGS_RECORDED = new EventEnum("REEFER_SETTINGS_RECORDED", "atom.EventEnum.REEFER_SETTINGS_RECORDED.description", "atom.EventEnum.REEFER_SETTINGS_RECORDED.code", "", "", "", "Unit reefer settings are recorded", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "REEFER_SETTINGS_RECORDED");
    public static final EventEnum UNIT_OVERDIMENSIONS_UPDATE = new EventEnum("UNIT_OVERDIMENSIONS_UPDATE", "atom.EventEnum.UNIT_OVERDIMENSIONS_UPDATE.description", "atom.EventEnum.UNIT_OVERDIMENSIONS_UPDATE.code", "", "", "", "Unit Over Dimensions are recorded", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_OVERDIMENSIONS_UPDATE");
    public static final EventEnum UNIT_ATTACH_TO_ERO = new EventEnum("UNIT_ATTACH_TO_ERO ", "atom.EventEnum.UNIT_ATTACH_TO_ERO .description", "atom.EventEnum.UNIT_ATTACH_TO_ERO .code", "", "", "", "Attach Unit to an ERO", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_ATTACH_TO_ERO");
    public static final EventEnum UNIT_DRAY_IN = new EventEnum("UNIT_DRAY_IN", "atom.EventEnum.UNIT_DRAY_IN.description", "atom.EventEnum.UNIT_DRAY_IN.code", "", "", "", "Unit drayed-in", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DRAY_IN");
    public static final EventEnum SERVICE_ORDER_PROPERTY_UPDATE = new EventEnum("SERVICE_ORDER_PROPERTY_UPDATE", "atom.EventEnum.SERVICE_ORDER_PROPERTY_UPDATE.description", "atom.EventEnum.SERVICE_ORDER_PROPERTY_UPDATE.code", "", "", "", "Service Order property update", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_PROPERTY_UPDATE");
    public static final EventEnum SERVICE_ORDER_BILLING_PARTY_CHANGED = new EventEnum("SERVICE_ORDER_BILLING_PARTY_CHANGED", "atom.EventEnum.SERVICE_ORDER_BILLING_PARTY_CHANGED.description", "atom.EventEnum.SERVICE_ORDER_BILLING_PARTY_CHANGED.code", "", "", "", "Service Order's billing party changed", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_BILLING_PARTY_CHANGED");
    public static final EventEnum SERVICE_ORDER_STATUS_CHANGED = new EventEnum("SERVICE_ORDER_STATUS_CHANGED", "atom.EventEnum.SERVICE_ORDER_STATUS_CHANGED.description", "atom.EventEnum.SERVICE_ORDER_STATUS_CHANGED.code", "", "", "", "Service Order status changed", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_STATUS_CHANGED");
    public static final EventEnum SERVICE_ORDER_SERVICE_ADDED = new EventEnum("SERVICE_ORDER_SERVICE_ADDED", "atom.EventEnum.SERVICE_ORDER_SERVICE_ADDED.description", "atom.EventEnum.SERVICE_ORDER_SERVICE_ADDED.code", "", "", "", "Service added to the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_SERVICE_ADDED");
    public static final EventEnum SERVICE_ORDER_SERVICE_REMOVED = new EventEnum("SERVICE_ORDER_SERVICE_REMOVED", "atom.EventEnum.SERVICE_ORDER_SERVICE_REMOVED.description", "atom.EventEnum.SERVICE_ORDER_SERVICE_REMOVED.code", "", "", "", "Service removed from the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_SERVICE_REMOVED");
    public static final EventEnum SERVICE_ORDER_EQ_ADDED = new EventEnum("SERVICE_ORDER_EQ_ADDED", "atom.EventEnum.SERVICE_ORDER_EQ_ADDED.description", "atom.EventEnum.SERVICE_ORDER_EQ_ADDED.code", "", "", "", "Equipment added to the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_EQ_ADDED");
    public static final EventEnum SERVICE_ORDER_EQ_REMOVED = new EventEnum("SERVICE_ORDER_EQ_REMOVED", "atom.EventEnum.SERVICE_ORDER_EQ_REMOVED.description", "atom.EventEnum.SERVICE_ORDER_EQ_REMOVED.code", "", "", "", "Equipment removed from the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_EQ_REMOVED");
    public static final EventEnum SERVICE_ORDER_ITEM_ADDED = new EventEnum("SERVICE_ORDER_ITEM_ADDED", "atom.EventEnum.SERVICE_ORDER_ITEM_ADDED.description", "atom.EventEnum.SERVICE_ORDER_ITEM_ADDED.code", "", "", "", "Item added to the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_ITEM_ADDED");
    public static final EventEnum SERVICE_ORDER_ITEM_REMOVED = new EventEnum("SERVICE_ORDER_ITEM_REMOVED", "atom.EventEnum.SERVICE_ORDER_ITEM_REMOVED.description", "atom.EventEnum.SERVICE_ORDER_ITEM_REMOVED.code", "", "", "", "Item removed from the Service Order", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_ITEM_REMOVED");
    public static final EventEnum SERVICE_ORDER_ITEM_PROPERTY_UPDATE = new EventEnum("SERVICE_ORDER_ITEM_PROPERTY_UPDATE", "atom.EventEnum.SERVICE_ORDER_ITEM_PROPERTY_UPDATE.description", "atom.EventEnum.SERVICE_ORDER_ITEM_PROPERTY_UPDATE.code", "", "", "", "Service Order Item property update", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_ITEM_PROPERTY_UPDATE");
    public static final EventEnum SERVICE_ORDER_UNIT_STATUS_CHANGED = new EventEnum("SERVICE_ORDER_UNIT_STATUS_CHANGED", "atom.EventEnum.SERVICE_ORDER_UNIT_STATUS_CHANGED.description", "atom.EventEnum.SERVICE_ORDER_UNIT_STATUS_CHANGED.code", "", "", "", "Service Order Unit status changed", false, false, true, true, false, LogicalEntityEnum.SRVO, "", "", "SERVICE_ORDER_UNIT_STATUS_CHANGED");
    public static final EventEnum EQ_RESERVE_BL = new EventEnum("EQ_RESERVE_BL", "atom.EventEnum.EQ_RESERVE_BL.description", "atom.EventEnum.EQ_RESERVE_BL.code", "", "", "", "Equipment reserved against the BL", false, false, true, true, false, LogicalEntityEnum.BL, "", "", "EQ_RESERVE_BL");
    public static final EventEnum BL_CREATE = new EventEnum("BL_CREATE", "atom.EventEnum.BL_CREATE.description", "atom.EventEnum.BL_CREATE.code", "", "", "", "BillOfLading Created", false, true, true, true, false, LogicalEntityEnum.BL, "", "", "BL_CREATE");
    public static final EventEnum BL_PROPERTY_UPDATE = new EventEnum("BL_PROPERTY_UPDATE", "atom.EventEnum.BL_PROPERTY_UPDATE.description", "atom.EventEnum.BL_PROPERTY_UPDATE.code", "", "", "", "BillOfLading Property Updated", false, true, true, true, false, LogicalEntityEnum.BL, "", "", "BL_PROPERTY_UPDATE");
    public static final EventEnum REROUTE_BL = new EventEnum("REROUTE_BL", "atom.EventEnum.REROUTE_BL.description", "atom.EventEnum.REROUTE_BL.code", "", "", "", "BillOfLading Rerouted", false, true, true, true, false, LogicalEntityEnum.BL, "", "", "REROUTE_BL");
    public static final EventEnum BOOKING_HAZARDS_UPDATE = new EventEnum("BOOKING_HAZARDS_UPDATE", "atom.EventEnum.BOOKING_HAZARDS_UPDATE.description", "atom.EventEnum.BOOKING_HAZARDS_UPDATE.code", "", "", "", "Booking Hazards are recorded.", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "BOOKING_HAZARDS_UPDATE");
    public static final EventEnum BOOKING_HAZARDS_INSERT = new EventEnum("BOOKING_HAZARDS_INSERT", "atom.EventEnum.BOOKING_HAZARDS_INSERT.description", "atom.EventEnum.BOOKING_HAZARDS_INSERT.code", "", "", "", "Booking Hazard Items Inserted.", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "BOOKING_HAZARDS_INSERT");
    public static final EventEnum BOOKING_HAZARDS_DELETE = new EventEnum("BOOKING_HAZARDS_DELETE", "atom.EventEnum.BOOKING_HAZARDS_DELETE.description", "atom.EventEnum.BOOKING_HAZARDS_DELETE.code", "", "", "", "Booking Hazard Items Deleted.", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "BOOKING_HAZARDS_DELETE");
    public static final EventEnum BOOKING_PROPERTY_UPDATE = new EventEnum("BOOKING_PROPERTY_UPDATE", "atom.EventEnum.BOOKING_PROPERTY_UPDATE.description", "atom.EventEnum.BOOKING_PROPERTY_UPDATE.code", "", "", "", "Booking properties update", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "BOOKING_PROPERTY_UPDATE");
    public static final EventEnum BOOKING_CREATE = new EventEnum("BOOKING_CREATE", "atom.EventEnum.BOOKING_CREATE.description", "atom.EventEnum.BOOKING_CREATE.code", "", "", "", "Booking created", false, false, true, true, false, LogicalEntityEnum.BKG, "", "", "BOOKING_CREATE");
    public static final EventEnum APPT_CREATE = new EventEnum("APPT_CREATE", "atom.EventEnum.APPT_CREATE.description", "atom.EventEnum.APPT_CREATE.code", "", "", "", "Appointment created", false, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_CREATE");
    public static final EventEnum TVAPPT_CREATE = new EventEnum("TVAPPT_CREATE", "atom.EventEnum.TVAPPT_CREATE.description", "atom.EventEnum.TVAPPT_CREATE.code", "", "", "", "Truck Visit Appointment created", false, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_CREATE");
    public static final EventEnum APPT_CANCEL = new EventEnum("APPT_CANCEL", "atom.EventEnum.APPT_CANCEL.description", "atom.EventEnum.APPT_CANCEL.code", "", "", "", "Appointment cancelled", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_CANCEL");
    public static final EventEnum TVAPPT_CANCEL = new EventEnum("TVAPPT_CANCEL", "atom.EventEnum.TVAPPT_CANCEL.description", "atom.EventEnum.TVAPPT_CANCEL.code", "", "", "", "Truck Visit Appointment cancelled", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_CANCEL");
    public static final EventEnum APPT_EXPIRE = new EventEnum("APPT_EXPIRE", "atom.EventEnum.APPT_EXPIRE.description", "atom.EventEnum.APPT_EXPIRE.code", "", "", "", "Appointment expired", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_EXPIRE");
    public static final EventEnum TVAPPT_EXPIRE = new EventEnum("TVAPPT_EXPIRE", "atom.EventEnum.TVAPPT_EXPIRE.description", "atom.EventEnum.TVAPPT_EXPIRE.code", "", "", "", "Truck Visit Appointment expired", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_EXPIRE");
    public static final EventEnum APPT_CLOSE = new EventEnum("APPT_CLOSE", "atom.EventEnum.APPT_CLOSE.description", "atom.EventEnum.APPT_CLOSE.code", "", "", "", "Appointment closed", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_CLOSE");
    public static final EventEnum TVAPPT_CLOSE = new EventEnum("TVAPPT_CLOSE", "atom.EventEnum.TVAPPT_CLOSE.description", "atom.EventEnum.TVAPPT_CLOSE.code", "", "", "", "Truck Visit Appointment closed", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_CLOSE");
    public static final EventEnum APPT_USED = new EventEnum("APPT_USED", "atom.EventEnum.APPT_USED.description", "atom.EventEnum.APPT_USED.code", "", "", "", "Appointment used", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_USED");
    public static final EventEnum TVAPPT_USED = new EventEnum("TVAPPT_USED", "atom.EventEnum.TVAPPT_USED.description", "atom.EventEnum.TVAPPT_USED.code", "", "", "", "Truck Visit Appointment used", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_USED");
    public static final EventEnum APPT_USED_LATE = new EventEnum("APPT_USED_LATE", "atom.EventEnum.APPT_USED_LATE.description", "atom.EventEnum.APPT_USED_LATE.code", "", "", "", "Appointment used late", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_USED_LATE");
    public static final EventEnum TVAPPT_USED_LATE = new EventEnum("TVAPPT_USED_LATE", "atom.EventEnum.TVAPPT_USED_LATE.description", "atom.EventEnum.TVAPPT_USED_LATE.code", "", "", "", "Truck Visit Appointment used late", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_USED_LATE");
    public static final EventEnum APPT_LATE = new EventEnum("APPT_LATE", "atom.EventEnum.APPT_LATE.description", "atom.EventEnum.APPT_LATE.code", "", "", "", "Appointment late", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_LATE");
    public static final EventEnum TVAPPT_LATE = new EventEnum("TVAPPT_LATE", "atom.EventEnum.TVAPPT_LATE.description", "atom.EventEnum.TVAPPT_LATE.code", "", "", "", "Truck Visit Appointment late", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_LATE");
    public static final EventEnum APPT_USED_PEAK_HRS = new EventEnum("APPT_USED_PEAK_HRS", "atom.EventEnum.APPT_USED_PEAK_HRS.description", "atom.EventEnum.APPT_USED_PEAK_HRS.code", "", "", "", "Appointment at peak hours", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_USED_PEAK_HRS");
    public static final EventEnum TVAPPT_USED_PEAK_HRS = new EventEnum("TVAPPT_USED_PEAK_HRS", "atom.EventEnum.TVAPPT_USED_PEAK_HRS.description", "atom.EventEnum.TVAPPT_USED_PEAK_HRS.code", "", "", "", "Truck Visit Appointment at peak hours", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_USED_PEAK_HRS");
    public static final EventEnum APPT_CANCELED_NOT_REUSED = new EventEnum("APPT_CANCELED_NOT_REUSED", "atom.EventEnum.APPT_CANCELED_NOT_REUSED.description", "atom.EventEnum.APPT_CANCELED_NOT_REUSED.code", "", "", "", "Appointment Canceled and not reused", true, false, true, true, false, LogicalEntityEnum.GAPPT, "", "", "APPT_CANCELED_NOT_REUSED");
    public static final EventEnum TVAPPT_CANCELED_NOT_REUSED = new EventEnum("TVAPPT_CANCELED_NOT_REUSED", "atom.EventEnum.TVAPPT_CANCELED_NOT_REUSED.description", "atom.EventEnum.TVAPPT_CANCELED_NOT_REUSED.code", "", "", "", "Truck Visit Appointment Canceled and not reused", true, false, true, true, false, LogicalEntityEnum.TAPPT, "", "", "TVAPPT_CANCELED_NOT_REUSED");
    public static final EventEnum CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED = new EventEnum("CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED.description", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED.code", "", "", "", "Carrier Visit Service Order Status changed", false, false, true, true, false, LogicalEntityEnum.CVSO, "", "", "CARRIER_VISIT_SERVICE_ORDER_STATUS_CHANGED");
    public static final EventEnum CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED = new EventEnum("CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED.description", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED.code", "", "", "", "Carrier Visit Service Order event created", false, false, true, true, false, LogicalEntityEnum.CVSO, "", "", "CARRIER_VISIT_SERVICE_ORDER_SERVICE_ADDED");
    public static final EventEnum CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED = new EventEnum("CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED.description", "atom.EventEnum.CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED.code", "", "", "", "Carrier Visit Service Order event deleted", false, false, true, true, false, LogicalEntityEnum.CVSO, "", "", "CARRIER_VISIT_SERVICE_ORDER_SERVICE_DELETED");
    public static final EventEnum UNIT_EVENT_PROPERTY_UPDATE = new EventEnum("UNIT_EVENT_PROPERTY_UPDATE", "atom.EventEnum.UNIT_EVENT_PROPERTY_UPDATE.description", "atom.EventEnum.UNIT_EVENT_PROPERTY_UPDATE.code", "", "", "", "Unit event details updated", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "PROPERTY_UPDATE_UNIT_EVENT");
    public static final EventEnum UNIT_TRANSFER_ALLOWED = new EventEnum("UNIT_TRANSFER_ALLOWED", "atom.EventEnum.UNIT_TRANSFER_ALLOWED.description", "atom.EventEnum.UNIT_TRANSFER_ALLOWED.code", "", "", "", "Unit Transfer Allowed", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TRANSFER_ALLOWED");
    public static final EventEnum UNIT_TBD_UNIT_MERGE = new EventEnum("UNIT_TBD_UNIT_MERGE", "atom.EventEnum.UNIT_TBD_UNIT_MERGE.description", "atom.EventEnum.UNIT_TBD_UNIT_MERGE.code", "", "", "", "Unit Tbd Unit Merge", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TBD_UNIT_MERGE");
    public static final EventEnum RAILCAR_DAMAGED = new EventEnum("RAILCAR_DAMAGED", "atom.EventEnum.RAILCAR_DAMAGED.description", "atom.EventEnum.RAILCAR_DAMAGED.code", "", "", "", "Railcar damaged", false, false, true, true, false, LogicalEntityEnum.RCARV, "", "", "RAILCAR_DAMAGED");
    public static final EventEnum RAILCAR_REPAIRED = new EventEnum("RAILCAR_REPAIRED", "atom.EventEnum.RAILCAR_REPAIRED.description", "atom.EventEnum.RAILCAR_REPAIRED.code", "", "", "", "Railcar repaired", false, false, true, true, false, LogicalEntityEnum.RCARV, "", "", "RAILCAR_REPAIRED");
    public static final EventEnum CAS_VESSEL_VISIT_UPDATE = new EventEnum("CAS_VESSEL_VISIT_UPDATE", "atom.EventEnum.CAS_VESSEL_VISIT_UPDATE.description", "atom.EventEnum.CAS_VESSEL_VISIT_UPDATE.code", "", "", "", "Response sent to CAS on update of vessel visit", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "CAS_VESSEL_VISIT_UPDATE");
    public static final EventEnum CAS_TRAIN_VISIT_UPDATE = new EventEnum("CAS_TRAIN_VISIT_UPDATE", "atom.EventEnum.CAS_TRAIN_VISIT_UPDATE.description", "atom.EventEnum.CAS_TRAIN_VISIT_UPDATE.code", "", "", "", "Response sent to CAS on update of train visit", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "CAS_TRAIN_VISIT_UPDATE");
    public static final EventEnum CAS_VV_REQUEST_CONTAINER_LIST = new EventEnum("CAS_VV_REQUEST_CONTAINER_LIST", "atom.EventEnum.CAS_VV_REQUEST_CONTAINER_LIST.description", "atom.EventEnum.CAS_VV_REQUEST_CONTAINER_LIST.code", "", "", "", "CAS request for on-board container list or crane work lists for a vessel visit", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "CAS_VV_REQUEST_CONTAINER_LIST");
    public static final EventEnum CAS_RV_REQUEST_CONTAINER_LIST = new EventEnum("CAS_RV_REQUEST_CONTAINER_LIST", "atom.EventEnum.CAS_RV_REQUEST_CONTAINER_LIST.description", "atom.EventEnum.CAS_RV_REQUEST_CONTAINER_LIST.code", "", "", "", "CAS request for on-board container list or crane work lists for a train visit", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "CAS_RV_REQUEST_CONTAINER_LIST");
    public static final EventEnum CAS_VV_REQUEST_GEOMETRY = new EventEnum("CAS_VV_REQUEST_GEOMETRY", "atom.EventEnum.CAS_VV_REQUEST_GEOMETRY.description", "atom.EventEnum.CAS_VV_REQUEST_GEOMETRY.code", "", "", "", "CAS request for vessel geometry", false, false, true, true, false, LogicalEntityEnum.VV, "", "", "CAS_VV_REQUEST_GEOMETRY");
    public static final EventEnum CAS_RV_REQUEST_GEOMETRY = new EventEnum("CAS_RV_REQUEST_GEOMETRY", "atom.EventEnum.CAS_RV_REQUEST_GEOMETRY.description", "atom.EventEnum.CAS_RV_REQUEST_GEOMETRY.code", "", "", "", "CAS request for rail geometry", false, false, true, true, false, LogicalEntityEnum.RV, "", "", "CAS_RV_REQUEST_GEOMETRY");
    public static final EventEnum CAS_UNIT_CAPTURE = new EventEnum("CAS_UNIT_CAPTURE", "atom.EventEnum.CAS_UNIT_CAPTURE.description", "atom.EventEnum.CAS_UNIT_CAPTURE.code", "", "", "", "CAS captures unit details", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CAS_UNIT_CAPTURE");
    public static final EventEnum CAS_UNIT_POSITION_UPDATE = new EventEnum("CAS_UNIT_POSITION_UPDATE", "atom.EventEnum.CAS_UNIT_POSITION_UPDATE.description", "atom.EventEnum.CAS_UNIT_POSITION_UPDATE.code", "", "", "", "CAS sends unit position update", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CAS_UNIT_POSITION_UPDATE");
    public static final EventEnum CAS_UNIT_READY_TO_TRANSFER = new EventEnum("CAS_UNIT_READY_TO_TRANSFER", "atom.EventEnum.CAS_UNIT_READY_TO_TRANSFER.description", "atom.EventEnum.CAS_UNIT_READY_TO_TRANSFER.code", "", "", "", "N4 sends unit ready to transfer message to CAS", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "CAS_UNIT_READY_TO_TRANSFER");
    public static final EventEnum CHE_LIFT = new EventEnum("CHE_LIFT", "atom.EventEnum.CHE_LIFT.description", "atom.EventEnum.CHE_LIFT.code", "", "", "", "CHE has lifted unit", false, false, true, true, false, LogicalEntityEnum.CHE, "", "", "CHE_LIFT");
    public static final EventEnum CHE_SET = new EventEnum("CHE_SET", "atom.EventEnum.CHE_SET.description", "atom.EventEnum.CHE_SET.code", "", "", "", "CHE has lifted unit down", false, false, true, true, false, LogicalEntityEnum.CHE, "", "", "CHE_SET");
    public static final EventEnum CHE_ERROR_UNIT_HEAVY_FOR_CHE = new EventEnum("CHE_ERROR_UNIT_HEAVY_FOR_CHE", "atom.EventEnum.CHE_ERROR_UNIT_HEAVY_FOR_CHE.description", "atom.EventEnum.CHE_ERROR_UNIT_HEAVY_FOR_CHE.code", "", "", "", "CHE Exception Encountered: Unit is too heavy for CHE", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_HEAVY_FOR_CHE");
    public static final EventEnum CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST = new EventEnum("CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST", "atom.EventEnum.CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST.description", "atom.EventEnum.CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST.code", "", "", "", "CHE Exception Encountered: Unit is not in Load/Discharge list", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_NOT_IN_LOAD_DISCH_LIST");
    public static final EventEnum CHE_ERROR_UNIT_DAMAGED = new EventEnum("CHE_ERROR_UNIT_DAMAGED", "atom.EventEnum.CHE_ERROR_UNIT_DAMAGED.description", "atom.EventEnum.CHE_ERROR_UNIT_DAMAGED.code", "", "", "", "CHE Exception Encountered: Unit is damaged", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_DAMAGED");
    public static final EventEnum CHE_ERROR_UNIT_HAS_HOLDS = new EventEnum("CHE_ERROR_UNIT_HAS_HOLDS", "atom.EventEnum.CHE_ERROR_UNIT_HAS_HOLDS.description", "atom.EventEnum.CHE_ERROR_UNIT_HAS_HOLDS.code", "", "", "", "CHE Exception Encountered: Unit has hold(s)", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_HAS_HOLDS");
    public static final EventEnum CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE = new EventEnum("CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE", "atom.EventEnum.CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE.description", "atom.EventEnum.CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE.code", "", "", "", "CHE Exception Encountered: Unit is not next in sequence", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_NOT_NEXT_IN_SEQUENCE");
    public static final EventEnum CHE_ORDER_REJECTION = new EventEnum("CHE_ORDER_REJECTION", "atom.EventEnum.CHE_ORDER_REJECTION.description", "atom.EventEnum.CHE_ORDER_REJECTION.code", "", "", "", "Che Order Rejection", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ORDER_REJECTION");
    public static final EventEnum CHE_ORDER_ABORT = new EventEnum("CHE_ORDER_ABORT", "atom.EventEnum.CHE_ORDER_ABORT.description", "atom.EventEnum.CHE_ORDER_ABORT.code", "", "", "", "Che Order Rejection", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ORDER_ABORT");
    public static final EventEnum CHE_DISPATCH_ERROR = new EventEnum("CHE_DISPATCH_ERROR", "atom.EventEnum.CHE_DISPATCH_ERROR.description", "atom.EventEnum.CHE_DISPATCH_ERROR.code", "", "", "", "Che Dispatch Validation Error", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_DISPATCH_ERROR");
    public static final EventEnum CHE_SCHEDULE_ERROR = new EventEnum("CHE_SCHEDULE_ERROR", "atom.EventEnum.CHE_SCHEDULE_ERROR.description", "atom.EventEnum.CHE_SCHEDULE_ERROR.code", "", "", "", "Che Schedule error", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_SCHEDULE_ERROR");
    public static final EventEnum CHE_SCHEDULER_QUARANTINE = new EventEnum("CHE_SCHEDULER_QUARANTINE", "atom.EventEnum.CHE_SCHEDULER_QUARANTINE.description", "atom.EventEnum.CHE_SCHEDULER_QUARANTINE.code", "", "", "", "Che Scheduler Exception Quarantine", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_SCHEDULER_QUARANTINE");
    public static final EventEnum RAILCAR_INVENTORY = new EventEnum("RAILCAR_INVENTORY", "atom.EventEnum.RAILCAR_INVENTORY.description", "atom.EventEnum.RAILCAR_INVENTORY.code", "", "", "", "Railcar inventoried", false, false, true, true, false, LogicalEntityEnum.RCARV, "", "", "RAILCAR_INVENTORY");
    public static final EventEnum RAILCAR_SPOTTING_FAILED = new EventEnum("RAILCAR_SPOTTING_FAILED", "atom.EventEnum.RAILCAR_SPOTTING_FAILED.description", "atom.EventEnum.RAILCAR_SPOTTING_FAILED.code", "", "", "", "Railcar spotting failed", false, false, true, true, false, LogicalEntityEnum.RCARV, "", "", "RAILCAR_SPOTTING_FAILED");
    public static final EventEnum RAILCAR_SPOTTED = new EventEnum("RAILCAR_SPOTTED", "atom.EventEnum.RAILCAR_SPOTTED.description", "atom.EventEnum.RAILCAR_SPOTTED.code", "", "", "", "Railcar has been spotted", false, false, true, true, false, LogicalEntityEnum.RCARV, "", "", "RAILCAR_SPOTTED");
    public static final EventEnum CHE_RAIL_DROP_POSITION_UNKNOWN = new EventEnum("CHE_RAIL_DROP_POSITION_UNKNOWN", "atom.EventEnum.CHE_RAIL_DROP_POSITION_UNKNOWN.description", "atom.EventEnum.CHE_RAIL_DROP_POSITION_UNKNOWN.code", "", "", "", "Che Rail Drop Position is Unknown", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_RAIL_DROP_POSITION_UNKNOWN");
    public static final EventEnum CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER = new EventEnum("CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER", "atom.EventEnum.CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER.description", "atom.EventEnum.CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER.code", "", "", "", "CHE Exception Encountered: Unit in wrong position on platform/spreader", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_UNIT_WRONG_POS_ON_PLATFORM_SPREADER");
    public static final EventEnum CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED = new EventEnum("CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED", "atom.EventEnum.CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED.description", "atom.EventEnum.CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED.code", "", "", "", "CHE Exception Encountered: Tank rail inspection is required for tanks", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_TANK_RAIL_INSPECTION_REQUIRED");
    public static final EventEnum CHE_ERROR_REPORTED_STOW_POSITION_INVALID = new EventEnum("CHE_ERROR_REPORTED_STOW_POSITION_INVALID", "atom.EventEnum.CHE_ERROR_REPORTED_STOW_POSITION_INVALID.description", "atom.EventEnum.CHE_ERROR_REPORTED_STOW_POSITION_INVALID.code", "", "", "", "Che Exception Encountered: Reported Stow Position Invalid", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_REPORTED_STOW_POSITION_INVALID");
    public static final EventEnum CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR = new EventEnum("CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR.description", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR.code", "", "", "", "CHE Exception Encountered: Reported position mismatches to plan and also does not have a stow factor", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_UNKNOWN_STOW_FACTOR");
    public static final EventEnum CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR = new EventEnum("CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR.description", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR.code", "", "", "", "CHE Exception Encountered: Reported position mismatches to plan but has the same stow factor", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_SAME_STOW_FACTOR");
    public static final EventEnum CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR = new EventEnum("CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR.description", "atom.EventEnum.CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR.code", "", "", "", "CHE Exception Encountered: Reported position mismatches to plan and has a different stow factor", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_POS_MISMATCH_TO_PLAN_DIFF_STOW_FACTOR");
    public static final EventEnum CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE = new EventEnum("CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE", "atom.EventEnum.CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE.description", "atom.EventEnum.CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE.code", "", "", "", "Che Exception Encountered: Reported Stow Position Is Incomplete", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_REPORTED_STOW_POSITION_INCOMPLETE");
    public static final EventEnum CHE_DISCHARGE_SWAP = new EventEnum("CHE_DISCHARGE_SWAP", "atom.EventEnum.CHE_DISCHARGE_SWAP.description", "atom.EventEnum.CHE_DISCHARGE_SWAP.code", "", "", "", "Swapped a container not planned for Che", false, false, true, true, false, LogicalEntityEnum.CHE, "", "", "");
    public static final EventEnum CHE_ERROR_DURING_UNIT_CAPTURE = new EventEnum("CHE_ERROR_DURING_UNIT_CAPTURE", "atom.EventEnum.CHE_ERROR_DURING_UNIT_CAPTURE.description", "atom.EventEnum.CHE_ERROR_DURING_UNIT_CAPTURE.code", "", "", "", "Che Exception Encountered: Error during unit capture", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_DURING_UNIT_CAPTURE");
    public static final EventEnum CHE_ERROR_DOOR_DIRECTION_MISMATCH = new EventEnum("CHE_ERROR_DOOR_DIRECTION_MISMATCH", "atom.EventEnum.CHE_ERROR_DOOR_DIRECTION_MISMATCH.description", "atom.EventEnum.CHE_ERROR_DOOR_DIRECTION_MISMATCH.code", "", "", "", "Che Exception Encountered: Reported Door Direction Mismatch", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_DOOR_DIRECTION_MISMATCH");
    public static final EventEnum CHE_ERROR_ID_DIFF_FROM_KNOWN = new EventEnum("CHE_ERROR_ID_DIFF_FROM_KNOWN", "atom.EventEnum.CHE_ERROR_ID_DIFF_FROM_KNOWN.description", "atom.EventEnum.CHE_ERROR_ID_DIFF_FROM_KNOWN.code", "", "", "", "Che Exception Encountered: Identified Container Different from Expected Load Container", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_ID_DIFF_FROM_KNOWN");
    public static final EventEnum CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED = new EventEnum("CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED", "atom.EventEnum.CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED.description", "atom.EventEnum.CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED.code", "", "", "", "Che Exception Encountered: Container could not be identified", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_CONTAINER_COULD_NOT_BE_IDENTIFIED");
    public static final EventEnum CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME = new EventEnum("CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME", "atom.EventEnum.CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME.description", "atom.EventEnum.CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME.code", "", "", "", "Che Exception Encountered: Container was not identified in time", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_CONTAINER_NOT_IDENTIFIED_IN_TIME");
    public static final EventEnum TZ_NO_DIRECT_INTERCHANGE_TPS = new EventEnum("TZ_NO_DIRECT_INTERCHANGE_TPS", "atom.EventEnum.TZ_NO_DIRECT_INTERCHANGE_TPS.description", "atom.EventEnum.TZ_NO_DIRECT_INTERCHANGE_TPS.code", "", "", "", "No Direct Interchange TPs", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "TZ_NO_DIRECT_INTERCHANGE_TPS");
    public static final EventEnum UNIT_DISCHLIST_EDI_CREATED = new EventEnum("UNIT_DISCHLIST_EDI_CREATED", "atom.EventEnum.UNIT_DISCHLIST_EDI_CREATED.description", "atom.EventEnum.UNIT_DISCHLIST_EDI_CREATED.code", "", "", "", "Unit updated from DischList EDI posting", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DISCHLIST_EDI_CREATED");
    public static final EventEnum UNIT_DISCHLIST_EDI_UPDATED = new EventEnum("UNIT_DISCHLIST_EDI_UPDATED", "atom.EventEnum.UNIT_DISCHLIST_EDI_UPDATED.description", "atom.EventEnum.UNIT_DISCHLIST_EDI_UPDATED.code", "", "", "", "Unit updated by DischList EDI posting", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_DISCHLIST_EDI_UPDATED");
    public static final EventEnum UNIT_CARRIAGE_MOUNT = new EventEnum("UNIT_CARRIAGE_MOUNT", "atom.EventEnum.UNIT_CARRIAGE_MOUNT.description", "atom.EventEnum.UNIT_CARRIAGE_MOUNT.code", "", "", "", "Carriage Mount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_MOUNT");
    public static final EventEnum UNIT_CARRIAGE_DISMOUNT = new EventEnum("UNIT_CARRIAGE_DISMOUNT", "atom.EventEnum.UNIT_CARRIAGE_DISMOUNT.description", "atom.EventEnum.UNIT_CARRIAGE_DISMOUNT.code", "", "", "", "Carriage Dismount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_DISMOUNT");
    public static final EventEnum UNIT_CTR_ACCESSORY_MOUNT = new EventEnum("UNIT_CTR_ACCESSORY_MOUNT", "atom.EventEnum.UNIT_CTR_ACCESSORY_MOUNT.description", "atom.EventEnum.UNIT_CTR_ACCESSORY_MOUNT.code", "", "", "", "Ctr Accessory Mount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CTR_ACCESSORY_MOUNT");
    public static final EventEnum UNIT_CTR_ACCESSORY_DISMOUNT = new EventEnum("UNIT_CTR_ACCESSORY_DISMOUNT", "atom.EventEnum.UNIT_CTR_ACCESSORY_DISMOUNT.description", "atom.EventEnum.UNIT_CTR_ACCESSORY_DISMOUNT.code", "", "", "", "Ctr Accessory Dismount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CTR_ACCESSORY_DISMOUNT");
    public static final EventEnum UNIT_CHS_ACCESSORY_MOUNT = new EventEnum("UNIT_CHS_ACCESSORY_MOUNT", "atom.EventEnum.UNIT_CHS_ACCESSORY_MOUNT.description", "atom.EventEnum.UNIT_CHS_ACCESSORY_MOUNT.code", "", "", "", "Chs Accessory Mount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CHS_ACCESSORY_MOUNT");
    public static final EventEnum UNIT_CHS_ACCESSORY_DISMOUNT = new EventEnum("UNIT_CHS_ACCESSORY_DISMOUNT", "atom.EventEnum.UNIT_CHS_ACCESSORY_DISMOUNT.description", "atom.EventEnum.UNIT_CHS_ACCESSORY_DISMOUNT.code", "", "", "", "Chs Accessory Dismount", true, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CHS_ACCESSORY_DISMOUNT");
    public static final EventEnum UNIT_BUNDLE_PAYLOAD_ADD = new EventEnum("UNIT_BUNDLE_PAYLOAD_ADD", "atom.EventEnum.UNIT_BUNDLE_PAYLOAD_ADD.description", "atom.EventEnum.UNIT_BUNDLE_PAYLOAD_ADD.code", "", "", "", "Equipment added to bundle", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "BUNDLE_PAYLOAD_ADD");
    public static final EventEnum UNIT_BUNDLE_PAYLOAD_SWIPE = new EventEnum("UNIT_BUNDLE_PAYLOAD_SWIPE", "atom.EventEnum.UNIT_BUNDLE_PAYLOAD_SWIPE.description", "atom.EventEnum.UNIT_BUNDLE_PAYLOAD_SWIPE.code", "", "", "", "Equipment detached from the unit", false, false, false, true, false, LogicalEntityEnum.UNIT, "", "", "BUNDLE_PAYLOAD_SWIPE");
    public static final EventEnum WI_POSITION_UPDATED = new EventEnum("WI_POSITION_UPDATED", "atom.EventEnum.WI_POSITION_UPDATED.description", "atom.EventEnum.WI_POSITION_UPDATED.code", "", "", "", "Work instruction position updated", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "WI_POSITION_UPDATED");
    public static final EventEnum WI_DISCHARGE_LOADED_BACK = new EventEnum("WI_DISCHARGE_LOADED_BACK", "atom.EventEnum.WI_DISCHARGE_LOADED_BACK.description", "atom.EventEnum.WI_DISCHARGE_LOADED_BACK.code", "", "", "", "Discharge loaded back on vessel", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "WI_DISCHARGE_LOADED_BACK");
    public static final EventEnum UNIT_ACCESSORY_BRING_BACK_INTO_YARD = new EventEnum("UNIT_ACCESSORY_BRING_BACK_INTO_YARD", "atom.EventEnum.UNIT_ACCESSORY_BRING_BACK_INTO_YARD.description", "atom.EventEnum.UNIT_ACCESSORY_BRING_BACK_INTO_YARD.code", "", "", "", "Return the accessory to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_BRING_BACK_INTO_YARD");
    public static final EventEnum UNIT_ACCESSORY_BRING_TO_COMMUNITY = new EventEnum("UNIT_ACCESSORY_BRING_TO_COMMUNITY", "atom.EventEnum.UNIT_ACCESSORY_BRING_TO_COMMUNITY.description", "atom.EventEnum.UNIT_ACCESSORY_BRING_TO_COMMUNITY.code", "", "", "", "Put the accessory back in the Community", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_BRING_BACK_TO_COMMUNITY");
    public static final EventEnum UNIT_ACCESSORY_DELIVER = new EventEnum("UNIT_ACCESSORY_DELIVER", "atom.EventEnum.UNIT_ACCESSORY_DELIVER.description", "atom.EventEnum.UNIT_ACCESSORY_DELIVER.code", "", "", "", "Deliver accessory to a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_DELIVER");
    public static final EventEnum UNIT_ACCESSORY_DELIVER_REJECTED = new EventEnum("UNIT_ACCESSORY_DELIVER_REJECTED", "atom.EventEnum.UNIT_ACCESSORY_DELIVER_REJECTED.description", "atom.EventEnum.UNIT_ACCESSORY_DELIVER_REJECTED.code", "", "", "", "Return the accessroy to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_DELIVER_REJECTED");
    public static final EventEnum UNIT_ACCESSORY_DERAMP = new EventEnum("UNIT_ACCESSORY_DERAMP", "atom.EventEnum.UNIT_ACCESSORY_DERAMP.description", "atom.EventEnum.UNIT_ACCESSORY_DERAMP.code", "", "", "", "Discharge accessory from a railcar", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_DERAMP");
    public static final EventEnum UNIT_ACCESSORY_DISCH = new EventEnum("UNIT_ACCESSORY_DISCH", "atom.EventEnum.UNIT_ACCESSORY_DISCH.description", "atom.EventEnum.UNIT_ACCESSORY_DISCH.code", "", "", "", "Discharge accessory from a Vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_DISCHARGE");
    public static final EventEnum UNIT_ACCESSORY_DRAY_IN = new EventEnum("UNIT_ACCESSORY_DRAY_IN", "atom.EventEnum.UNIT_ACCESSORY_DRAY_IN.description", "atom.EventEnum.UNIT_ACCESSORY_DRAY_IN.code", "", "", "", "Accessory drayed-in", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_DRAY_IN");
    public static final EventEnum UNIT_ACCESSORY_IFT_IN = new EventEnum("UNIT_ACCESSORY_IFT_IN", "atom.EventEnum.UNIT_ACCESSORY_IFT_IN.description", "atom.EventEnum.UNIT_ACCESSORY_IFT_IN.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_IFT_IN");
    public static final EventEnum UNIT_ACCESSORY_IFT_OUT = new EventEnum("UNIT_ACCESSORY_IFT_OUT", "atom.EventEnum.UNIT_ACCESSORY_IFT_OUT.description", "atom.EventEnum.UNIT_ACCESSORY_IFT_OUT.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_IFT_OUT");
    public static final EventEnum UNIT_ACCESSORY_IN_GATE = new EventEnum("UNIT_ACCESSORY_IN_GATE", "atom.EventEnum.UNIT_ACCESSORY_IN_GATE.description", "atom.EventEnum.UNIT_ACCESSORY_IN_GATE.code", "", "", "", "Accessory entered facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_IN_GATE");
    public static final EventEnum UNIT_ACCESSORY_IN_RAIL = new EventEnum("UNIT_ACCESSORY_IN_RAIL", "atom.EventEnum.UNIT_ACCESSORY_IN_RAIL.description", "atom.EventEnum.UNIT_ACCESSORY_IN_RAIL.code", "", "", "", "Accessory entered facility via rail", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_IN_RAIL");
    public static final EventEnum UNIT_ACCESSORY_IN_VESSEL = new EventEnum("UNIT_ACCESSORY_IN_VESSEL", "atom.EventEnum.UNIT_ACCESSORY_IN_VESSEL.description", "atom.EventEnum.UNIT_ACCESSORY_IN_VESSEL.code", "", "", "", "Accessory entered facility via vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_IN_VESSEL");
    public static final EventEnum UNIT_ACCESSORY_OUT_GATE = new EventEnum("UNIT_ACCESSORY_OUT_GATE", "atom.EventEnum.UNIT_ACCESSORY_OUT_GATE.description", "atom.EventEnum.UNIT_ACCESSORY_OUT_GATE.code", "", "", "", "Accessory exited facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_OUT_GATE");
    public static final EventEnum UNIT_ACCESSORY_OUT_RAIL = new EventEnum("UNIT_ACCESSORY_OUT_RAIL", "atom.EventEnum.UNIT_ACCESSORY_OUT_RAIL.description", "atom.EventEnum.UNIT_ACCESSORY_OUT_RAIL.code", "", "", "", "Accessory exited facility via rail", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_OUT_RAIL");
    public static final EventEnum UNIT_ACCESSORY_POSITION_CORRECTION = new EventEnum("UNIT_ACCESSORY_POSITION_CORRECTION", "atom.EventEnum.UNIT_ACCESSORY_POSITION_CORRECTION.description", "atom.EventEnum.UNIT_ACCESSORY_POSITION_CORRECTION.code", "", "", "", "Correction of position within System", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_POSITION_CORRECTION");
    public static final EventEnum UNIT_ACCESSORY_RAMP = new EventEnum("UNIT_ACCESSORY_RAMP", "atom.EventEnum.UNIT_ACCESSORY_RAMP.description", "atom.EventEnum.UNIT_ACCESSORY_RAMP.code", "", "", "", "Load accessory to a railcar", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_RAMP");
    public static final EventEnum UNIT_ACCESSORY_RECEIVE = new EventEnum("UNIT_ACCESSORY_RECEIVE", "atom.EventEnum.UNIT_ACCESSORY_RECEIVE.description", "atom.EventEnum.UNIT_ACCESSORY_RECEIVE.code", "", "", "", "Accessory receive from a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_RECEIVE");
    public static final EventEnum UNIT_ACCESSORY_REROUTE = new EventEnum("UNIT_ACCESSORY_REROUTE", "atom.EventEnum.UNIT_ACCESSORY_REROUTE.description", "atom.EventEnum.UNIT_ACCESSORY_REROUTE.code", "", "", "", "Reroute accessory", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_REROUTE");
    public static final EventEnum UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER = new EventEnum("UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER", "atom.EventEnum.UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER.description", "atom.EventEnum.UNIT_ACCESSORY_RETURN_TO_INBOUND_CARRIER.code", "", "", "", "Return Accessory to Inbound Carrier", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_RETURN_TO_INBOUND_CARRIER");
    public static final EventEnum UNIT_ACCESSORY_SHIFT_ON_CARRIER = new EventEnum("UNIT_ACCESSORY_SHIFT_ON_CARRIER", "atom.EventEnum.UNIT_ACCESSORY_SHIFT_ON_CARRIER.description", "atom.EventEnum.UNIT_ACCESSORY_SHIFT_ON_CARRIER.code", "", "", "", "Move accessory to new position on the same Carrier", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_SHIFT_ON_CARRIER");
    public static final EventEnum UNIT_ACCESSORY_YARD_MOVE = new EventEnum("UNIT_ACCESSORY_YARD_MOVE", "atom.EventEnum.UNIT_ACCESSORY_YARD_MOVE.description", "atom.EventEnum.UNIT_ACCESSORY_YARD_MOVE.code", "", "", "", "Move accessory within the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_YARD_MOVE");
    public static final EventEnum UNIT_ACCESSORY_YARD_SHIFT = new EventEnum("UNIT_ACCESSORY_YARD_SHIFT", "atom.EventEnum.UNIT_ACCESSORY_YARD_SHIFT.description", "atom.EventEnum.UNIT_ACCESSORY_YARD_SHIFT.code", "", "", "", "Internal move for yard management", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "ACCESSORY_YARD_SHIFT");
    public static final EventEnum UNIT_CARRIAGE_BRING_BACK_INTO_YARD = new EventEnum("UNIT_CARRIAGE_BRING_BACK_INTO_YARD", "atom.EventEnum.UNIT_CARRIAGE_BRING_BACK_INTO_YARD.description", "atom.EventEnum.UNIT_CARRIAGE_BRING_BACK_INTO_YARD.code", "", "", "", "Return the carriage to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_BRING_BACK_INTO_YARD");
    public static final EventEnum UNIT_CARRIAGE_BRING_TO_COMMUNITY = new EventEnum("UNIT_CARRIAGE_BRING_TO_COMMUNITY", "atom.EventEnum.UNIT_CARRIAGE_BRING_TO_COMMUNITY.description", "atom.EventEnum.UNIT_CARRIAGE_BRING_TO_COMMUNITY.code", "", "", "", "Put the Carriage back in the Community", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_BRING_BACK_TO_COMMUNITY");
    public static final EventEnum UNIT_CARRIAGE_DELIVER = new EventEnum("UNIT_CARRIAGE_DELIVER", "atom.EventEnum.UNIT_CARRIAGE_DELIVER.description", "atom.EventEnum.UNIT_CARRIAGE_DELIVER.code", "", "", "", "Deliver Carriage to a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_DELIVER");
    public static final EventEnum UNIT_CARRIAGE_DELIVER_REJECTED = new EventEnum("UNIT_CARRIAGE_DELIVER_REJECTED", "atom.EventEnum.UNIT_CARRIAGE_DELIVER_REJECTED.description", "atom.EventEnum.UNIT_CARRIAGE_DELIVER_REJECTED.code", "", "", "", "Return the Carriage to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_DELIVER_REJECTED");
    public static final EventEnum UNIT_CARRIAGE_DRAY_IN = new EventEnum("UNIT_CARRIAGE_DRAY_IN", "atom.EventEnum.UNIT_CARRIAGE_DRAY_IN.description", "atom.EventEnum.UNIT_CARRIAGE_DRAY_IN.code", "", "", "", "Carriage drayed-in", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_DRAY_IN");
    public static final EventEnum UNIT_CARRIAGE_IFT_IN = new EventEnum("UNIT_CARRIAGE_IFT_IN", "atom.EventEnum.UNIT_CARRIAGE_IFT_IN.description", "atom.EventEnum.UNIT_CARRIAGE_IFT_IN.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_IFT_IN");
    public static final EventEnum UNIT_CARRIAGE_IFT_OUT = new EventEnum("UNIT_CARRIAGE_IFT_OUT", "atom.EventEnum.UNIT_CARRIAGE_IFT_OUT.description", "atom.EventEnum.UNIT_CARRIAGE_IFT_OUT.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_IFT_OUT");
    public static final EventEnum UNIT_CARRIAGE_IN_GATE = new EventEnum("UNIT_CARRIAGE_IN_GATE", "atom.EventEnum.UNIT_CARRIAGE_IN_GATE.description", "atom.EventEnum.UNIT_CARRIAGE_IN_GATE.code", "", "", "", "Carriage entered facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_IN_GATE");
    public static final EventEnum UNIT_CARRIAGE_OUT_GATE = new EventEnum("UNIT_CARRIAGE_OUT_GATE", "atom.EventEnum.UNIT_CARRIAGE_OUT_GATE.description", "atom.EventEnum.UNIT_CARRIAGE_OUT_GATE.code", "", "", "", "Carriage exited facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_OUT_GATE");
    public static final EventEnum UNIT_CARRIAGE_POSITION_CORRECTION = new EventEnum("UNIT_CARRIAGE_POSITION_CORRECTION", "atom.EventEnum.UNIT_CARRIAGE_POSITION_CORRECTION.description", "atom.EventEnum.UNIT_CARRIAGE_POSITION_CORRECTION.code", "", "", "", "Correction of position within System", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_POSITION_CORRECTION");
    public static final EventEnum UNIT_CARRIAGE_RECEIVE = new EventEnum("UNIT_CARRIAGE_RECEIVE", "atom.EventEnum.UNIT_CARRIAGE_RECEIVE.description", "atom.EventEnum.UNIT_CARRIAGE_RECEIVE.code", "", "", "", "Carriage receive from a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_RECEIVE");
    public static final EventEnum UNIT_CARRIAGE_YARD_MOVE = new EventEnum("UNIT_CARRIAGE_YARD_MOVE", "atom.EventEnum.UNIT_CARRIAGE_YARD_MOVE.description", "atom.EventEnum.UNIT_CARRIAGE_YARD_MOVE.code", "", "", "", "Move within the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_YARD_MOVE");
    public static final EventEnum UNIT_CARRIAGE_YARD_SHIFT = new EventEnum("UNIT_CARRIAGE_YARD_SHIFT", "atom.EventEnum.UNIT_CARRIAGE_YARD_SHIFT.description", "atom.EventEnum.UNIT_CARRIAGE_YARD_SHIFT.code", "", "", "", "Internal move for yard management", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "CARRIAGE_YARD_SHIFT");
    public static final EventEnum UNIT_PAYLOAD_BRING_BACK_INTO_YARD = new EventEnum("UNIT_PAYLOAD_BRING_BACK_INTO_YARD", "atom.EventEnum.UNIT_PAYLOAD_BRING_BACK_INTO_YARD.description", "atom.EventEnum.UNIT_PAYLOAD_BRING_BACK_INTO_YARD.code", "", "", "", "Return the payload to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_BRING_BACK_INTO_YARD");
    public static final EventEnum UNIT_PAYLOAD_BRING_TO_COMMUNITY = new EventEnum("UNIT_PAYLOAD_BRING_TO_COMMUNITY", "atom.EventEnum.UNIT_PAYLOAD_BRING_TO_COMMUNITY.description", "atom.EventEnum.UNIT_PAYLOAD_BRING_TO_COMMUNITY.code", "", "", "", "Put the payload back in the Community", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_BRING_BACK_TO_COMMUNITY");
    public static final EventEnum UNIT_PAYLOAD_DELIVER = new EventEnum("UNIT_PAYLOAD_DELIVER", "atom.EventEnum.UNIT_PAYLOAD_DELIVER.description", "atom.EventEnum.UNIT_PAYLOAD_DELIVER.code", "", "", "", "Deliver payload to a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_DELIVER");
    public static final EventEnum UNIT_PAYLOAD_DELIVER_REJECTED = new EventEnum("UNIT_PAYLOAD_DELIVER_REJECTED", "atom.EventEnum.UNIT_PAYLOAD_DELIVER_REJECTED.description", "atom.EventEnum.UNIT_PAYLOAD_DELIVER_REJECTED.code", "", "", "", "Return the payload to the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_DELIVER_REJECTED");
    public static final EventEnum UNIT_PAYLOAD_DERAMP = new EventEnum("UNIT_PAYLOAD_DERAMP", "atom.EventEnum.UNIT_PAYLOAD_DERAMP.description", "atom.EventEnum.UNIT_PAYLOAD_DERAMP.code", "", "", "", "Discharge payload from a railcar", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_DERAMP");
    public static final EventEnum UNIT_PAYLOAD_DISCH = new EventEnum("UNIT_PAYLOAD_DISCH", "atom.EventEnum.UNIT_PAYLOAD_DISCH.description", "atom.EventEnum.UNIT_PAYLOAD_DISCH.code", "", "", "", "Discharge payload from a vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_DISCHARGE");
    public static final EventEnum UNIT_PAYLOAD_DRAY_IN = new EventEnum("UNIT_PAYLOAD_DRAY_IN", "atom.EventEnum.UNIT_PAYLOAD_DRAY_IN.description", "atom.EventEnum.UNIT_PAYLOAD_DRAY_IN.code", "", "", "", "Payload drayed-in", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_DRAY_IN");
    public static final EventEnum UNIT_PAYLOAD_IFT_IN = new EventEnum("UNIT_PAYLOAD_IFT_IN", "atom.EventEnum.UNIT_PAYLOAD_IFT_IN.description", "atom.EventEnum.UNIT_PAYLOAD_IFT_IN.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_IFT_IN");
    public static final EventEnum UNIT_PAYLOAD_IFT_OUT = new EventEnum("UNIT_PAYLOAD_IFT_OUT", "atom.EventEnum.UNIT_PAYLOAD_IFT_OUT.description", "atom.EventEnum.UNIT_PAYLOAD_IFT_OUT.code", "", "", "", "Inter-facility Transfer Action", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_IFT_OUT");
    public static final EventEnum UNIT_PAYLOAD_IN_GATE = new EventEnum("UNIT_PAYLOAD_IN_GATE", "atom.EventEnum.UNIT_PAYLOAD_IN_GATE.description", "atom.EventEnum.UNIT_PAYLOAD_IN_GATE.code", "", "", "", "Payload entered facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_IN_GATE");
    public static final EventEnum UNIT_PAYLOAD_IN_RAIL = new EventEnum("UNIT_PAYLOAD_IN_RAIL", "atom.EventEnum.UNIT_PAYLOAD_IN_RAIL.description", "atom.EventEnum.UNIT_PAYLOAD_IN_RAIL.code", "", "", "", "Payload entered facility via rail", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_IN_RAIL");
    public static final EventEnum UNIT_PAYLOAD_IN_VESSEL = new EventEnum("UNIT_PAYLOAD_IN_VESSEL", "atom.EventEnum.UNIT_PAYLOAD_IN_VESSEL.description", "atom.EventEnum.UNIT_PAYLOAD_IN_VESSEL.code", "", "", "", "Payload entered facility via vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_IN_VESSEL");
    public static final EventEnum UNIT_PAYLOAD_LOAD = new EventEnum("UNIT_PAYLOAD_LOAD", "atom.EventEnum.UNIT_PAYLOAD_LOAD.description", "atom.EventEnum.UNIT_PAYLOAD_LOAD.code", "", "", "", "Load Payload to a Vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_LOAD");
    public static final EventEnum UNIT_PAYLOAD_OUT_GATE = new EventEnum("UNIT_PAYLOAD_OUT_GATE", "atom.EventEnum.UNIT_PAYLOAD_OUT_GATE.description", "atom.EventEnum.UNIT_PAYLOAD_OUT_GATE.code", "", "", "", "Payload exited facility via gate", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_OUT_GATE");
    public static final EventEnum UNIT_PAYLOAD_OUT_RAIL = new EventEnum("UNIT_PAYLOAD_OUT_RAIL", "atom.EventEnum.UNIT_PAYLOAD_OUT_RAIL.description", "atom.EventEnum.UNIT_PAYLOAD_OUT_RAIL.code", "", "", "", "Payload exited facility via rail", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_OUT_RAIL");
    public static final EventEnum UNIT_PAYLOAD_OUT_VESSEL = new EventEnum("UNIT_PAYLOAD_OUT_VESSEL", "atom.EventEnum.UNIT_PAYLOAD_OUT_VESSEL.description", "atom.EventEnum.UNIT_PAYLOAD_OUT_VESSEL.code", "", "", "", "Payload exited facility via vessel", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_OUT_VESSEL");
    public static final EventEnum UNIT_PAYLOAD_POSITION_CORRECTION = new EventEnum("UNIT_PAYLOAD_POSITION_CORRECTION", "atom.EventEnum.UNIT_PAYLOAD_POSITION_CORRECTION.description", "atom.EventEnum.UNIT_PAYLOAD_POSITION_CORRECTION.code", "", "", "", "Correction of position within System", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_POSITION_CORRECTION");
    public static final EventEnum UNIT_PAYLOAD_RAMP = new EventEnum("UNIT_PAYLOAD_RAMP", "atom.EventEnum.UNIT_PAYLOAD_RAMP.description", "atom.EventEnum.UNIT_PAYLOAD_RAMP.code", "", "", "", "Load payload to a railcar", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_RAMP");
    public static final EventEnum UNIT_PAYLOAD_RECEIVE = new EventEnum("UNIT_PAYLOAD_RECEIVE", "atom.EventEnum.UNIT_PAYLOAD_RECEIVE.description", "atom.EventEnum.UNIT_PAYLOAD_RECEIVE.code", "", "", "", "Payload receive from a Truck", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_RECEIVE");
    public static final EventEnum UNIT_PAYLOAD_REROUTE = new EventEnum("UNIT_PAYLOAD_REROUTE", "atom.EventEnum.UNIT_PAYLOAD_REROUTE.description", "atom.EventEnum.UNIT_PAYLOAD_REROUTE.code", "", "", "", "Reroute payload", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_REROUTE");
    public static final EventEnum UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER = new EventEnum("UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER", "atom.EventEnum.UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER.description", "atom.EventEnum.UNIT_PAYLOAD_RETURN_TO_INBOUND_CARRIER.code", "", "", "", "Return Payload to Inbound Carrier", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_RETURN_TO_INBOUND_CARRIER");
    public static final EventEnum UNIT_PAYLOAD_ROLL = new EventEnum("UNIT_PAYLOAD_ROLL", "atom.EventEnum.UNIT_PAYLOAD_ROLL.description", "atom.EventEnum.UNIT_PAYLOAD_ROLL.code", "", "", "", "Roll a payload", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_ROLL");
    public static final EventEnum UNIT_PAYLOAD_SHIFT_ON_CARRIER = new EventEnum("UNIT_PAYLOAD_SHIFT_ON_CARRIER", "atom.EventEnum.UNIT_PAYLOAD_SHIFT_ON_CARRIER.description", "atom.EventEnum.UNIT_PAYLOAD_SHIFT_ON_CARRIER.code", "", "", "", "Move payload to new position on the same Carrier", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_SHIFT_ON_CARRIER");
    public static final EventEnum UNIT_PAYLOAD_YARD_MOVE = new EventEnum("UNIT_PAYLOAD_YARD_MOVE", "atom.EventEnum.UNIT_PAYLOAD_YARD_MOVE.description", "atom.EventEnum.UNIT_PAYLOAD_YARD_MOVE.code", "", "", "", "Move payload within the Yard", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_YARD_MOVE");
    public static final EventEnum UNIT_PAYLOAD_YARD_SHIFT = new EventEnum("UNIT_PAYLOAD_YARD_SHIFT", "atom.EventEnum.UNIT_PAYLOAD_YARD_SHIFT.description", "atom.EventEnum.UNIT_PAYLOAD_YARD_SHIFT.code", "", "", "", "Internal move for yard management", false, true, true, true, false, LogicalEntityEnum.UNIT, "", "", "PAYLOAD_YARD_SHIFT");
    public static final EventEnum UNIT_TRANSLOAD_STRIP = new EventEnum("UNIT_TRANSLOAD_STRIP", "atom.EventEnum.UNIT_TRANSLOAD_STRIP.description", "atom.EventEnum.UNIT_TRANSLOAD_STRIP.code", "", "", "", "Unit strip in transload", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TRANSLOAD_STRIP");
    public static final EventEnum UNIT_TRANSLOAD_TO_EMPTY = new EventEnum("UNIT_TRANSLOAD_TO_EMPTY", "atom.EventEnum.UNIT_TRANSLOAD_TO_EMPTY.description", "atom.EventEnum.UNIT_TRANSLOAD_TO_EMPTY.code", "", "", "", "New Empty unit in transload", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TRANSLOAD_TO_EMPTY");
    public static final EventEnum UNIT_TRANSLOAD_STUFF = new EventEnum("UNIT_TRANSLOAD_STUFF", "atom.EventEnum.UNIT_TRANSLOAD_STUFF.description", "atom.EventEnum.UNIT_TRANSLOAD_STUFF.code", "", "", "", "Unit stuff in transload", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TRANSLOAD_STUFF");
    public static final EventEnum UNIT_TRANSLOAD_TO_FULL = new EventEnum("UNIT_TRANSLOAD_TO_FULL", "atom.EventEnum.UNIT_TRANSLOAD_TO_FULL.description", "atom.EventEnum.UNIT_TRANSLOAD_TO_FULL.code", "", "", "", "New Full unit in transload", true, true, false, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_TRANSLOAD_TO_FULL");
    public static final EventEnum UNIT_MISIDENTIFIED = new EventEnum("UNIT_MISIDENTIFIED", "atom.EventEnum.UNIT_MISIDENTIFIED.description", "atom.EventEnum.UNIT_MISIDENTIFIED.code", "", "", "", "Unit Misidentified", false, true, true, true, true, LogicalEntityEnum.UNIT, "", "", "UNIT_MISIDENTIFIED");
    public static final EventEnum UNKNOWN_DOOR_DIRECTION_ENCOUNTERED = new EventEnum("UNKNOWN_DOOR_DIRECTION_ENCOUNTERED", "atom.EventEnum.UNKNOWN_DOOR_DIRECTION_ENCOUNTERED.description", "atom.EventEnum.UNKNOWN_DOOR_DIRECTION_ENCOUNTERED.code", "", "", "", "Unit Door Direction changed: UNKNOWN Door Direction Encountered", false, false, true, true, true, LogicalEntityEnum.UNIT, "", "", "UNKNOWN_DOOR_DIRECTION_ENCOUNTERED");
    public static final EventEnum WI_CREATED_FOR_UNPLANNED_DISCH = new EventEnum("WI_CREATED_FOR_UNPLANNED_DISCH", "atom.EventEnum.WI_CREATED_FOR_UNPLANNED_DISCH.description", "atom.EventEnum.WI_CREATED_FOR_UNPLANNED_DISCH.code", "", "", "", "Work Instruction created for unplanned discharge", false, true, true, true, true, LogicalEntityEnum.CHE, "", "", "WI_CREATED_FOR_UNPLANNED_DISCH");
    public static final EventEnum AGV_SCHEDULER_MOVE_CREATION_FAILURE = new EventEnum("AGV_SCHEDULER_MOVE_CREATION_FAILURE", "atom.EventEnum.AGV_SCHEDULER_MOVE_CREATION_FAILURE.description", "atom.EventEnum.AGV_SCHEDULER_MOVE_CREATION_FAILURE.code", "", "", "", "Could not create AGV move for scheduling", false, true, true, true, true, LogicalEntityEnum.UNIT, "", "", "AGV_SCHEDULER_MOVE_CREATION_FAILURE");
    public static final EventEnum WQ_SHIFT_FOR_POW_UPDATED = new EventEnum("WQ_SHIFT_FOR_POW_UPDATED", "atom.EventEnum.WQ_SHIFT_FOR_POW_UPDATED.description", "atom.EventEnum.WQ_SHIFT_FOR_POW_UPDATED.code", "", "", "", "Work Queue first shift updated", false, false, true, true, false, LogicalEntityEnum.CHE, "", "", "WQ_SHIFT_FOR_POW_UPDATED");
    public static final EventEnum EMULATION_SCHEDULED_EXCEPTION_CHE = new EventEnum("EMULATION_SCHEDULED_EXCEPTION_CHE", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_CHE.description", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_CHE.code", "", "", "", "A scheduled exception applied to a Che (emulation testing)", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "EMULATION_SCHEDULED_EXCEPTION_CHE");
    public static final EventEnum EMULATION_SCHEDULED_EXCEPTION_YARD = new EventEnum("EMULATION_SCHEDULED_EXCEPTION_YARD", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_YARD.description", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_YARD.code", "", "", "", "A scheduled exception applied to a Yard (emulation testing)", false, false, true, true, true, LogicalEntityEnum.YARD, "", "", "EMULATION_SCHEDULED_EXCEPTION_YARD");
    public static final EventEnum EMULATION_SCHEDULED_EXCEPTION_UNIT = new EventEnum("EMULATION_SCHEDULED_EXCEPTION_UNIT", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_UNIT.description", "atom.EventEnum.EMULATION_SCHEDULED_EXCEPTION_UNIT.code", "", "", "", "A scheduled exception applied to a Unit (emulation testing)", false, false, true, true, true, LogicalEntityEnum.UNIT, "", "", "EMULATION_SCHEDULED_EXCEPTION_UNIT");
    public static final EventEnum EMULATION_MOVE_EXCEPTION_YARD = new EventEnum("EMULATION_MOVE_EXCEPTION_YARD", "atom.EventEnum.EMULATION_MOVE_EXCEPTION_YARD.description", "atom.EventEnum.EMULATION_MOVE_EXCEPTION_YARD.code", "", "", "", "A move based exception (emulation testing)", false, false, true, true, true, LogicalEntityEnum.YARD, "", "", "EMULATION_MOVE_EXCEPTION_YARD");
    public static final EventEnum TZ_DECKER_FAIL_TO_DECK = new EventEnum("TZ_DECKER_FAIL_TO_DECK", "atom.EventEnum.TZ_DECKER_FAIL_TO_DECK.description", "atom.EventEnum.TZ_DECKER_FAIL_TO_DECK.code", "", "", "", "Tz Decker failed to deck", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "TZ_DECKER_FAIL_TO_DECK");
    public static final EventEnum AHI_MBEAN_FAILURE = new EventEnum("AHI_MBEAN_FAILURE", "atom.EventEnum.AHI_MBEAN_FAILURE.description", "atom.EventEnum.AHI_MBEAN_FAILURE.code", "", "", "", "Store MBean failed value", false, true, true, true, false, LogicalEntityEnum.MBEAN, "", "", "AHI_MBEAN_FAILURE");
    public static final EventEnum AHI_LOG_FAILURE = new EventEnum("AHI_LOG_FAILURE", "atom.EventEnum.AHI_LOG_FAILURE.description", "atom.EventEnum.AHI_LOG_FAILURE.code", "", "", "", "Store matched log message", false, true, true, true, false, LogicalEntityEnum.LOGMSG, "", "", "AHI_LOG_FAILURE");
    public static final EventEnum AHI_NOTIFICATION = new EventEnum("AHI_NOTIFICATION", "atom.EventEnum.AHI_NOTIFICATION.description", "atom.EventEnum.AHI_NOTIFICATION.code", "", "", "", "AHI Notification event", false, true, true, true, false, LogicalEntityEnum.AHI, "", "", "AHI_NOTIFICATION");
    public static final EventEnum NULL_UNIT_STOW_FACTOR_ENCOUNTERED = new EventEnum("NULL_UNIT_STOW_FACTOR_ENCOUNTERED", "atom.EventEnum.NULL_UNIT_STOW_FACTOR_ENCOUNTERED.description", "atom.EventEnum.NULL_UNIT_STOW_FACTOR_ENCOUNTERED.code", "", "", "", "Unit StowFactor is Null: Please ensure Crane Scheduler is running with N4FACT privilege", false, false, true, true, true, LogicalEntityEnum.UNIT, "", "", "NULL_UNIT_STOW_FACTOR_ENCOUNTERED");
    public static final EventEnum UNIT_VERMAS_EDI_CANCEL = new EventEnum("UNIT_VERMAS_EDI_CANCEL", "atom.EventEnum.UNIT_VERMAS_EDI_CANCEL.description", "atom.EventEnum.UNIT_VERMAS_EDI_CANCEL.code", "", "", "", "Vermas cancelled unit", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VERMAS_EDI_CANCEL");
    public static final EventEnum UNIT_VERMAS_EDI_REPLACE = new EventEnum("UNIT_VERMAS_EDI_REPLACE", "atom.EventEnum.UNIT_VERMAS_EDI_REPLACE.description", "atom.EventEnum.UNIT_VERMAS_EDI_REPLACE.code", "", "", "", "Vermas replaced unit", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VERMAS_EDI_REPLACE");
    public static final EventEnum UNIT_VERMAS_EDI_CREATED = new EventEnum("UNIT_VERMAS_EDI_CREATED", "atom.EventEnum.UNIT_VERMAS_EDI_CREATED.description", "atom.EventEnum.UNIT_VERMAS_EDI_CREATED.code", "", "", "", "Vermas created unit", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VERMAS_EDI_CREATED");
    public static final EventEnum UNIT_VERMAS_EDI_UPDATED = new EventEnum("UNIT_VERMAS_EDI_UPDATED", "atom.EventEnum.UNIT_VERMAS_EDI_UPDATED.description", "atom.EventEnum.UNIT_VERMAS_EDI_UPDATED.code", "", "", "", "Vermas updated the unit", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VERMAS_EDI_UPDATED");
    public static final EventEnum CHE_ERROR_CHE_IS_UNAVAILABLE = new EventEnum("CHE_ERROR_CHE_IS_UNAVAILABLE", "atom.EventEnum.CHE_ERROR_CHE_IS_UNAVAILABLE.description", "atom.EventEnum.CHE_ERROR_CHE_IS_UNAVAILABLE.code", "", "", "", "CHE Exception Encountered: CHE Is Unavailable", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_ERROR_CHE_IS_UNAVAILABLE");
    public static final EventEnum UNIT_VGM_ASSIGNED = new EventEnum("UNIT_VGM_ASSIGNED", "atom.EventEnum.UNIT_VGM_ASSIGNED.description", "atom.EventEnum.UNIT_VGM_ASSIGNED.code", "", "", "", "Unit VGM Assigned", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VGM_ASSIGNED");
    public static final EventEnum UNIT_VGM_UPDATED = new EventEnum("UNIT_VGM_UPDATED", "atom.EventEnum.UNIT_VGM_UPDATED.description", "atom.EventEnum.UNIT_VGM_UPDATED.code", "", "", "", "Unit VGM Updated", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VGM_UPDATED");
    public static final EventEnum UNIT_VGM_CANCEL = new EventEnum("UNIT_VGM_CANCEL", "atom.EventEnum.UNIT_VGM_CANCEL.description", "atom.EventEnum.UNIT_VGM_CANCEL.code", "", "", "", "Unit VGM Cancelled", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_VGM_CANCEL");
    public static final EventEnum UNIT_EQUIPMENT_MEASURED_WEIGHT = new EventEnum("UNIT_EQUIPMENT_MEASURED_WEIGHT", "atom.EventEnum.UNIT_EQUIPMENT_MEASURED_WEIGHT.description", "atom.EventEnum.UNIT_EQUIPMENT_MEASURED_WEIGHT.code", "", "", "", "Unit Measured Weight recorded", false, false, true, true, false, LogicalEntityEnum.UNIT, "", "", "UNIT_EQUIPMENT_MEASURED_WEIGHT");
    public static final EventEnum UNIT_DOOR_DIRECTION_CHANGED = new EventEnum("UNIT_DOOR_DIRECTION_CHANGED", "atom.EventEnum.UNIT_DOOR_DIRECTION_CHANGED.description", "atom.EventEnum.UNIT_DOOR_DIRECTION_CHANGED.code", "", "", "", "Unit door direction has changed: door direction differs from Work instruction", false, false, true, true, true, LogicalEntityEnum.UNIT, "", "", "UNIT_DOOR_DIRECTION_CHANGED");
    public static final EventEnum CHE_SCHEDULER_ALERT = new EventEnum("CHE_SCHEDULER_ALERT", "atom.EventEnum.CHE_SCHEDULER_ALERT.description", "atom.EventEnum.CHE_SCHEDULER_ALERT.code", "", "", "", "CHE Scheduler Alert for insufficient Scheduling", false, false, true, true, true, LogicalEntityEnum.CHE, "", "", "CHE_SCHEDULER_ALERT");

    public static EventEnum getEnum(String inName) {
        return (EventEnum) EventEnum.getEnum(EventEnum.class, (String)inName);
    }

    public static Map getEnumMap() {
        return EventEnum.getEnumMap(EventEnum.class);
    }

    public static List getEnumList() {
        return EventEnum.getEnumList(EventEnum.class);
    }

    public static Collection getList() {
        return EventEnum.getEnumList(EventEnum.class);
    }

    public static Iterator iterator() {
        return EventEnum.iterator(EventEnum.class);
    }

    protected EventEnum(String inKey, String inDescriptionResKey, String inCodeResKey, String inBackgroundColor, String inForegroundColor, String inIconIdPath, String inDescription, boolean inIsBillable, boolean inIsFacilityService, boolean inIsNotifiable, boolean inIsEventRecorded, boolean inIsAcknowledgeable, LogicalEntityEnum inEntityType, String inReplacedBy, String inFunctionalArea, String inExternalId) {
        super(inKey, inDescriptionResKey, inCodeResKey, inBackgroundColor, inForegroundColor, inIconIdPath, inDescription, inIsBillable, inIsFacilityService, inIsNotifiable, inIsEventRecorded, inIsAcknowledgeable, inEntityType, inReplacedBy, inFunctionalArea, inExternalId);
    }

    public String getMappingClassName() {
        return "com.navis.argo.persistence.atoms.UserTypeEventEnum";
    }
}
